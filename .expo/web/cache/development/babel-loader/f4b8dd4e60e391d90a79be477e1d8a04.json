{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\DELL PC\\\\Downloads\\\\GroovePacker\\\\src\\\\components\\\\scanpack\\\\scanned_items.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport styles from \"../../style/scanpack\";\nimport globalStyles from \"../../style/global\";\nimport { LinearGradient } from 'expo-linear-gradient';\nimport backImage from \"../../../assets/bg_right.png\";\nimport placeholder from \"../../../assets/placeholder.png\";\nvar count = 0;\n\nvar ScannedItems = function (_React$Component) {\n  _inherits(ScannedItems, _React$Component);\n\n  var _super = _createSuper(ScannedItems);\n\n  function ScannedItems(props) {\n    var _this;\n\n    _classCallCheck(this, ScannedItems);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      count: 0,\n      scannedItemPerPage: 1\n    };\n    return _this;\n  }\n\n  _createClass(ScannedItems, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var windowWidth = Dimensions.get('window').width;\n      var windowHeight = Dimensions.get('window').height;\n      var props = this.props;\n      var localCount = 0;\n      this.props.order && this.props.order.order && this.props.order.order.scanned_items && this.props.order.order.scanned_items.length > 0 && this.props.order.order.scanned_items.map(function (item) {\n        localCount = localCount + item.scanned_qty;\n      });\n      count = localCount;\n      var perPage = this.state.scannedItemPerPage * 10;\n      return React.createElement(View, {\n        style: Platform.OS === \"web\" ? styles.scannedItemContainerWeb : styles.scannedItemContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 7\n        }\n      }, Platform.OS === \"web\" ? React.createElement(View, {\n        style: {\n          flex: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }\n      }, windowWidth >= 900 ? React.createElement(ImageBackground, {\n        source: backImage,\n        style: {\n          height: \"100%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: styles.scannedItemTextWeb,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 23\n        }\n      }, count, \" Scanned Items\"), props.order && props.order.order && props.order.order.scanned_items.length > 0 ? React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 29\n        }\n      }, props.order.order.scanned_items.slice(0, perPage).map(function (item, index) {\n        return React.createElement(View, {\n          key: index + 1,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 35\n          }\n        }, item.scanned_qty > 0 && React.createElement(View, {\n          key: index,\n          style: {\n            flexDirection: \"row\",\n            margin: 1,\n            borderRadius: 20,\n            borderWidth: 3,\n            backgroundColor: \"#336598\",\n            borderColor: \"black\",\n            padding: 5\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 41\n          }\n        }, React.createElement(View, {\n          style: {\n            flex: 20\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 43\n          }\n        }, React.createElement(TouchableOpacity, {\n          style: {\n            backgroundColor: \"#fff\",\n            paddingLeft: 5,\n            paddingRight: 5,\n            borderTopLeftRadius: 10,\n            borderTopRightRadius: 10\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 45\n          }\n        }, React.createElement(Text, {\n          numberOfLines: item.name && item.name.length <= 32 ? 1 : 2,\n          style: item.name && item.name.length <= 32 ? {\n            fontSize: 18,\n            maxWidth: \"75%\"\n          } : {\n            fontSize: 15,\n            maxWidth: \"75%\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 47\n          }\n        }, item.name)), React.createElement(Text, {\n          numberOfLines: 1,\n          ellipsizeMode: \"tail\",\n          style: {\n            color: \"#fff\",\n            fontSize: 18,\n            maxWidth: \"70%\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 45\n          }\n        }, item.sku), React.createElement(View, {\n          style: {\n            backgroundColor: \"#95b0e5\",\n            paddingLeft: 3,\n            paddingRight: 3\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 45\n          }\n        }, React.createElement(View, {\n          style: {\n            maxWidth: \"75%\",\n            flexDirection: \"row\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 47\n          }\n        }, item.location !== null && item.location !== \"\" && item.location !== undefined && React.createElement(View, {\n          style: {\n            flex: 1,\n            flexDirection: \"row\",\n            alignItems: \"baseline\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 53\n          }\n        }, React.createElement(Text, {\n          style: {\n            fontSize: 10\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 55\n          }\n        }, \"L1:\"), React.createElement(Text, {\n          numberOfLines: 1,\n          ellipsizeMode: \"tail\",\n          style: {\n            fontSize: 15,\n            fontWeight: \"bold\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 55\n          }\n        }, item.location)), item.custom_product_1 !== null && item.custom_product_1 !== \"\" && item.custom_product_1 !== undefined && React.createElement(View, {\n          style: {\n            flex: 1,\n            flexDirection: \"row\",\n            alignItems: \"baseline\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 53\n          }\n        }, React.createElement(Text, {\n          style: {\n            fontSize: 10\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 55\n          }\n        }, \"C1:\"), React.createElement(Text, {\n          numberOfLines: 1,\n          ellipsizeMode: \"tail\",\n          style: {\n            fontSize: 15,\n            fontWeight: \"bold\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 55\n          }\n        }, item.custom_product_1)))), React.createElement(View, {\n          style: {\n            backgroundColor: \"#d3def4\",\n            paddingLeft: 3,\n            paddingRight: 3,\n            borderBottomLeftRadius: 10,\n            borderBottomRightRadius: 10\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 45\n          }\n        }, React.createElement(Text, {\n          style: {\n            fontSize: 18,\n            maxWidth: \"75%\"\n          },\n          numberOfLines: 1,\n          ellipsizeMode: \"tail\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 47\n          }\n        }, item && item.barcodes.length > 0 && item.barcodes[0].barcode))), React.createElement(View, {\n          style: {\n            flex: 5,\n            borderBottomRightRadius: 10,\n            borderTopRightRadius: 10,\n            position: \"absolute\",\n            right: 4,\n            width: \"25%\",\n            height: \"100%\",\n            bottom: 0\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 43\n          }\n        }, React.createElement(View, {\n          style: {\n            backgroundColor: \"#fff\",\n            shadowColor: \"#000\",\n            shadowOffset: {\n              width: 0,\n              height: 0\n            },\n            shadowOpacity: 1,\n            shadowRadius: 10,\n            elevation: 3,\n            borderRadius: 10,\n            borderWidth: 4,\n            borderColor: \"#336598\",\n            height: \"100%\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 45\n          }\n        }, React.createElement(Text, {\n          style: {\n            position: \"absolute\",\n            textAlign: \"center\",\n            fontSize: 15,\n            fontWeight: \"600\",\n            backgroundColor: \"#fff\",\n            opacity: 0.7,\n            bottom: 0,\n            right: 0,\n            left: 0,\n            marginLeft: \"auto\",\n            borderRadius: 10,\n            marginRight: \"auto\",\n            zIndex: 999\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 49\n          }\n        }, item.scanned_qty, \"/\", item.qty_remaining + item.scanned_qty), React.createElement(Image, {\n          source: {\n            uri: item.images && item.images.length > 0 && item.images[0].image !== \"\" ? item.images[0].image : placeholder\n          },\n          style: {\n            height: \"100%\",\n            width: \"100%\",\n            resizeMode: 'contain',\n            borderRadius: 10\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 49\n          }\n        })))));\n      })) : React.createElement(View, {\n        style: globalStyles.p_10,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 27\n        }\n      }, React.createElement(Text, {\n        style: styles.scannedItemNameText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 29\n        }\n      }, \"Item not available in the scanned list\")), props.order.order.scanned_items && props.order.order.scanned_items.length >= perPage && React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 29\n        }\n      }, props.order.order.scanned_items && props.order.order.scanned_items.length >= perPage ? React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          var perPage = _this2.state.scannedItemPerPage + 1;\n\n          _this2.setState({\n            scannedItemPerPage: perPage\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 35\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: \"#fff\",\n          fontWeight: \"bold\",\n          fontSize: 14,\n          zIndex: 99999,\n          textShadowColor: '#000',\n          textShadowOffset: {\n            width: 1,\n            height: 1\n          },\n          display: \"flex\",\n          justifyContent: \"center\",\n          padding: 8,\n          background: \"#41970f\",\n          marginRight: \"auto\",\n          marginLeft: \"auto\",\n          borderRadius: 5,\n          marginTop: 2\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 37\n        }\n      }, \"Show More\")) : React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          var perPage = 1;\n\n          _this2.setState({\n            scannedItemPerPage: perPage\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 35\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: \"#fff\",\n          fontWeight: \"bold\",\n          fontSize: 14,\n          zIndex: 99999,\n          textShadowColor: '#000',\n          textShadowOffset: {\n            width: 1,\n            height: 1\n          },\n          display: \"flex\",\n          justifyContent: \"center\",\n          padding: 8,\n          background: \"#f54400\",\n          marginRight: \"auto\",\n          marginLeft: \"auto\",\n          borderRadius: 5,\n          marginTop: 2\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 37\n        }\n      }, \"Reset\")))) : React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 21\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: props.navButton,\n        style: {\n          position: \"fixed\",\n          top: \"35%\",\n          backgroundColor: \"rgba( 225 ,225 ,225 , 0.7)\",\n          writingMode: \"vertical-rl\",\n          left: 0,\n          borderTopRightRadius: 5,\n          borderBottomRightRadius: 5,\n          zIndex: 999,\n          height: 150,\n          textAlign: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 23\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: \"#000\",\n          padding: 15\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 43\n        }\n      }, \"Scan & Pack\")), React.createElement(View, {\n        style: {\n          height: windowHeight - 90,\n          width: \"100%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 23\n        }\n      }, props.order && props.order.order && props.order.order.scanned_items.length > 0 ? props.order.order.scanned_items.map(function (item, index) {\n        return React.createElement(React.Fragment, {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 33\n          }\n        }, item.scanned_qty > 0 && React.createElement(View, {\n          key: index,\n          style: {\n            flexDirection: \"row\",\n            margin: 1,\n            borderRadius: 20,\n            borderWidth: 4,\n            backgroundColor: \"#336598\",\n            borderColor: \"black\",\n            padding: 10\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 39\n          }\n        }, React.createElement(View, {\n          style: {\n            flex: 20\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 41\n          }\n        }, React.createElement(TouchableOpacity, {\n          style: {\n            backgroundColor: \"#fff\",\n            paddingLeft: 5,\n            paddingRight: 5,\n            borderTopLeftRadius: 10,\n            borderTopRightRadius: 10\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 43\n          }\n        }, React.createElement(Text, {\n          numberOfLines: 2,\n          style: item.name && item.name.length <= 32 ? {\n            fontSize: 20,\n            maxWidth: \"75%\"\n          } : {\n            fontSize: 16,\n            maxWidth: \"75%\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 45\n          }\n        }, item.name)), React.createElement(Text, {\n          numberOfLines: 1,\n          ellipsizeMode: \"tail\",\n          style: {\n            color: \"#fff\",\n            fontSize: 20,\n            fontWeight: \"600\",\n            maxWidth: \"70%\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 43\n          }\n        }, item.sku), React.createElement(View, {\n          style: {\n            backgroundColor: \"#95b0e5\",\n            paddingLeft: 3,\n            paddingRight: 3\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 43\n          }\n        }, React.createElement(View, {\n          style: {\n            maxWidth: \"75%\",\n            flexDirection: \"row\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 45\n          }\n        }, item.location !== null && item.location !== \"\" && item.location !== undefined && React.createElement(View, {\n          style: {\n            flex: 1,\n            flexDirection: \"row\",\n            alignItems: \"baseline\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 51\n          }\n        }, React.createElement(Text, {\n          style: {\n            fontSize: 12\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 53\n          }\n        }, \"L1:\"), React.createElement(Text, {\n          numberOfLines: 1,\n          ellipsizeMode: \"tail\",\n          style: {\n            fontSize: 15,\n            fontWeight: \"bold\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 53\n          }\n        }, item.location)), item.custom_product_1 !== null && item.custom_product_1 !== \"\" && item.custom_product_1 !== undefined && React.createElement(View, {\n          style: {\n            flex: 1,\n            flexDirection: \"row\",\n            alignItems: \"baseline\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 51\n          }\n        }, React.createElement(Text, {\n          style: {\n            fontSize: 12\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 53\n          }\n        }, \"C1:\"), React.createElement(Text, {\n          numberOfLines: 1,\n          ellipsizeMode: \"tail\",\n          style: {\n            fontSize: 15,\n            fontWeight: \"bold\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 53\n          }\n        }, item.custom_product_1)))), React.createElement(View, {\n          style: {\n            backgroundColor: \"#d3def4\",\n            paddingRight: 3,\n            paddingLeft: 3,\n            borderBottomLeftRadius: 10,\n            borderBottomRightRadius: 10\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 43\n          }\n        }, React.createElement(Text, {\n          style: {\n            fontSize: 20,\n            maxWidth: \"75%\"\n          },\n          numberOfLines: 1,\n          ellipsizeMode: \"tail\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 45\n          }\n        }, item && item.barcodes.length > 0 && item.barcodes[0].barcode))), React.createElement(View, {\n          style: {\n            flex: 5,\n            borderBottomRightRadius: 10,\n            borderTopRightRadius: 10,\n            position: \"absolute\",\n            right: 4,\n            width: \"25%\",\n            height: \"100%\",\n            bottom: 0\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 41\n          }\n        }, React.createElement(View, {\n          style: {\n            backgroundColor: \"#fff\",\n            shadowColor: \"#000\",\n            shadowOffset: {\n              width: 0,\n              height: 0\n            },\n            shadowOpacity: 1,\n            shadowRadius: 10,\n            elevation: 3,\n            borderRadius: 10,\n            borderWidth: 4,\n            borderColor: \"#336598\",\n            height: \"100%\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 43\n          }\n        }, React.createElement(Text, {\n          style: {\n            position: \"absolute\",\n            textAlign: \"center\",\n            fontSize: 18,\n            fontWeight: \"600\",\n            backgroundColor: \"#fff\",\n            opacity: 0.7,\n            bottom: 0,\n            right: 0,\n            left: 0,\n            borderRadius: 10,\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n            zIndex: 999\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 47\n          }\n        }, item.scanned_qty, \"/\", item.qty_remaining + item.scanned_qty), React.createElement(Image, {\n          source: {\n            uri: item.images && item.images.length > 0 ? item.images[0].image : placeholder\n          },\n          style: {\n            height: \"100%\",\n            width: \"100%\",\n            resizeMode: 'contain',\n            borderRadius: 10\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 47\n          }\n        })))));\n      }) : React.createElement(View, {\n        style: globalStyles.p_10,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 27\n        }\n      }, React.createElement(Text, {\n        style: styles.scannedItemNameText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 29\n        }\n      }, \"Item not available in the scanned list\")), props.order.order.scanned_items && props.order.order.scanned_items.length >= perPage && React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 29\n        }\n      }, props.order.order.scanned_items && props.order.order.scanned_items.length >= perPage ? React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          var perPage = _this2.state.scannedItemPerPage + 1;\n\n          _this2.setState({\n            scannedItemPerPage: perPage\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 33\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: \"#fff\",\n          fontWeight: \"bold\",\n          fontSize: 14,\n          zIndex: 99999,\n          textShadowColor: '#000',\n          textShadowOffset: {\n            width: 1,\n            height: 1\n          },\n          display: \"flex\",\n          justifyContent: \"center\",\n          padding: 8,\n          background: \"#41970f\",\n          marginRight: \"auto\",\n          marginLeft: \"auto\",\n          borderRadius: 5,\n          marginTop: 2\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 35\n        }\n      }, \"Show More\")) : React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          var perPage = 1;\n\n          _this2.setState({\n            scannedItemPerPage: perPage\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 33\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: \"#fff\",\n          fontWeight: \"bold\",\n          fontSize: 14,\n          zIndex: 99999,\n          textShadowColor: '#000',\n          textShadowOffset: {\n            width: 1,\n            height: 1\n          },\n          display: \"flex\",\n          justifyContent: \"center\",\n          padding: 8,\n          background: \"#f54400\",\n          marginRight: \"auto\",\n          marginLeft: \"auto\",\n          borderRadius: 5,\n          marginTop: 2\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 35\n        }\n      }, \"Reset\")))))) : React.createElement(View, {\n        style: {\n          height: windowHeight - 90,\n          width: \"100%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 13\n        }\n      }, props.order && props.order.order && props.order.order.scanned_items.length > 0 ? props.order.order.scanned_items.map(function (item, index) {\n        return React.createElement(React.Fragment, {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 23\n          }\n        }, item.scanned_qty > 0 && React.createElement(View, {\n          key: index,\n          style: {\n            flexDirection: \"row\",\n            margin: 0,\n            borderRadius: 30,\n            borderWidth: 4,\n            backgroundColor: \"#336598\",\n            borderColor: \"black\",\n            padding: 10\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 29\n          }\n        }, React.createElement(View, {\n          style: {\n            flex: 20\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 373,\n            columnNumber: 31\n          }\n        }, React.createElement(TouchableOpacity, {\n          style: {\n            backgroundColor: \"#fff\",\n            padding: 5,\n            borderTopLeftRadius: 20,\n            borderTopRightRadius: 20\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 374,\n            columnNumber: 33\n          }\n        }, React.createElement(Text, {\n          numberOfLines: 2,\n          style: item.name && item.name.length <= 32 ? {\n            fontSize: 20,\n            maxWidth: \"75%\"\n          } : {\n            fontSize: 16,\n            maxWidth: \"75%\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 35\n          }\n        }, item.name)), React.createElement(Text, {\n          numberOfLines: 1,\n          ellipsizeMode: \"tail\",\n          style: {\n            color: \"#fff\",\n            fontSize: 20,\n            fontWeight: \"600\",\n            maxWidth: \"70%\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 33\n          }\n        }, item.sku), React.createElement(View, {\n          style: {\n            backgroundColor: \"#95b0e5\",\n            paddingLeft: 3,\n            paddingRight: 3\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 33\n          }\n        }, React.createElement(View, {\n          style: {\n            maxWidth: \"70%\",\n            flexDirection: \"row\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 392,\n            columnNumber: 35\n          }\n        }, item.location !== null && item.location !== \"\" && item.location !== undefined && React.createElement(View, {\n          style: {\n            flex: 1,\n            flexDirection: \"row\",\n            alignItems: \"baseline\",\n            height: 25\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 41\n          }\n        }, React.createElement(Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 396,\n            columnNumber: 43\n          }\n        }, \"L1:\"), React.createElement(Text, {\n          numberOfLines: 1,\n          ellipsizeMode: \"tail\",\n          style: {\n            fontSize: 20,\n            fontWeight: \"bold\",\n            paddingRight: 10\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 397,\n            columnNumber: 43\n          }\n        }, item.location)), item.custom_product_1 !== null && item.custom_product_1 !== \"\" && item.custom_product_1 !== undefined && React.createElement(View, {\n          style: {\n            flex: 1,\n            flexDirection: \"row\",\n            alignItems: \"baseline\",\n            height: 25\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 407,\n            columnNumber: 41\n          }\n        }, React.createElement(Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 408,\n            columnNumber: 43\n          }\n        }, \"C1:\"), React.createElement(Text, {\n          numberOfLines: 1,\n          ellipsizeMode: \"tail\",\n          style: {\n            fontSize: 20,\n            fontWeight: \"bold\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 409,\n            columnNumber: 43\n          }\n        }, item.custom_product_1)))), React.createElement(View, {\n          style: {\n            backgroundColor: \"#d3def4\",\n            padding: 3,\n            borderBottomLeftRadius: 20,\n            borderBottomRightRadius: 20\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 419,\n            columnNumber: 33\n          }\n        }, React.createElement(Text, {\n          style: {\n            fontSize: 20,\n            maxWidth: \"75%\"\n          },\n          numberOfLines: 1,\n          ellipsizeMode: \"tail\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 420,\n            columnNumber: 35\n          }\n        }, item && item.barcodes.length > 0 && item.barcodes[0].barcode))), React.createElement(View, {\n          style: {\n            flex: 5,\n            borderBottomRightRadius: 12,\n            borderTopRightRadius: 12,\n            position: \"absolute\",\n            right: 6,\n            width: \"25%\",\n            height: \"100%\",\n            bottom: 0\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 433,\n            columnNumber: 31\n          }\n        }, React.createElement(View, {\n          style: {\n            backgroundColor: \"#fff\",\n            shadowColor: \"#000\",\n            shadowOffset: {\n              width: -5,\n              height: 2\n            },\n            shadowOpacity: 0.25,\n            shadowRadius: 3.84,\n            elevation: 3,\n            borderRadius: 12,\n            borderWidth: 8,\n            borderColor: \"#336598\",\n            height: \"100%\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 434,\n            columnNumber: 33\n          }\n        }, React.createElement(Text, {\n          style: {\n            position: \"absolute\",\n            textAlign: \"center\",\n            fontSize: 18,\n            fontWeight: \"600\",\n            backgroundColor: \"#fff\",\n            opacity: 0.7,\n            bottom: 0,\n            right: 0,\n            left: 0,\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n            zIndex: 999\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 435,\n            columnNumber: 37\n          }\n        }, item.scanned_qty, \"/\", item.qty_remaining + item.scanned_qty), React.createElement(Image, {\n          source: {\n            uri: item.images && item.images.length > 0 ? item.images[0].image : placeholder\n          },\n          style: {\n            height: \"100%\",\n            width: \"100%\",\n            resizeMode: 'contain',\n            borderRadius: 12\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 438,\n            columnNumber: 37\n          }\n        })))));\n      }) : React.createElement(View, {\n        style: globalStyles.p_10,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 448,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: styles.scannedItemNameText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 449,\n          columnNumber: 19\n        }\n      }, \"Item not available in the scanned list\"))));\n    }\n  }]);\n\n  return ScannedItems;\n}(React.Component);\n\nexport { ScannedItems as default };","map":{"version":3,"sources":["C:/Users/DELL PC/Downloads/GroovePacker/src/components/scanpack/scanned_items.js"],"names":["React","useState","useEffect","styles","globalStyles","LinearGradient","backImage","placeholder","count","ScannedItems","props","state","scannedItemPerPage","windowWidth","Dimensions","get","width","windowHeight","height","localCount","order","scanned_items","length","map","item","scanned_qty","perPage","Platform","OS","scannedItemContainerWeb","scannedItemContainer","flex","scannedItemTextWeb","slice","index","flexDirection","margin","borderRadius","borderWidth","backgroundColor","borderColor","padding","paddingLeft","paddingRight","borderTopLeftRadius","borderTopRightRadius","name","fontSize","maxWidth","color","sku","location","undefined","alignItems","fontWeight","custom_product_1","borderBottomLeftRadius","borderBottomRightRadius","barcodes","barcode","position","right","bottom","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","textAlign","opacity","left","marginLeft","marginRight","zIndex","qty_remaining","uri","images","image","resizeMode","p_10","scannedItemNameText","setState","textShadowColor","textShadowOffset","display","justifyContent","background","marginTop","navButton","top","writingMode","Component"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { View, Text, ImageBackground ,Image, Dimensions , TouchableOpacity , Platform , ScrollView } from 'react-native';\nimport styles from '../../style/scanpack';\nimport globalStyles from '../../style/global';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport backImage from \"../../../assets/bg_right.png\";\nimport placeholder from \"../../../assets/placeholder.png\";\n\nlet count = 0\n\nexport default class ScannedItems extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n     count: 0,\n     scannedItemPerPage: 1\n    };\n  }\n  render(){\n    const windowWidth = Dimensions.get('window').width;\n    const windowHeight = Dimensions.get('window').height;\n    let props = this.props;\n    let localCount = 0\n    this.props.order && \n      this.props.order.order && \n        this.props.order.order.scanned_items && \n          this.props.order.order.scanned_items.length > 0 && \n            this.props.order.order.scanned_items.map((item) =>  {\n              localCount = localCount + item.scanned_qty\n            }\n          )\n    count = localCount\n    let perPage = this.state.scannedItemPerPage * 10\n    return (\n      <View style={ Platform.OS === \"web\" ? styles.scannedItemContainerWeb : styles.scannedItemContainer }>\n        {\n          Platform.OS === \"web\"\n          ?\n            <View style={{flex: 1}}>\n              {\n                windowWidth >= 900\n                  ?\n                    <ImageBackground source={backImage} style={{height: \"100%\"}}>\n                      <Text style={styles.scannedItemTextWeb}>{count} Scanned Items</Text>\n                      {\n                          props.order && props.order.order && props.order.order.scanned_items.length > 0\n                          ?\n                            <View >\n                            {\n                              props.order.order.scanned_items.slice(0,perPage).map((item , index) => {\n                                return(\n                                  <View key={index+1}>\n                                    {\n                                      item.scanned_qty > 0\n                                      &&\n                                        <View key={index} style={{flexDirection: \"row\" , margin: 1 , borderRadius: 20 , borderWidth: 3  , backgroundColor: \"#336598\"  , borderColor: \"black\" , padding: 5}}>\n                                          <View style={{flex: 20}}>\n                                            <TouchableOpacity style={{backgroundColor: \"#fff\" , paddingLeft: 5 , paddingRight: 5 , borderTopLeftRadius: 10 , borderTopRightRadius: 10 }}>\n                                              <Text numberOfLines={item.name && item.name.length <= 32 ? 1 : 2}\n                                                    style={item.name && item.name.length <= 32 \n                                                            ? \n                                                              {fontSize: 18 , maxWidth: \"75%\"}\n                                                            : \n                                                              {fontSize: 15 , maxWidth: \"75%\"}}\n                                                    >\n                                                      {item.name}\n                                              </Text>\n                                            </TouchableOpacity> \n                                            <Text numberOfLines={1}\n                                                  ellipsizeMode='tail' \n                                                  style={{color: \"#fff\" , fontSize: 18 , maxWidth: \"70%\"}}\n                                                  >\n                                                    {item.sku}\n                                            </Text>\n                                            <View style={{backgroundColor: \"#95b0e5\" , paddingLeft: 3 , paddingRight: 3}}>\n                                              <View style={{maxWidth: \"75%\" , flexDirection: \"row\"}}> \n                                                {\n                                                  item.location !== null && item.location !== \"\" && item.location !== undefined &&\n                                                    <View style={{flex: 1 , flexDirection: \"row\" , alignItems: \"baseline\"}}>\n                                                      <Text style={{fontSize: 10}}>L1:</Text>\n                                                      <Text numberOfLines={1}\n                                                            ellipsizeMode='tail'\n                                                            style={{fontSize: 15 , fontWeight: \"bold\"}}\n                                                            >\n                                                              {item.location}\n                                                      </Text>\n                                                    </View>\n                                                }\n                                                {\n                                                  item.custom_product_1 !== null && item.custom_product_1 !== \"\" && item.custom_product_1 !== undefined &&\n                                                    <View style={{flex: 1 , flexDirection: \"row\" , alignItems: \"baseline\"}}>\n                                                      <Text style={{fontSize: 10}}>C1:</Text>\n                                                      <Text numberOfLines={1}\n                                                            ellipsizeMode='tail'\n                                                            style={{fontSize: 15 , fontWeight: \"bold\"}}\n                                                            >\n                                                              {item.custom_product_1}\n                                                      </Text>\n                                                    </View>\n                                                }\n                                              </View>\n                                            </View>\n                                            <View style={{backgroundColor: \"#d3def4\" , paddingLeft: 3 , paddingRight: 3 , borderBottomLeftRadius: 10, borderBottomRightRadius: 10}}>\n                                              <Text style={{fontSize: 18 , maxWidth: \"75%\"}}\n                                                    numberOfLines={1}\n                                                    ellipsizeMode='tail'\n                                                    >\n                                                {\n                                                  item &&\n                                                    item.barcodes.length > 0 &&\n                                                      item.barcodes[0].barcode\n                                                }\n                                              </Text>\n                                            </View>\n                                          </View>\n                                          \n                                          <View style={{flex: 5 , borderBottomRightRadius: 10 , borderTopRightRadius: 10 , position: \"absolute\" , right: 4, width: \"25%\" , height: \"100%\", bottom: 0}}>\n                                            <View style={{backgroundColor: \"#fff\" ,  shadowColor: \"#000\",shadowOffset: { width: 0, height: 0}, shadowOpacity: 1, shadowRadius: 10, elevation: 3, borderRadius:10 , borderWidth: 4  , borderColor: \"#336598\" , height: \"100%\"}}>\n                                                <Text style={{position: \"absolute\" , textAlign: \"center\", fontSize: 15 , fontWeight: \"600\" , backgroundColor: \"#fff\" , opacity: 0.7, bottom: 0 , right: 0 , left: 0 , marginLeft: \"auto\" , borderRadius:10, marginRight: \"auto\" , zIndex: 999}}>\n                                                  {item.scanned_qty}/{item.qty_remaining + item.scanned_qty}\n                                                </Text>\n                                                <Image source={{uri: item.images && item.images.length > 0 && item.images[0].image !== \"\" ? item.images[0].image : placeholder}}\n                                                       style={{ height: \"100%\"  , width: \"100%\" , resizeMode: 'contain' , borderRadius: 10}} />\n                                            </View>\n                                          </View>\n                                        </View>\n                                    }\n                                  </View>      \n                                )\n                              })\n                            }\n                            </View>\n                          :\n                          <View style={globalStyles.p_10}>\n                            <Text style={styles.scannedItemNameText}>\n                              Item not available in the scanned list\n                            </Text>\n                          </View>\n                        }\n                        {  \n                          props.order.order.scanned_items && props.order.order.scanned_items.length >= perPage &&\n                            <View>\n                              {\n                                props.order.order.scanned_items && props.order.order.scanned_items.length >= perPage\n                                ?\n                                  <TouchableOpacity onPress={() => {\n                                        let perPage =  this.state.scannedItemPerPage + 1\n                                        this.setState({scannedItemPerPage: perPage})\n                                      }}>\n                                    <Text style={{ color: \"#fff\",\n                                                   fontWeight: \"bold\",\n                                                   fontSize: 14,\n                                                   zIndex: 99999,\n                                                   textShadowColor:'#000', \n                                                   textShadowOffset:{width: 1, height: 1}, \n                                                   display: \"flex\",\n                                                   justifyContent: \"center\",\n                                                   padding: 8,\n                                                   background: \"#41970f\",\n                                                   marginRight: \"auto\",\n                                                   marginLeft: \"auto\",\n                                                   borderRadius: 5,\n                                                   marginTop: 2\n                                                 }}>\n                                      Show More\n                                    </Text>\n                                  </TouchableOpacity>\n                                :\n                                  <TouchableOpacity onPress={() => {\n                                        let perPage = 1\n                                        this.setState({scannedItemPerPage: perPage})\n                                      }}>\n                                    <Text style={{ color: \"#fff\",\n                                                   fontWeight: \"bold\",\n                                                   fontSize: 14,\n                                                   zIndex: 99999,\n                                                   textShadowColor:'#000', \n                                                   textShadowOffset:{width: 1, height: 1}, \n                                                   display: \"flex\",\n                                                   justifyContent: \"center\",\n                                                   padding: 8,\n                                                   background: \"#f54400\",\n                                                   marginRight: \"auto\",\n                                                   marginLeft: \"auto\",\n                                                   borderRadius: 5,\n                                                   marginTop: 2\n                                                 }}>\n                                      Reset\n                                    </Text>\n                                  </TouchableOpacity>\n                              }\n                            </View>\n                        }      \n                    </ImageBackground>  \n                  :\n                    <View>\n                      <TouchableOpacity onPress={props.navButton} \n                                        style={{ position: \"fixed\" , \n                                                 top: \"35%\" ,\n                                                 backgroundColor: \"rgba( 225 ,225 ,225 , 0.7)\" ,\n                                                 writingMode: \"vertical-rl\" ,\n                                                 left: 0 , \n                                                 borderTopRightRadius: 5 , \n                                                 borderBottomRightRadius: 5 ,\n                                                 zIndex: 999 ,\n                                                 height: 150 ,\n                                                 textAlign: \"center\"}}\n                                        >\n                                          <Text style={{color: \"#000\" , padding: 15 }}>Scan & Pack</Text>\n                      </TouchableOpacity>\n                      <View style={{height: windowHeight-90 ,width: \"100%\"}}>\n                        {\n                          props.order && props.order.order && props.order.order.scanned_items.length > 0\n                          ?\n                            props.order.order.scanned_items.map((item , index) => {\n                              return(\n                                <React.Fragment key={index}>\n                                  {\n                                    item.scanned_qty > 0\n                                    &&\n                                      <View key={index} style={{flexDirection: \"row\" , margin: 1 , borderRadius: 20 , borderWidth: 4  , backgroundColor: \"#336598\"  , borderColor: \"black\" , padding:10}}>\n                                        <View style={{flex: 20}}>\n                                          <TouchableOpacity style={{backgroundColor: \"#fff\" , paddingLeft: 5 , paddingRight: 5 , borderTopLeftRadius: 10 , borderTopRightRadius: 10 }}>\n                                            <Text numberOfLines={2}\n                                                  style={item.name && item.name.length <= 32 \n                                                          ? \n                                                            {fontSize: 20 , maxWidth: \"75%\"}\n                                                          : \n                                                            {fontSize: 16 , maxWidth: \"75%\"}}\n                                                  >\n                                                    {item.name}\n                                            </Text>\n                                          </TouchableOpacity> \n                                          <Text numberOfLines={1}\n                                                ellipsizeMode='tail' \n                                                style={{color: \"#fff\" , fontSize: 20 , fontWeight: \"600\" , maxWidth: \"70%\"}}\n                                                >\n                                                  {item.sku}\n                                          </Text>\n                                          <View style={{backgroundColor: \"#95b0e5\" , paddingLeft: 3 , paddingRight: 3}}>\n                                            <View style={{maxWidth: \"75%\" , flexDirection: \"row\"}}> \n                                              {\n                                                item.location !== null && item.location !== \"\" && item.location !== undefined &&\n                                                  <View style={{flex: 1 , flexDirection: \"row\" , alignItems: \"baseline\" }}>\n                                                    <Text style={{fontSize: 12}}>L1:</Text>\n                                                    <Text numberOfLines={1}\n                                                          ellipsizeMode='tail'\n                                                          style={{fontSize: 15 , fontWeight: \"bold\"}}\n                                                          >\n                                                            {item.location}\n                                                    </Text>\n                                                  </View>\n                                              }\n                                              {\n                                                item.custom_product_1 !== null && item.custom_product_1 !== \"\" && item.custom_product_1 !== undefined &&\n                                                  <View style={{flex: 1 , flexDirection: \"row\" , alignItems: \"baseline\"}}>\n                                                    <Text style={{fontSize: 12}}>C1:</Text>\n                                                    <Text numberOfLines={1}\n                                                          ellipsizeMode='tail'\n                                                          style={{fontSize: 15 , fontWeight: \"bold\"}}\n                                                          >\n                                                            {item.custom_product_1}\n                                                    </Text>\n                                                  </View>\n                                              }\n                                            </View>\n                                          </View>\n                                          <View style={{backgroundColor: \"#d3def4\" , paddingRight: 3 , paddingLeft: 3 , borderBottomLeftRadius: 10, borderBottomRightRadius: 10}}>\n                                            <Text style={{fontSize: 20 , maxWidth: \"75%\"}}\n                                                  numberOfLines={1}\n                                                  ellipsizeMode='tail'\n                                                  >\n                                              {\n                                                item &&\n                                                  item.barcodes.length > 0 &&\n                                                    item.barcodes[0].barcode\n                                              }\n                                            </Text>\n                                          </View>\n                                        </View>\n                                        \n                                        <View style={{flex: 5 , borderBottomRightRadius: 10 , borderTopRightRadius: 10 , position: \"absolute\" , right: 4, width: \"25%\" , height: \"100%\", bottom: 0}}>\n                                          <View style={{backgroundColor: \"#fff\" ,  shadowColor: \"#000\",shadowOffset: { width: 0, height: 0}, shadowOpacity: 1, shadowRadius: 10, elevation: 3, borderRadius:10 , borderWidth: 4  , borderColor: \"#336598\" , height: \"100%\"}}>\n                                              <Text style={{position: \"absolute\" , textAlign: \"center\", fontSize: 18 , fontWeight: \"600\" , backgroundColor: \"#fff\" , opacity: 0.7, bottom: 0 , right: 0 , left: 0 , borderRadius:10 ,marginLeft: \"auto\" , marginRight: \"auto\" , zIndex: 999}}>\n                                                {item.scanned_qty}/{item.qty_remaining + item.scanned_qty}\n                                              </Text>\n                                              <Image source={{uri: item.images && item.images.length > 0 ? item.images[0].image : placeholder}}\n                                                     style={{ height: \"100%\"  , width: \"100%\" , resizeMode: 'contain' , borderRadius: 10}} />\n                                          </View>\n                                        </View>\n                                      </View>\n                                  }\n                                </React.Fragment>      \n                                )\n                            })\n                          :\n                          <View style={globalStyles.p_10}>\n                            <Text style={styles.scannedItemNameText}>\n                              Item not available in the scanned list\n                            </Text>\n                          </View>\n                        }\n                        {  \n                          props.order.order.scanned_items && props.order.order.scanned_items.length >= perPage &&\n                            <View>\n                            {\n                              props.order.order.scanned_items && props.order.order.scanned_items.length >= perPage\n                              ?\n                                <TouchableOpacity onPress={() => {\n                                      let perPage =  this.state.scannedItemPerPage + 1\n                                      this.setState({scannedItemPerPage: perPage})\n                                    }}>\n                                  <Text style={{ color: \"#fff\",\n                                                 fontWeight: \"bold\",\n                                                 fontSize: 14,\n                                                 zIndex: 99999,\n                                                 textShadowColor:'#000', \n                                                 textShadowOffset:{width: 1, height: 1}, \n                                                 display: \"flex\",\n                                                 justifyContent: \"center\",\n                                                 padding: 8,\n                                                 background: \"#41970f\",\n                                                 marginRight: \"auto\",\n                                                 marginLeft: \"auto\",\n                                                 borderRadius: 5,\n                                                 marginTop: 2\n                                               }}>\n                                    Show More\n                                  </Text>\n                                </TouchableOpacity>\n                              :\n                                <TouchableOpacity onPress={() => {\n                                      let perPage = 1\n                                      this.setState({scannedItemPerPage: perPage})\n                                    }}>\n                                  <Text style={{ color: \"#fff\",\n                                                 fontWeight: \"bold\",\n                                                 fontSize: 14,\n                                                 zIndex: 99999,\n                                                 textShadowColor:'#000', \n                                                 textShadowOffset:{width: 1, height: 1}, \n                                                 display: \"flex\",\n                                                 justifyContent: \"center\",\n                                                 padding: 8,\n                                                 background: \"#f54400\",\n                                                 marginRight: \"auto\",\n                                                 marginLeft: \"auto\",\n                                                 borderRadius: 5,\n                                                 marginTop: 2\n                                               }}>\n                                    Reset\n                                  </Text>\n                                </TouchableOpacity>\n                            }\n                            </View>\n                        }  \n                      </View>\n                    </View>  \n              }\n            </View>\n          :\n            <View style={{height: windowHeight-90 ,width: \"100%\"}}>\n              {\n                props.order && props.order.order && props.order.order.scanned_items.length > 0\n                ?\n                  props.order.order.scanned_items.map((item , index) => {\n                    return(\n                      <React.Fragment key={index}>\n                        {\n                          item.scanned_qty > 0\n                          &&\n                            <View key={index} style={{flexDirection: \"row\" , margin: 0 , borderRadius:30 , borderWidth: 4  , backgroundColor: \"#336598\"  , borderColor: \"black\" , padding:10}}>\n                              <View style={{flex: 20}}>\n                                <TouchableOpacity style={{backgroundColor: \"#fff\" , padding: 5 , borderTopLeftRadius: 20 , borderTopRightRadius: 20 }}>\n                                  <Text numberOfLines={2}\n                                        style={item.name && item.name.length <= 32 \n                                                ? \n                                                  {fontSize: 20 , maxWidth: \"75%\"}\n                                                : \n                                                  {fontSize: 16 , maxWidth: \"75%\"}}\n                                        >\n                                          {item.name}\n                                  </Text>\n                                </TouchableOpacity> \n                                <Text numberOfLines={1}\n                                      ellipsizeMode='tail' \n                                      style={{color: \"#fff\" , fontSize: 20 , fontWeight: \"600\" , maxWidth: \"70%\"}}\n                                      >\n                                        {item.sku}\n                                </Text>\n                                <View style={{backgroundColor: \"#95b0e5\" , paddingLeft: 3 , paddingRight: 3}}>\n                                  <View style={{maxWidth: \"70%\" , flexDirection: \"row\"}}> \n                                    {\n                                      item.location !== null && item.location !== \"\" && item.location !== undefined &&\n                                        <View style={{flex: 1 , flexDirection: \"row\" , alignItems: \"baseline\" , height: 25 }}>\n                                          <Text>L1:</Text>\n                                          <Text numberOfLines={1}\n                                                ellipsizeMode='tail'\n                                                style={{fontSize: 20 , fontWeight: \"bold\" , paddingRight: 10}}\n                                                >\n                                                  {item.location}\n                                          </Text>\n                                        </View>\n                                    }\n                                    {\n                                      item.custom_product_1 !== null && item.custom_product_1 !== \"\" && item.custom_product_1 !== undefined &&\n                                        <View style={{flex: 1 , flexDirection: \"row\" , alignItems: \"baseline\" , height: 25}}>\n                                          <Text>C1:</Text>\n                                          <Text numberOfLines={1}\n                                                ellipsizeMode='tail'\n                                                style={{fontSize: 20 , fontWeight: \"bold\"}}\n                                                >\n                                                  {item.custom_product_1}\n                                          </Text>\n                                        </View>\n                                    }\n                                  </View>\n                                </View>\n                                <View style={{backgroundColor: \"#d3def4\" , padding: 3 , borderBottomLeftRadius: 20, borderBottomRightRadius: 20}}>\n                                  <Text style={{fontSize: 20 , maxWidth: \"75%\"}}\n                                        numberOfLines={1}\n                                        ellipsizeMode='tail'\n                                        >\n                                    {\n                                      item &&\n                                        item.barcodes.length > 0 &&\n                                          item.barcodes[0].barcode\n                                    }\n                                  </Text>\n                                </View>\n                              </View>\n                              \n                              <View style={{flex: 5 , borderBottomRightRadius: 12 , borderTopRightRadius: 12 , position: \"absolute\" , right: 6, width: \"25%\" , height: \"100%\", bottom: 0}}>\n                                <View style={{backgroundColor: \"#fff\" ,  shadowColor: \"#000\",shadowOffset: { width: -5, height: 2}, shadowOpacity: 0.25, shadowRadius: 3.84, elevation: 3, borderRadius:12 , borderWidth: 8  , borderColor: \"#336598\" , height: \"100%\"}}>\n                                    <Text style={{position: \"absolute\" , textAlign: \"center\", fontSize: 18 , fontWeight: \"600\" , backgroundColor: \"#fff\" , opacity: 0.7, bottom: 0 , right: 0 , left: 0 , marginLeft: \"auto\" , marginRight: \"auto\" , zIndex: 999}}>\n                                      {item.scanned_qty}/{item.qty_remaining + item.scanned_qty}\n                                    </Text>\n                                    <Image source={{uri: item.images && item.images.length > 0 ? item.images[0].image : placeholder}}\n                                           style={{ height: \"100%\"  , width: \"100%\" , resizeMode: 'contain' , borderRadius: 12}} />\n                                </View>\n                              </View>\n                            </View>\n                        }\n                      </React.Fragment>      \n                      )\n                  })\n                :\n                <View style={globalStyles.p_10}>\n                  <Text style={styles.scannedItemNameText}>\n                    Item not available in the scanned list\n                  </Text>\n                </View>\n              }\n            </View>\n        }    \n      </View>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}
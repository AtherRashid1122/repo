{"ast":null,"code":"","map":{"version":3,"sources":[],"names":[],"mappings":"","sourcesContent":["// import React, { Component } from \"react\";\n// import {\n//   View,\n//   Text,\n//   TextInput,\n//   Image,\n//   TouchableOpacity,\n//   Platform,\n//   ScrollView,\n//   Dimensions,\n// } from \"react-native\";\n// import styles from \"../../style/orderdetail\";\n// import { connect } from \"react-redux\";\n// import { UpdateOrderQuantity } from \"../../actions/orderActions\";\n// import restart from \"../../../assets/1024x1024.png\";\n// import { FlatGrid, SectionGrid } from \"react-native-super-grid\";\n// import { Entypo } from \"@expo/vector-icons\";\n// import { Poppins_300Light } from \"@expo-google-fonts/poppins\";\n// import { isLoaded } from \"expo-font\";\n// import { LinearGradient } from \"expo-linear-gradient\";\n// const windowWidth = Dimensions.get(\"window\").width;\n// // import ModalDropdown from 'react-native-modal-dropdown';\n\n// class ItemsDetail extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       items: [],\n//       unTouch: true,\n//       loading: true,\n//       editable: false,\n//       instruction: false,\n//     };\n//   }\n//   componentDidMount() {\n//     // console.log(\"item detail props\", this.props.items?.items[0]?.iteminfo?.order_id);\n\n//     if (this.state.items.length == 0) {\n//       this.setState({ loading: false });\n//     }\n\n//     if (\n//       this.props.items &&\n//       this.props.items?.items &&\n//       this.props.items?.items?.length\n//     ) {\n//       console.log(\"*********************\");\n//       console.log(\"this.props.items.items\", this.props.items.items);\n//       console.log(\"*********************\");\n//       this.setState({ items: this.props.items.items });\n//       this.setState({ loading: false });\n//       // setState(this.props.items.items);\n//       // setLoad(true);\n//     }\n//   }\n\n//   Capitalize(str) {\n//     return str.charAt(0).toUpperCase() + str.slice(1);\n//   }\n//   changeEdit = () => {\n//     this.setState({ editable: !this.state.editable });\n//     // console.log(\"inside...\", this.state.items);\n//   };\n\n//   render() {\n//     let content = this.props.items && this.props.items.items;\n//     // console.log(\"items from details\", this.state.items[0].iteminfo.order_id);\n//     // console.log(\"items from details\", this.state.items);\n//     // if(this.state?.items?.length)\n//     // {\n//     //   console.log(\"items from details\",  this.state?.items[0]?.iteminfo?.order_id);\n//     // }\n//     // console.log(\"items from details\", this.props.items.items);\n\n//     return (\n//       <ScrollView style={styles.itemDetailContainer}>\n//         {Platform.OS === \"web\" ? (\n\n\n//           <React.Fragment>\n\n//             <View>\n//               <View\n//                 style={{\n//                   backgroundColor: \"#000\",\n//                   height: 20,\n//                   width: \"100%\",\n//                   shadowColor: \"#000\",\n//                   shadowOffset: {\n//                     width: 1,\n//                     height: 10,\n//                   },\n//                   shadowOpacity: 3,\n//                   shadowRadius: 10,\n\n//                   elevation: 5,\n//                 }}\n//               ></View>\n//               <View style={{}}>\n//                 {this.state.loading == false &&\n//                 this.state.items &&\n//                 this.state.items.length ? (\n//                   // this.state.items.map((i) => (\n//                   //   <Text style={{ color: \"white\", fontSize: 100 }}>\n//                   //     {i?.iteminfo?.order_id}\n//                   //   </Text>\n//                   // ))\n//                   <Text\n//                     style={{\n//                       color: \"#67869B\",\n//                       fontSize: 22,\n//                       fontWeight: \"bold\",\n//                       paddingHorizontal: 15,\n//                       fontFamily: \"Poppins_700Bold\",\n//                     }}\n//                   >\n//                     Order # {this.state.items[0].iteminfo.order_id}\n//                   </Text>\n//                 ) : (\n//                   <Text>no id</Text>\n//                 )}\n//               </View>\n\n//               <View\n//                 // colors={[\"#22292C\", \"#68879C\", \"#68879C\", \"#22292C\"]}\n//                 // start={[-0.3, 0.01]}\n//                 style={{\n//                   // overflow: \"scroll\",\n//                   paddingHorizontal: 15,\n//                   backgroundColor: \"rgba(104, 135, 156, 0.4)\",\n//                   borderRadius: 10,\n//                   marginHorizontal: 25,\n//                   marginTop: 20,\n//                   marginBottom: 10,\n//                   // borderWidth: 1,\n//                   // borderColor: \"#50708b\",\n//                   shadowColor: \"#50708b\",\n//                   shadowOffset: { width: 1, height: 1 },\n//                   shadowRadius: 10,\n//                 }}\n//               >\n//                 <View\n//                   style={{\n//                     alignSelf: \"flex-end\",\n//                     justifyContent: \"center\",\n//                     alignItems: \"center\",\n\n//                     flexDirection: \"row\",\n//                     // borderWidth: 1\n//                   }}\n//                 >\n//                   <TouchableOpacity\n//                     style={{\n//                       flexDirection: \"row\",\n//                       alignItems: \"center\",\n//                       justifyContent: \"center\",\n//                       paddingRight: 30,\n//                       // borderWidth: 1\n//                     }}\n//                   >\n//                     <Image\n//                       style={{ width: 70, height: 70, resizeMode: \"cover\" }}\n//                       source={require(\"../../../assets/plus.png\")}\n//                     />\n//                     <Text\n//                       style={{\n//                         fontFamily: \"Poppins_800ExtraBold\",\n//                         // fontWeight: \"bold\",\n//                         color: \"white\",\n//                         fontSize: 16,\n//                         textShadowColor: \"#000\",\n//                         textShadowOffset: { width: 1, height: 1 },\n//                         textShadowRadius: 5,\n\n//                         elevation: 5,\n//                       }}\n//                     >\n//                       Add Items\n//                     </Text>\n//                   </TouchableOpacity>\n//                   <TouchableOpacity\n//                     style={{\n//                       marginRight: 10,\n//                       borderWidth: 1,\n//                       borderStyle: \"solid\",\n//                       borderColor: \"#fff\",\n//                       borderRadius: 30,\n//                       justifyContent: \"center\",\n//                       alignItems: \"center\",\n//                       // backgroundColor: \"#336599\",\n//                       height: 30,\n//                       shadowColor: \"#2bfac3\",\n//                       shadowOffset: { width: 0, height: 0.5 },\n//                       shadowRadius: 8,\n//                       elevation: 5,\n//                       shadowOpacity: 0.5,\n//                       // box-shadow: rgb(43 250 195) 0px 1px 3px;\n//                     }}\n//                     onPress={() => this.props.updateBasicInfo()}\n//                   >\n//                     <Text\n//                       style={{\n//                         color: \"white\",\n//                         paddingHorizontal: 10,\n//                         fontWeight: \"bold\",\n//                       }}\n//                     >\n//                       Save & Close\n//                     </Text>\n//                   </TouchableOpacity>\n//                   <TouchableOpacity\n//                     onPress={() => this.props.updateBasicInfo()}\n//                     style={{\n//                       marginRight: 10,\n//                       borderWidth: 1,\n//                       borderStyle: \"solid\",\n//                       borderColor: \"#fff\",\n//                       borderRadius: 30,\n//                       justifyContent: \"center\",\n//                       alignItems: \"center\",\n//                       // backgroundColor: \"#494848\",\n//                       height: 30,\n//                       shadowColor: \"#e853fa\",\n//                       shadowOffset: { width: 0, height: 0.5 },\n//                       shadowRadius: 8,\n//                       elevation: 5,\n//                       shadowOpacity: 0.5,\n//                     }}\n//                   >\n//                     <Text\n//                       style={{\n//                         color: \"white\",\n//                         paddingHorizontal: 10,\n//                         fontWeight: \"bold\",\n//                       }}\n//                     >\n//                       Cancel\n//                     </Text>\n//                   </TouchableOpacity>\n//                 </View>\n\n//                 <View\n\n//                   style={{\n//                     overflow: \"scroll\",\n//                     flex: 1,\n//                     marginHorizontal: 10,\n//                     backgroundColor: \"rgba(15, 39, 58, 0.4)\",\n//                     borderRadius: 15,\n//                     marginBottom: 50,\n//                     // opacity: 0.5\n//                     // width: '100%'\n//                   }}\n//                 >\n//                   <View\n//                     style={[styles.itemContainer, { paddingHorizontal: 10 }]}\n//                   >\n//                     <View style={[styles.itemView, { width: 50 }]}>\n//                       {/* <Entypo name='chevron-down' size={20} color='white' onPress={()=>{}} /> */}\n//                       {/* <ModalDropdown options={['option 1', 'option 2']} style={{width: 40, height: 30}} /> */}\n//                     </View>\n//                     <View\n//                       style={{\n//                         flexDirection: \"row\",\n//                         paddingBottom: 10,\n//                         width: \"95%\",\n//                         justifyContent: \"space-around\",\n//                       }}\n//                     >\n//                       <View\n//                         style={[\n//                           styles.itemView,\n//                           { width: 70, marginRight: 15 },\n//                         ]}\n//                       ></View>\n//                       <View style={[styles.itemView, { width: 400 }]}>\n//                         <Text\n//                           style={[\n//                             styles.gridHeader,\n\n//                           ]}\n//                         >\n//                           Product Name\n//                         </Text>\n//                       </View>\n//                       <View style={[styles.itemView, { width: 350 }]}>\n//                         <Text\n//                           style={[\n//                             styles.gridHeader,\n\n//                           ]}\n//                         >\n//                           SKU\n//                         </Text>\n//                       </View>\n//                       <View style={[styles.itemView, { width: 100 }]}>\n//                         <Text\n//                           style={[\n//                             styles.gridHeader,\n//                             // {\n//                             //   fontWeight: \"bold\",\n//                             //   fontSize: 22,\n//                             //   color: \"#ABB6BC\",\n//                             // },\n//                           ]}\n//                         >\n//                           Status\n//                         </Text>\n//                       </View>\n//                       <View style={[styles.itemView, { width: 350 }]}>\n//                         <Text\n//                           style={[\n//                             styles.gridHeader,\n//                             // {\n//                             //   fontWeight: \"bold\",\n//                             //   fontSize: 22,\n//                             //   color: \"#ABB6BC\",\n//                             // },\n//                           ]}\n//                         >\n//                           Barcode\n//                         </Text>\n//                       </View>\n//                       <View style={[styles.itemView, { width: 100 }]}>\n//                         <Text\n//                           style={[\n//                             styles.gridHeader,\n//                             // {\n//                             //   fontWeight: \"bold\",\n//                             //   fontSize: 22,\n//                             //   color: \"#ABB6BC\",\n//                             // },\n//                           ]}\n//                         >\n//                           QTY Ordered\n//                         </Text>\n//                       </View>\n//                       <View style={[styles.itemView, { width: 150 }]}>\n//                         <Text\n//                           style={[\n//                             styles.gridHeader,\n//                             // {\n//                             //   fontWeight: \"bold\",\n//                             //   fontSize: 22,\n//                             //   color: \"#ABB6BC\",\n//                             // },\n//                           ]}\n//                         >\n//                           Location l\n//                         </Text>\n//                       </View>\n//                       <View style={[styles.itemView, { width: 100 }]}>\n//                         <Text style={styles.gridHeader}>QOH</Text>\n//                       </View>\n//                       {this.state.instruction ? (\n//                         <View style={[styles.itemView, { width: 130 }]}>\n//                           <Text style={styles.gridHeader}>Available INV</Text>\n//                         </View>\n//                       ) : (\n//                         <View></View>\n//                       )}\n//                     </View>\n//                   </View>\n\n//                   <FlatGrid\n//                     itemDimension={windowWidth}\n//                     data={this.state.items}\n//                     style={styles.gridView}\n//                     renderItem={({ item }) => (\n//                       <View style={[styles.itemContainer]}>\n//                         <TouchableOpacity\n//                           onPress={() => {\n//                             this.props.removeIds.includes(item.iteminfo.id);\n//                           }}\n//                           style={[\n//                             styles.itemView,\n//                             { width: 50, marginHorizontal: 15 },\n//                           ]}\n//                         >\n//                           <Image\n//                             style={{\n//                               width: 70,\n//                               height: 70,\n//                               resizeMode: \"stretch\",\n//                             }}\n//                             source={require(\"../../../assets/cross.png\")}\n//                           />\n//                         </TouchableOpacity>\n//                         <View\n//                           style={{\n//                             flexDirection: \"row\",\n//                             borderBottomWidth: 0.7,\n//                             borderColor: \"rgba(250, 250, 250, .4)\",\n//                             paddingVertical: 10,\n//                             width: \"95%\",\n//                             justifyContent: \"space-around\",\n//                           }}\n//                         >\n//                           <View\n//                             style={[\n//                               styles.itemView,\n//                               { width: 70, marginRight: 15 },\n//                             ]}\n//                           >\n//                             {/* <Text style={styles.itemName}>{item.productinfo.name}</Text> */}\n//                             <Image\n//                               style={{\n//                                 width: 70,\n//                                 height: 70,\n//                                 borderRadius: 5,\n//                                 resizeMode: \"contain\",\n//                               }}\n//                               source={{ uri: item.image }}\n//                             />\n//                           </View>\n//                           <View style={[styles.itemView, { width: 400 }]}>\n//                             <Text\n//                               style={[styles.itemName, { color: \"#aad9fc\" }]}\n//                             >\n//                               {item.productinfo.name}\n//                             </Text>\n//                           </View>\n//                           <View style={[styles.itemView, { width: 350 }]}>\n//                             <Text style={styles.itemName}>{item.sku}</Text>\n//                           </View>\n//                           <View style={[styles.itemView, { width: 100 }]}>\n//                             {item.productinfo.status === \"active\" ? (\n//                               <Text style={styles.statusActive}>\n//                                 {this.Capitalize(item.productinfo.status)}\n//                               </Text>\n//                             ) : (\n//                               // <Text>{this.Capitalize(this.state.title)} </Text>\n//                               <Text style={styles.statusNew}>\n//                                 {this.Capitalize(item.productinfo.status)}\n//                               </Text>\n//                             )}\n//                           </View>\n//                           <View style={[styles.itemView, { width: 350 }]}>\n//                             <Text style={styles.itemName}>{item.barcode}</Text>\n//                           </View>\n//                           <View\n//                             style={[\n//                               styles.itemView,\n//                               {\n//                                 width: 100,\n//                                 flexDirection: \"row\",\n//                                 justifyContent: \"center\",\n//                                 alignItems: \"center\",\n//                               },\n//                             ]}\n//                           >\n//                             {this.state.editable == true ? (\n//                               <TextInput\n//                                 placeholder={item.iteminfo.qty}\n//                                 onChangeText={() => {}}\n//                                 style={{ width: 25, height: 25, fontSize: 19 }}\n//                               />\n//                             ) : (\n//                               <Text style={styles.itemName}>\n//                                 {item.iteminfo.qty}\n//                               </Text>\n//                             )}\n//                             <TouchableOpacity\n//                               onPress={() => {\n//                                 // this.setState({ editable: true });\n//                                 this.changeEdit();\n//                               }}\n//                             >\n//                               <Image\n//                                 style={{\n//                                   width: 20,\n//                                   height: 20,\n//                                   resizeMode: \"contain\",\n//                                 }}\n//                                 source={require(\"../../../assets/edit.png\")}\n//                               />\n//                             </TouchableOpacity>\n//                           </View>\n//                           <View style={[styles.itemView, { width: 150 }]}>\n//                             <Text style={styles.itemName}>\n//                               {item.location_primary}\n//                             </Text>\n//                           </View>\n//                           <View style={[styles.itemView, { width: 100 }]}>\n//                             <Text style={styles.itemName}>\n//                               {item.qty_on_hand}\n//                             </Text>\n//                           </View>\n//                           {this.state.instruction ? (\n//                             <View style={[styles.itemView, { width: 130 }]}>\n//                               <Text style={styles.itemName}>\n//                                 {item.available_inv}\n//                               </Text>\n//                             </View>\n//                           ) : (\n//                             <View></View>\n//                           )}\n//                         </View>\n//                       </View>\n//                     )}\n//                   />\n//                 </View>\n//               </View>\n//               {/* </LinearGradient> */}\n//             </View>\n//           </React.Fragment>\n//         ) : (\n//           <React.Fragment>\n//             <View style={{ flex: 1, flexDirection: \"row\" }}>\n//               <View\n//                 style={{\n//                   flex: 2,\n//                   flexDirection: \"row\",\n//                   justifyContent: \"flex-start\",\n//                   margin: 5,\n//                   marginLeft: 10,\n//                 }}\n//               >\n//                 <TouchableOpacity\n//                   onPress={() => this.props.addOrderItem(items)}\n//                   style={{\n//                     borderWidth: 1,\n//                     borderStyle: \"solid\",\n//                     borderColor: \"#336597\",\n//                     backgroundColor: \"#336599\",\n//                     justifyContent: \"center\",\n//                   }}\n//                 >\n//                   <Text\n//                     style={{\n//                       color: \"white\",\n//                       padding: 4,\n//                       fontSize: 13,\n//                       fontWeight: \"bold\",\n//                     }}\n//                   >\n//                     Add Item\n//                   </Text>\n//                 </TouchableOpacity>\n//                 <TouchableOpacity\n//                   onPress={() => this.props.removeItems()}\n//                   style={\n//                     this.props.removeIds && this.props.removeIds.length > 0\n//                       ? {\n//                           marginRight: 2,\n//                           borderWidth: 1,\n//                           borderStyle: \"solid\",\n//                           borderColor: \"#336597\",\n//                           backgroundColor: \"#961F1F\",\n//                           justifyContent: \"center\",\n//                         }\n//                       : {\n//                           marginRight: 2,\n//                           borderWidth: 1,\n//                           borderStyle: \"solid\",\n//                           borderColor: \"#336597\",\n//                           backgroundColor: \"#c48787\",\n//                           justifyContent: \"center\",\n//                         }\n//                   }\n//                 >\n//                   <Text\n//                     style={{\n//                       color: \"white\",\n//                       padding: 4,\n//                       fontSize: 13,\n//                       fontWeight: \"bold\",\n//                     }}\n//                   >\n//                     Remove selected\n//                   </Text>\n//                 </TouchableOpacity>\n//               </View>\n//               <View\n//                 style={{\n//                   flex: 2,\n//                   flexDirection: \"row\",\n//                   justifyContent: \"flex-end\",\n//                   margin: 5,\n//                 }}\n//               >\n//                 <TouchableOpacity\n//                   onPress={() => this.props.updateBasicInfo()}\n//                   style={{\n//                     borderWidth: 1,\n//                     borderStyle: \"solid\",\n//                     borderColor: \"#336597\",\n//                     backgroundColor: \"#494848\",\n//                     justifyContent: \"center\",\n//                   }}\n//                 >\n//                   <Text\n//                     style={{\n//                       color: \"white\",\n//                       padding: 4,\n//                       fontSize: 13,\n//                       fontWeight: \"bold\",\n//                     }}\n//                   >\n//                     Cancel\n//                   </Text>\n//                 </TouchableOpacity>\n//                 <TouchableOpacity\n//                   style={{\n//                     marginRight: 10,\n//                     borderWidth: 1,\n//                     borderStyle: \"solid\",\n//                     borderColor: \"#336597\",\n//                     backgroundColor: \"#336599\",\n//                     justifyContent: \"center\",\n//                   }}\n//                   onPress={() => this.props.updateBasicInfo()}\n//                 >\n//                   <Text\n//                     style={{\n//                       color: \"white\",\n//                       padding: 4,\n//                       fontSize: 13,\n//                       fontWeight: \"bold\",\n//                     }}\n//                   >\n//                     Save & Close\n//                   </Text>\n//                 </TouchableOpacity>\n//               </View>\n//             </View>\n//             {items &&\n//               items.length > 0 &&\n//               items.map((item, index) => {\n//                 return (\n//                   <View\n//                     key={index}\n//                     style={\n//                       this.props.removeIds.includes(item.iteminfo.id) && {\n//                         backgroundColor: \"#799cbf\",\n//                       }\n//                     }\n//                   >\n//                     <View\n//                       style={{\n//                         flex: 1,\n//                         flexDirection: \"row\",\n//                         borderWidth: 1,\n//                         borderColor: \"#000\",\n//                         borderRadius: 10,\n//                         width: \"96%\",\n//                         marginLeft: \"auto\",\n//                         marginRight: \"auto\",\n//                         padding: 5,\n//                       }}\n//                     >\n//                       <View style={{ width: \"20%\" }}>\n//                         <TouchableOpacity\n//                           onPress={() => this.props.removeOrderItem(item)}\n//                         >\n//                           <Image\n//                             style={{\n//                               position: \"relative\",\n//                               width: \"100%\",\n//                               height: \"100%\",\n//                               resizeMode: \"contain\",\n//                               marginBottom: 2,\n//                             }}\n//                             source={{\n//                               uri: item.image !== null ? item.image : \"\",\n//                             }}\n//                           />\n//                         </TouchableOpacity>\n//                       </View>\n//                       <View style={{ width: \"80%\" }}>\n//                         <View\n//                           style={{\n//                             flex: 1,\n//                             flexDirection: \"row\",\n//                             alignItem: \"center\",\n//                           }}\n//                         >\n//                           <View style={{ flex: 2, flexDirection: \"row\" }}>\n//                             <Text style={{ padding: 5 }}>QTY</Text>\n//                             <TextInput\n//                               keyboardType=\"numeric\"\n//                               style={{\n//                                 borderWidth: 1,\n//                                 borderRadius: 10,\n//                                 width: 50,\n//                                 paddingLeft: 10,\n//                                 paddingRight: 5,\n//                               }}\n//                               value={\n//                                 item.iteminfo.qty &&\n//                                 JSON.stringify(item.iteminfo.qty)\n//                               }\n//                               onChangeText={(text) =>\n//                                 this.props.handleChange(text, item)\n//                               }\n//                               onBlur={() => this.props.updateQuantity(item)}\n//                             />\n//                           </View>\n//                           <View style={{ flex: 4, justifyContent: \"center\" }}>\n//                             <TouchableOpacity\n//                               style={styles.value}\n//                               onPress={() => this.props.removeOrderItem(item)}\n//                             >\n//                               <Text numberOfLines={1} ellipsizeMode=\"tail\">\n//                                 {\" \"}\n//                                 {item.productinfo.name}{\" \"}\n//                               </Text>\n//                             </TouchableOpacity>\n//                           </View>\n//                         </View>\n\n//                         <TouchableOpacity\n//                           onPress={() => this.props.removeOrderItem(item)}\n//                         >\n//                           <View\n//                             style={{\n//                               flex: 1,\n//                               flexDirection: \"row\",\n//                               alignItem: \"center\",\n//                             }}\n//                           >\n//                             <View style={{ flex: 2, flexDirection: \"row\" }}>\n//                               <Text\n//                                 numberOfLines={1}\n//                                 ellipsizeMode=\"tail\"\n//                                 style={{ padding: 5 }}\n//                               >\n//                                 {item.sku}\n//                               </Text>\n//                             </View>\n//                             <View style={{ flex: 2, flexDirection: \"row\" }}>\n//                               {item.productinfo.custom_product_1 !== \"\" && (\n//                                 <Text\n//                                   numberOfLines={1}\n//                                   ellipsizeMode=\"tail\"\n//                                   style={{ padding: 5 }}\n//                                 >\n//                                   C1: {item.productinfo.custom_product_1}\n//                                 </Text>\n//                               )}\n//                             </View>\n//                             <View style={{ flex: 4, justifyContent: \"center\" }}>\n//                               <Text numberOfLines={1} ellipsizeMode=\"tail\">\n//                                 {\" \"}\n//                                 {item.barcode}{\" \"}\n//                               </Text>\n//                             </View>\n//                           </View>\n//                         </TouchableOpacity>\n//                       </View>\n//                     </View>\n//                   </View>\n//                 );\n//               })}\n//           </React.Fragment>\n//         )}\n//       </ScrollView>\n//     );\n//   }\n// }\n\n// const mapStateToProps = (state) => {\n//   return {};\n// };\n\n// const mapDispatchToProps = {\n//   UpdateOrderQuantity,\n// };\n\n// export default connect(mapStateToProps, mapDispatchToProps)(ItemsDetail);\n"]},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\DELL PC\\\\Downloads\\\\GroovePacker\\\\src\\\\components\\\\scanpack\\\\scanpack.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport GestureRecognizer, { swipeDirections } from 'react-native-swipe-gestures';\nimport { connect } from 'react-redux';\nimport NetInfo from \"@react-native-community/netinfo\";\nimport { GetOrderList, SearchOrder } from \"../../actions/orderActions\";\nimport { SearchScanpackOrder } from \"../../actions/scanpackAction\";\nimport { SetItem, GetItem } from \"../../actions/updateAsyncAction\";\nimport { GetGeneralSetting, GetScanPackSetting, UserInfo } from \"../../actions/userAction\";\nimport globalStyles from \"../../style/global\";\nimport styles from \"../../style/scanpack\";\nimport PopUpModel from \"./pop_up_model\";\nimport AntDesign from \"@expo/vector-icons/AntDesign\";\nvar height = Dimensions.get('window').height;\nvar orderListSuccess = false;\nvar searchOrderSuccess = false;\nvar validateUser = false;\nvar messageShow = false;\n\nvar ScanPack = function (_Component) {\n  _inherits(ScanPack, _Component);\n\n  var _super = _createSuper(ScanPack);\n\n  function ScanPack(props) {\n    var _this;\n\n    _classCallCheck(this, ScanPack);\n\n    _this = _super.call(this, props);\n\n    _this.getOrder = function () {\n      if (Platform.OS === \"ios\" || Platform.OS === \"android\") {\n        _this.checkConnection(\"apiCall\");\n      } else {\n        _this.apiCall();\n      }\n    };\n\n    _this.alertBox = function (message, skip, messageTypeSuccess) {\n      if (messageTypeSuccess === true) {\n        _this.setState({\n          popUpModelShow: true,\n          message: message,\n          messageTypeSuccess: true\n        });\n      } else {\n        _this.setState({\n          popUpModelShow: true,\n          message: message\n        });\n      }\n\n      setTimeout(function () {\n        this.setState({\n          popUpModelShow: false,\n          message: \"\",\n          messageTypeSuccess: false\n        });\n      }.bind(_assertThisInitialized(_this)), 4000);\n    };\n\n    _this.checkConnection = function _callee(type, input) {\n      var connectionInfo;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(NetInfo.fetch());\n\n            case 2:\n              connectionInfo = _context.sent;\n\n              if (connectionInfo.isConnected) {\n                type === \"callShipmentOrder\" ? _this.callShipmentOrder(input) : _this.apiCall();\n              } else {\n                _this.setState({\n                  rfoTitle: \"Please check your internet connection\"\n                });\n              }\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.apiCall = function () {\n      _this.props.GetOrderList(_this.state.dataList);\n\n      orderListSuccess = true;\n    };\n\n    _this.closeAlert = function () {\n      _this.setState({\n        popUpModelShow: false\n      });\n    };\n\n    _this.redirect = function _callee2() {\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(AsyncStorage.clear());\n\n            case 2:\n              _this.props.navigation.navigate(\"SignIn\", {\n                status: \"Inactive\",\n                time: new Date()\n              });\n\n              _this.setState({\n                userInfo: _this.props.userInfo\n              });\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.statusFunction = function (message) {\n      var data = _this.state.data;\n      data[\"input\"] = \"\";\n\n      _this.setState({\n        rfoTitle: message,\n        data: data\n      });\n    };\n\n    _this.orderDetails = function (order) {\n      if (order && order.scan_hash && order.scan_hash.data) {\n        _this.props.navigation.navigate(\"ScanPackItem\", {\n          data: order.scan_hash.data\n        });\n\n        messageShow = false;\n      }\n    };\n\n    _this.searchOrder = function (input) {\n      _this.setState({\n        loading: true,\n        loaderTitle: \"Loading...\"\n      });\n\n      if (input !== \"\") {\n        if (Platform.OS === \"ios\" || Platform.OS === \"android\") {\n          _this.checkConnection(\"callShipmentOrder\", input);\n        } else {\n          _this.callShipmentOrder(input);\n        }\n      }\n    };\n\n    _this.callShipmentOrder = function (input) {\n      var shipmentOrder = _this.state.data;\n      shipmentOrder[\"input\"] = input;\n\n      if (input !== \"\") {\n        shipmentOrder.input = input;\n\n        _this.props.SearchScanpackOrder(shipmentOrder);\n\n        searchOrderSuccess = true;\n        var apiCallTime = new Date();\n\n        _this.setState({\n          apiCallTime: apiCallTime\n        });\n      }\n    };\n\n    _this.handleChange = function (name, value) {\n      var order = _this.state.data;\n\n      if (name === \"searchOrder\") {\n        order[\"input\"] = value;\n      }\n\n      _this.setState({\n        order: order\n      });\n    };\n\n    _this.state = {\n      data: {\n        \"input\": \"\",\n        \"state\": \"scanpack.rfo\",\n        \"id\": null,\n        \"box_id\": null,\n        \"store_order_id\": null,\n        \"app\": \"app\"\n      },\n      popUpModelShow: false,\n      dataList: {\n        \"filter\": \"\",\n        \"order\": \"DESC\",\n        \"limit\": \"1\",\n        \"offset\": \"0\",\n        \"app\": \"app\",\n        \"count\": 0\n      },\n      orderDetail: null,\n      rfoTitle: \"Scan the Packing Slip of an Order you'd like to Pack.\",\n      time: new Date(),\n      loading: false,\n      loaderTitle: \"\",\n      userInfo: \"\",\n      scan_pack_settings: null\n    };\n    _this.inputFocus = React.createRef();\n    _this.searchOrder = _this.searchOrder.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(ScanPack, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.UserInfo();\n      this.setState({\n        loading: true,\n        loaderTitle: \"Loading...\"\n      });\n      this.getOrder();\n      validateUser = true;\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      if (orderListSuccess === true && this.props && this.props.ordersList && this.props.ordersList !== this.state.list) {\n        orderListSuccess = false;\n        var list = this.props.ordersList;\n        var orderShow = list.orders.length === 0 ? true : false;\n        this.setState({\n          scan_pack_settings: list.scan_pack_settings,\n          general_settings: list.general_settings,\n          rfoTitle: list.orders.length > 0 ? list && list.orders[0] && list.orders[0].ordernum : \"No orders were found in the awaiting orders list.\",\n          orderDetail: list && list.orders && list.orders[0],\n          loading: false,\n          list: this.props.ordersList,\n          unClick: orderShow\n        });\n      }\n\n      if (messageShow === false && this.props && this.props.route && this.props.route.params && this.props.route.params.showScannedMessage) {\n        this.alertBox(\"The order has already been scanned.\", true, true);\n        this.setState({\n          loading: true,\n          loaderTitle: \"Loading...\"\n        });\n        this.getOrder();\n        messageShow = true;\n      }\n\n      if (searchOrderSuccess === true && this.props && this.props.searchOrder && this.props.searchOrder.time > this.state.apiCallTime && this.props.searchOrder !== this.state.oldOne) {\n        var searchResult = this.props.searchOrder && this.props.searchOrder.searchOrder;\n        var order = searchResult && searchResult.data.order && searchResult.data.order[0];\n\n        if (searchResult) {\n          if (searchResult.matched) {\n            if (searchResult.data) {\n              this.orderDetails(order);\n              searchOrderSuccess = false;\n            } else {\n              if (searchResult.data.status === \"scanned\") {\n                var message = \"Order \" + searchResult.data.order_num + \" has already been scanned.\";\n                this.statusFunction(message);\n                this.setState({\n                  unClick: true\n                });\n              }\n            }\n          } else {\n            this.statusFunction(searchResult.error_messages);\n            this.setState({\n              unClick: true\n            });\n            searchOrderSuccess = false;\n          }\n\n          this.setFocus();\n          var data = this.state.data;\n          data[\"input\"] = \"\";\n          this.setState({\n            oldOne: this.props.searchOrder,\n            data: data,\n            loading: false\n          });\n        }\n      }\n\n      if (validateUser && this.props && this.props.userInfo && this.props.userInfo !== this.state.userInfo) {\n        if (this.props.userInfo.is_active === false) {\n          validateUser = false;\n          this.props.UserInfo(false);\n          this.redirect();\n        }\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.props.GetOrderList(this.state.dataList, false);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(SafeAreaView, {\n        style: globalStyles.flex1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: globalStyles.flexDirectionRow,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 9\n        }\n      }), React.createElement(ImageBackground, {\n        source: require(\"././../../../assets/background.png\"),\n        style: {\n          flex: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 1\n        }\n      }, React.createElement(ImageBackground, {\n        style: {\n          height: 350,\n          marginTop: 20\n        },\n        source: require(\"././../../../assets/scaning.png\"),\n        resizeMode: 'contain',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 3\n        }\n      }, React.createElement(View, {\n        style: {\n          height: height / 2,\n          justifyContent: 'center',\n          alignContent: 'center',\n          alignItems: 'center',\n          margin: 200\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 3\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 60,\n          color: '#728ba1',\n          fontFamily: 'Poppins'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 1\n        }\n      }, \"Scan\"), React.createElement(View, {\n        style: {\n          marginTop: 30\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 1\n        }\n      }, React.createElement(TextInput, {\n        style: {\n          backgroundColor: 'black',\n          borderWidth: 1,\n          borderColor: '#95b0e5',\n          height: 35,\n          width: 280,\n          borderRadius: 5,\n          color: 'white'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 1\n        }\n      })), React.createElement(Text, {\n        style: {\n          color: '#728ba1',\n          fontSize: 20,\n          marginTop: 30,\n          fontFamily: 'Poppins'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 1\n        }\n      }, \"Scan a Packing slip to display an order.\"), React.createElement(TouchableOpacity, {\n        style: {\n          borderWidth: 1,\n          backgroundColor: '#869eb3',\n          marginTop: 30,\n          width: 300,\n          height: 40,\n          borderRadius: 5,\n          justifyContent: 'center',\n          alignContent: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 1\n        }\n      }, React.createElement(View, {\n        style: {\n          flexDirection: 'row',\n          justifyContent: 'space-between'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 3\n        }\n      }, React.createElement(View, {\n        style: {\n          justifyContent: 'center',\n          alignContent: 'center',\n          alignItems: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 5\n        }\n      }, React.createElement(Text, {\n        style: {\n          marginLeft: 30,\n          color: 'white',\n          fontFamily: 'Poppins'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 3\n        }\n      }, \"Quick Scan\"), React.createElement(Text, {\n        style: {\n          marginLeft: 30,\n          color: 'white',\n          fontFamily: 'Poppins'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 3\n        }\n      }, \"111997723455-854578 \")), React.createElement(Image, {\n        source: require(\"././../../../assets/arroe.png\"),\n        style: {\n          marginRight: 10,\n          justifyContent: 'center',\n          alignItems: 'center',\n          alignSelf: 'center',\n          alignContent: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 3\n        }\n      }))), React.createElement(Text, {\n        style: {\n          color: '#5a6a77',\n          marginTop: 40,\n          fontFamily: 'Poppins'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 1\n        }\n      }, \"Import is in Progress.ETA5 min\"), React.createElement(TouchableOpacity, {\n        style: {\n          height: 30,\n          backgroundColor: '#869eb3',\n          borderWidth: 1,\n          width: 150,\n          marginTop: 15,\n          justifyContent: 'center',\n          alignContent: 'center',\n          alignSelf: 'center',\n          alignItems: 'center',\n          borderRadius: 5\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 1\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: 'white',\n          fontFamily: 'Poppins'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 3\n        }\n      }, \"Refresh\"))))));\n    }\n  }]);\n\n  return ScanPack;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    ordersList: state.order.list,\n    searchOrder: state.scanpack,\n    userInfo: state.user.userInfo\n  };\n};\n\nvar mapDispatchToProps = {\n  GetOrderList: GetOrderList,\n  SearchScanpackOrder: SearchScanpackOrder,\n  UserInfo: UserInfo\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(ScanPack);","map":{"version":3,"sources":["C:/Users/DELL PC/Downloads/GroovePacker/src/components/scanpack/scanpack.js"],"names":["React","Component","AsyncStorage","GestureRecognizer","swipeDirections","connect","NetInfo","GetOrderList","SearchOrder","SearchScanpackOrder","SetItem","GetItem","GetGeneralSetting","GetScanPackSetting","UserInfo","globalStyles","styles","PopUpModel","AntDesign","height","Dimensions","get","orderListSuccess","searchOrderSuccess","validateUser","messageShow","ScanPack","props","getOrder","Platform","OS","checkConnection","apiCall","alertBox","message","skip","messageTypeSuccess","setState","popUpModelShow","setTimeout","bind","type","input","fetch","connectionInfo","isConnected","callShipmentOrder","rfoTitle","state","dataList","closeAlert","redirect","clear","navigation","navigate","status","time","Date","userInfo","statusFunction","data","orderDetails","order","scan_hash","searchOrder","loading","loaderTitle","shipmentOrder","apiCallTime","handleChange","name","value","orderDetail","scan_pack_settings","inputFocus","createRef","ordersList","list","orderShow","orders","length","general_settings","ordernum","unClick","route","params","showScannedMessage","oldOne","searchResult","matched","order_num","error_messages","setFocus","is_active","flex1","flexDirectionRow","require","flex","marginTop","justifyContent","alignContent","alignItems","margin","fontSize","color","fontFamily","backgroundColor","borderWidth","borderColor","width","borderRadius","flexDirection","marginLeft","marginRight","alignSelf","mapStateToProps","scanpack","user","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { Component  } from 'react';\r\nimport { SafeAreaView , View, Text, TextInput,ActivityIndicator , TouchableOpacity  , Platform, ImageBackground, Dimensions,Image } from 'react-native';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport GestureRecognizer, {swipeDirections} from 'react-native-swipe-gestures';\r\nimport { connect } from 'react-redux';\r\nimport NetInfo from \"@react-native-community/netinfo\";\r\nimport { GetOrderList , SearchOrder } from \"../../actions/orderActions\";\r\nimport {SearchScanpackOrder} from \"../../actions/scanpackAction\";\r\nimport { SetItem , GetItem } from \"../../actions/updateAsyncAction\";\r\nimport {GetGeneralSetting , GetScanPackSetting , UserInfo} from \"../../actions/userAction\";\r\nimport globalStyles from '../../style/global';\r\nimport styles from '../../style/scanpack';\r\nimport PopUpModel from \"./pop_up_model\";\r\nimport AntDesign from 'react-native-vector-icons/AntDesign'\r\nconst height=Dimensions.get('window').height\r\n\r\nlet orderListSuccess = false;\r\nlet searchOrderSuccess = false;\r\nlet validateUser = false\r\nlet messageShow = false\r\n\r\nclass ScanPack extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data:{\r\n        \"input\": \"\",\r\n        \"state\": \"scanpack.rfo\",\r\n        \"id\": null,\r\n        \"box_id\": null,\r\n        \"store_order_id\": null,\r\n        \"app\": \"app\"\r\n      },\r\n      popUpModelShow: false,\r\n      dataList:{\r\n          \"filter\": \"\",\r\n          \"order\": \"DESC\",\r\n          \"limit\": \"1\",\r\n          \"offset\": \"0\",\r\n          \"app\": \"app\",\r\n          \"count\": 0\r\n      },\r\n      orderDetail: null,\r\n      rfoTitle: \"Scan the Packing Slip of an Order you'd like to Pack.\",\r\n      time: new Date(),\r\n      loading: false,\r\n      loaderTitle: \"\",\r\n      userInfo: \"\",\r\n      scan_pack_settings: null\r\n    };\r\n    this.inputFocus = React.createRef();\r\n    this.searchOrder = this.searchOrder.bind(this);\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.props.UserInfo()\r\n    this.setState({loading: true , loaderTitle: \"Loading...\"})\r\n    this.getOrder()\r\n    validateUser = true\r\n  }\r\n\r\n  //According to the platform call the function\r\n  getOrder = () => {\r\n    if(Platform.OS === \"ios\" || Platform.OS === \"android\"){\r\n      this.checkConnection(\"apiCall\")\r\n    }else{\r\n      this.apiCall()\r\n    }\r\n  }\r\n\r\n  alertBox = (message , skip , messageTypeSuccess) => {\r\n    if(messageTypeSuccess === true){\r\n      this.setState({popUpModelShow: true , message: message, messageTypeSuccess: true})\r\n    }else{\r\n      this.setState({popUpModelShow: true , message: message})\r\n    }\r\n    setTimeout(function(){\r\n      this.setState({popUpModelShow: false , message: \"\" , messageTypeSuccess: false});\r\n    }.bind(this),4000);\r\n    // try {\r\n    //   this.barcode.current.focus()\r\n    // } catch (error) {\r\n    // }\r\n  }\r\n\r\n  //Check the connection for the ios and android\r\n  checkConnection = async(type , input) => {\r\n    const connectionInfo = await NetInfo.fetch();\r\n    if(connectionInfo.isConnected){\r\n      type === \"callShipmentOrder\" ? this.callShipmentOrder(input) : this.apiCall()\r\n    }else{\r\n      this.setState({rfoTitle: \"Please check your internet connection\"})\r\n    }\r\n  }\r\n\r\n  //Call the api to fetch the data from backend\r\n  apiCall = () => {\r\n    this.props.GetOrderList(this.state.dataList);\r\n    orderListSuccess = true\r\n  }\r\n\r\n\r\n  componentDidUpdate(){\r\n    \r\n    //OrderList + scanpacksetting + general setting\r\n    if(orderListSuccess === true && this.props && this.props.ordersList && this.props.ordersList !== this.state.list){\r\n      orderListSuccess = false\r\n      let list = this.props.ordersList\r\n      let orderShow = list.orders.length === 0 ? true : false\r\n      this.setState({ scan_pack_settings: list.scan_pack_settings , \r\n                      general_settings: list.general_settings,\r\n                      rfoTitle: list.orders.length > 0 ? list && list.orders[0] && list.orders[0].ordernum : \"No orders were found in the awaiting orders list.\",\r\n                      //rfoTitle: list.orders.length > 0 ? list && list.orders[0] && list.orders[0].ordernum : \"Please scan an order to continue.\" ,\r\n                      orderDetail: list && list.orders && list.orders[0],\r\n                      loading: false,\r\n                      list: this.props.ordersList,\r\n                      unClick: orderShow\r\n                    })\r\n    }\r\n\r\n\r\n\r\n    if(messageShow === false && this.props && this.props.route && this.props.route.params && this.props.route.params.showScannedMessage){\r\n        this.alertBox(`The order has already been scanned.`, true , true)\r\n        this.setState({loading: true , loaderTitle: \"Loading...\"})\r\n        this.getOrder()\r\n        messageShow = true\r\n    }\r\n\r\n    //Search Order Data\r\n    if(searchOrderSuccess === true && this.props && \r\n        this.props.searchOrder && this.props.searchOrder.time > this.state.apiCallTime &&  \r\n          this.props.searchOrder !== this.state.oldOne){\r\n      let searchResult = this.props.searchOrder && this.props.searchOrder.searchOrder\r\n      let order =  searchResult && searchResult.data.order && searchResult.data.order[0]\r\n      if(searchResult){\r\n        if(searchResult.matched){\r\n          if(searchResult.data){\r\n              this.orderDetails(order) \r\n              searchOrderSuccess = false\r\n            }else{\r\n              if(searchResult.data.status === \"scanned\"){\r\n                let message = `Order ${searchResult.data.order_num} has already been scanned.` \r\n                this.statusFunction(message)\r\n                this.setState({unClick: true})\r\n              }\r\n            }\r\n        }else{\r\n          this.statusFunction(searchResult.error_messages)\r\n          this.setState({unClick: true})\r\n          searchOrderSuccess = false\r\n        }\r\n        this.setFocus() \r\n        let data = this.state.data\r\n        data[\"input\"] = \"\"\r\n        this.setState({oldOne: this.props.searchOrder ,data ,loading: false })\r\n      }\r\n    }\r\n\r\n    if(validateUser && this.props && this.props.userInfo && this.props.userInfo !== this.state.userInfo){\r\n      if(this.props.userInfo.is_active === false){\r\n        validateUser = false\r\n        this.props.UserInfo(false)\r\n        this.redirect()\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  closeAlert = () => {\r\n    this.setState({ popUpModelShow: false })\r\n  }\r\n\r\n  redirect = async() => {\r\n    // await AsyncStorage.removeItem(\"access_token\")\r\n    await AsyncStorage.clear();\r\n    this.props.navigation.navigate(\"SignIn\",{ status: \"Inactive\" , time: new Date()})\r\n    this.setState({userInfo: this.props.userInfo})\r\n  }\r\n\r\n  //After the apis call update the status (scanned , order  not present)\r\n  statusFunction = (message) => {\r\n    let data = this.state.data\r\n    data[\"input\"] = \"\"\r\n    this.setState({rfoTitle: message , data})\r\n  }\r\n\r\n  //To set the focus\r\n  // setFocus = () => {\r\n  //   this.inputFocus.current.focus();\r\n  // }\r\n\r\n  //Redirect to the scanpackItem page with order details \r\n  orderDetails = (order) => {\r\n    if(order && order.scan_hash && order.scan_hash.data){\r\n      this.props.navigation.navigate(\"ScanPackItem\" , {data: order.scan_hash.data})\r\n      messageShow = false\r\n    }\r\n  }\r\n\r\n  //Check the connection for mobile device before call the api\r\n  searchOrder = (input) => {\r\n    this.setState({loading: true , loaderTitle: \"Loading...\"})\r\n    if(input !== \"\"){\r\n      if(Platform.OS === \"ios\" || Platform.OS === \"android\"){\r\n        this.checkConnection(\"callShipmentOrder\", input)\r\n      }else{\r\n        this.callShipmentOrder(input)\r\n      }\r\n    }\r\n  }\r\n\r\n  //Api to call the search order\r\n  callShipmentOrder = (input) => {\r\n    let shipmentOrder = this.state.data\r\n    shipmentOrder[\"input\"] = input\r\n    if(input !== \"\"){\r\n      shipmentOrder.input = input\r\n      this.props.SearchScanpackOrder(shipmentOrder)\r\n      searchOrderSuccess = true\r\n      let apiCallTime = new Date()\r\n      this.setState({apiCallTime})\r\n    }\r\n  }\r\n\r\n  //Handle the search field input\r\n  handleChange = (name , value) => {\r\n    let order =  this.state.data;\r\n    if(name === \"searchOrder\"){\r\n      order[\"input\"] = value\r\n    }\r\n    this.setState({order})\r\n  }\r\n\r\n  componentWillUnmount(){\r\n    this.props.GetOrderList(this.state.dataList,false)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <SafeAreaView style={globalStyles.flex1}>\r\n        <View style={globalStyles.flexDirectionRow}>\r\n        </View>\r\n      \r\n\r\n<ImageBackground source={require('././../../../assets/background.png')} style={{flex:1}}>\r\n  <ImageBackground style={{height:350,marginTop:20}} source={require('././../../../assets/scaning.png')} resizeMode={'contain'}>\r\n  \r\n  <View style={{height:height/2,justifyContent:'center',alignContent:'center',alignItems:'center',margin:200}}>\r\n<Text style={{fontSize:60,color:'#728ba1',fontFamily:'Poppins'}}>\r\n  Scan\r\n</Text>\r\n<View style={{marginTop:30}}>\r\n<TextInput  style={{backgroundColor:'black',borderWidth:1,borderColor:'#95b0e5',height:35,width:280,borderRadius:5,color:'white',}}></TextInput>\r\n</View>\r\n<Text style={{color:'#728ba1',fontSize:20,marginTop:30,fontFamily:'Poppins'}}>\r\n  Scan a Packing slip to display an order.\r\n</Text>\r\n\r\n<TouchableOpacity style={{borderWidth:1,backgroundColor:'#869eb3',marginTop:30,width:300,height:40,borderRadius:5,justifyContent:'center',alignContent:'center'}}>\r\n  <View style={{flexDirection:'row',justifyContent:'space-between'}}>\r\n    <View style={{justifyContent:'center',alignContent:'center',alignItems:'center'}}>\r\n  <Text style={{marginLeft:30,color:'white',fontFamily:'Poppins'}}>\r\n    Quick Scan\r\n  </Text>\r\n  <Text style={{marginLeft:30,color:'white',fontFamily:'Poppins'}}>\r\n    111997723455-854578 </Text>\r\n  </View>\r\n  {/* <AntDesign color=\"white\" style={{marginRight:10,justifyContent:'center',alignItems:'center',alignSelf:'center',alignContent:'center'}} name=\"forward\" size={24} /> */}\r\n  <Image source={require('././../../../assets/arroe.png')} style={{marginRight:10,justifyContent:'center',alignItems:'center',alignSelf:'center',alignContent:'center'}} ></Image>\r\n  </View>\r\n</TouchableOpacity>\r\n\r\n<Text style={{color:'#5a6a77',marginTop:40,fontFamily:'Poppins'}}>\r\n  Import is in Progress.ETA5 min\r\n</Text>\r\n<TouchableOpacity style={{height:30,backgroundColor:'#869eb3',borderWidth:1,width:150,marginTop:15,justifyContent:'center',alignContent:'center',alignSelf:'center',alignItems:'center',borderRadius:5}}>\r\n  <Text style={{color:'white',fontFamily:'Poppins'}}>\r\n    Refresh\r\n  </Text>\r\n</TouchableOpacity>\r\n  </View>\r\n\r\n  </ImageBackground>\r\n\r\n</ImageBackground>\r\n\r\n      </SafeAreaView>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    ordersList: state.order.list,\r\n    searchOrder: state.scanpack,\r\n    userInfo: state.user.userInfo\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  GetOrderList,\r\n  SearchScanpackOrder,\r\n  UserInfo\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ScanPack)\r\n"]},"metadata":{},"sourceType":"module"}
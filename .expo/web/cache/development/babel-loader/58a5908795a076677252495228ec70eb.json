{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\DELL PC\\\\Downloads\\\\GroovePacker\\\\src\\\\components\\\\scanpack\\\\scanned_items.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport styles from \"../../style/scanpack\";\nimport globalStyles from \"../../style/global\";\nimport { LinearGradient } from 'expo-linear-gradient';\nimport backImage from \"../../../assets/bg_right.png\";\nimport placeholder from \"../../../assets/placeholder.png\";\nimport { fontFamily } from \"../../helpers/fontFamily\";\nvar count = 0;\n\nvar ScannedItems = function (_React$Component) {\n  _inherits(ScannedItems, _React$Component);\n\n  var _super = _createSuper(ScannedItems);\n\n  function ScannedItems(props) {\n    var _this;\n\n    _classCallCheck(this, ScannedItems);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      count: 0,\n      scannedItemPerPage: 1\n    };\n    return _this;\n  }\n\n  _createClass(ScannedItems, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var windowWidth = Dimensions.get('window').width;\n      var windowHeight = Dimensions.get('window').height;\n      var props = this.props;\n      var localCount = 0;\n      this.props.order && this.props.order.order && this.props.order.order.scanned_items && this.props.order.order.scanned_items.length > 0 && this.props.order.order.scanned_items.map(function (item) {\n        localCount = localCount + item.scanned_qty;\n      });\n      count = localCount;\n      var perPage = this.state.scannedItemPerPage * 10;\n      return React.createElement(View, {\n        style: Platform.OS === \"web\" ? styles.scannedItemContainerWeb : styles.scannedItemContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 7\n        }\n      }, Platform.OS === \"web\" ? React.createElement(View, {\n        style: {\n          flex: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }\n      }, windowWidth >= 900 ? React.createElement(ImageBackground, {\n        source: backImage,\n        style: {\n          height: \"100%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 19\n        }\n      }, React.createElement(Text, {\n        style: [styles.scannedItemTextWeb, {\n          fontFamily: fontFamily.font600\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }\n      }, count, \" Scanned Items\"), props.order && props.order.order && props.order.order.scanned_items.length > 0 ? React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 25\n        }\n      }, props.order.order.scanned_items.slice(0, perPage).map(function (item, index) {\n        return React.createElement(View, {\n          key: index + 1,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 33\n          }\n        }, item.scanned_qty > 0 && React.createElement(View, {\n          key: index,\n          style: {\n            flexDirection: \"row\",\n            position: \"relative\",\n            backgroundColor: \"#292929\",\n            textAlign: \"left\",\n            display: \"flex\",\n            marginTop: 5\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 37\n          }\n        }, React.createElement(View, {\n          style: {\n            width: '100%',\n            minHeight: 125\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 39\n          }\n        }, React.createElement(LinearGradient, {\n          colors: ['#b6c2d2', '#ddedfc', '#dceafc'],\n          locations: [0, 0.34, 1],\n          style: {\n            flex: 16,\n            padding: 4,\n            borderTopLeftRadius: 12,\n            borderTopEndRadius: 12\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 41\n          }\n        }, React.createElement(TouchableOpacity, {\n          onLongPress: function onLongPress() {\n            return _this2.props.redirectToItemDetail(item);\n          },\n          delayLongPress: 1000,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 43\n          }\n        }, React.createElement(Text, {\n          numberOfLines: 2,\n          ellipsizeMode: \"tail\",\n          style: item.name && item.name.length <= 32 ? {\n            fontSize: 18,\n            fontFamily: fontFamily.font400,\n            width: \"65%\",\n            textAlign: \"left\",\n            lineHeight: \"100%\"\n          } : {\n            fontSize: 16,\n            fontFamily: fontFamily.font400,\n            width: \"65%\",\n            textAlign: \"left\",\n            lineHeight: \"100%\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 45\n          }\n        }, item.name))), React.createElement(View, {\n          style: {\n            padding: 4,\n            justifyContent: \"center\",\n            backgroundColor: \"#b6cadd\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 41\n          }\n        }, React.createElement(Text, {\n          numberOfLines: 1,\n          ellipsizeMode: \"tail\",\n          style: {\n            fontSize: 18,\n            fontFamily: fontFamily.font700,\n            color: \"#3f638b\",\n            width: '65%'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 43\n          }\n        }, item.sku)), React.createElement(View, {\n          style: {\n            backgroundColor: \"#c1d4e6\",\n            paddingLeft: 3,\n            paddingRight: 3,\n            borderBottomLeftRadius: 10,\n            borderBottomRightRadius: 10,\n            paddingBottom: 3\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 41\n          }\n        }, React.createElement(View, {\n          style: {\n            backgroundColor: \"#d3def4\",\n            paddingLeft: 3,\n            paddingRight: 3\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 43\n          }\n        }, React.createElement(Text, {\n          style: {\n            fontSize: 18,\n            maxWidth: \"75%\"\n          },\n          numberOfLines: 1,\n          ellipsizeMode: \"tail\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 45\n          }\n        }, item && item.barcodes.length > 0 && item.barcodes[0].barcode)), React.createElement(View, {\n          style: {\n            maxWidth: \"75%\",\n            flexDirection: \"row\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 43\n          }\n        }, item.location !== null && item.location !== \"\" && item.location !== undefined && React.createElement(View, {\n          style: {\n            flex: 1,\n            flexDirection: \"row\",\n            alignItems: \"baseline\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 47\n          }\n        }, React.createElement(Text, {\n          style: {\n            fontSize: 12,\n            fontFamily: fontFamily.font400\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 49\n          }\n        }, \"L1:\"), React.createElement(Text, {\n          numberOfLines: 1,\n          style: {\n            fontSize: 15,\n            fontFamily: fontFamily.font700\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 49\n          }\n        }, item.location)), item.custom_product_1 !== null && item.custom_product_1 !== \"\" && item.custom_product_1 !== undefined && React.createElement(View, {\n          style: {\n            flex: 1,\n            flexDirection: \"row\",\n            alignItems: \"baseline\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 47\n          }\n        }, React.createElement(Text, {\n          style: {\n            fontSize: 12,\n            fontFamily: fontFamily.font400\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 49\n          }\n        }, \"C1:\"), React.createElement(Text, {\n          numberOfLines: 1,\n          style: {\n            fontSize: 15,\n            fontFamily: fontFamily.font700\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 49\n          }\n        }, item.custom_product_1))))), React.createElement(View, {\n          style: {\n            position: \"absolute\",\n            top: 0,\n            right: 0,\n            height: \"100%\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 39\n          }\n        }, React.createElement(LinearGradient, {\n          locations: [0, 0.04, 0.08],\n          start: {\n            x: .9,\n            y: 1\n          },\n          colors: ['#3d4851', '#9EA4A8', '#ffffff'],\n          style: {\n            height: 100,\n            width: 100,\n            backgroundColor: \"#000000\",\n            shadowColor: \"#000\",\n            shadowOffset: {\n              width: 0,\n              height: 0\n            },\n            shadowOpacity: 0.58,\n            shadowRadius: 29,\n            elevation: 3,\n            borderTopLeftRadius: 5,\n            borderBottomLeftRadius: 5,\n            marginTop: 5,\n            justifyContent: \"center\",\n            alignItems: \"center\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 41\n          }\n        }, React.createElement(Text, {\n          style: {\n            width: '90%',\n            position: \"absolute\",\n            textAlign: \"center\",\n            fontSize: 18,\n            fontFamily: fontFamily.font600,\n            backgroundColor: \"#fff\",\n            opacity: 0.7,\n            bottom: 0,\n            right: 0,\n            left: 0,\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n            zIndex: 999\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 43\n          }\n        }, item.scanned_qty, \"/\", item.qty_remaining + item.scanned_qty), React.createElement(Image, {\n          source: {\n            uri: item.images && item.images.length > 0 ? item.images[0].image : placeholder\n          },\n          style: {\n            height: \"90%\",\n            width: \"90%\",\n            resizeMode: 'contain',\n            borderRadius: 10\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 43\n          }\n        })))));\n      })) : React.createElement(View, {\n        style: globalStyles.p_10,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 25\n        }\n      }, React.createElement(Text, {\n        style: styles.scannedItemNameText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 27\n        }\n      }, \"Item not available in the scanned list\")), props.order.order.scanned_items && props.order.order.scanned_items.length >= perPage && React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 23\n        }\n      }, props.order.order.scanned_items && props.order.order.scanned_items.length >= perPage ? React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          var perPage = _this2.state.scannedItemPerPage + 1;\n\n          _this2.setState({\n            scannedItemPerPage: perPage\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 29\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: \"#fff\",\n          fontWeight: \"bold\",\n          fontSize: 14,\n          zIndex: 99999,\n          textShadowColor: '#000',\n          textShadowOffset: {\n            width: 1,\n            height: 1\n          },\n          display: \"flex\",\n          justifyContent: \"center\",\n          padding: 8,\n          background: \"#41970f\",\n          marginRight: \"auto\",\n          marginLeft: \"auto\",\n          borderRadius: 5,\n          marginTop: 2\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 31\n        }\n      }, \"Show More\")) : React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          var perPage = 1;\n\n          _this2.setState({\n            scannedItemPerPage: perPage\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 29\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: \"#fff\",\n          fontWeight: \"bold\",\n          fontSize: 14,\n          zIndex: 99999,\n          textShadowColor: '#000',\n          textShadowOffset: {\n            width: 1,\n            height: 1\n          },\n          display: \"flex\",\n          justifyContent: \"center\",\n          padding: 8,\n          background: \"#f54400\",\n          marginRight: \"auto\",\n          marginLeft: \"auto\",\n          borderRadius: 5,\n          marginTop: 2\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 31\n        }\n      }, \"Reset\")))) : React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 19\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: props.navButton,\n        style: {\n          position: \"fixed\",\n          top: \"35%\",\n          backgroundColor: \"rgba( 225 ,225 ,225 , 0.7)\",\n          writingMode: \"vertical-rl\",\n          left: 0,\n          borderTopRightRadius: 5,\n          borderBottomRightRadius: 5,\n          zIndex: 999,\n          height: 150,\n          textAlign: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: \"#000\",\n          padding: 15\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 23\n        }\n      }, \"Scan & Pack\")), React.createElement(View, {\n        style: {\n          height: windowHeight - 90,\n          width: \"100%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 21\n        }\n      }, props.order && props.order.order && props.order.order.scanned_items.length > 0 ? props.order.order.scanned_items.map(function (item, index) {\n        return React.createElement(React.Fragment, {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 31\n          }\n        }, item.scanned_qty > 0 && React.createElement(View, {\n          key: index,\n          style: {\n            flexDirection: \"row\",\n            margin: 1,\n            borderRadius: 20,\n            borderWidth: 4,\n            backgroundColor: \"#336598\",\n            borderColor: \"black\",\n            padding: 10\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 35\n          }\n        }, React.createElement(View, {\n          style: {\n            flex: 20\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 37\n          }\n        }, React.createElement(TouchableOpacity, {\n          style: {\n            backgroundColor: \"#fff\",\n            paddingLeft: 5,\n            paddingRight: 5,\n            borderTopLeftRadius: 10,\n            borderTopRightRadius: 10\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 39\n          }\n        }, React.createElement(Text, {\n          numberOfLines: 2,\n          style: item.name && item.name.length <= 32 ? {\n            fontSize: 20,\n            maxWidth: \"75%\",\n            lineHeight: \"100%\"\n          } : {\n            fontSize: 16,\n            maxWidth: \"75%\",\n            lineHeight: \"100%\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 41\n          }\n        }, item.name)), React.createElement(Text, {\n          numberOfLines: 1,\n          ellipsizeMode: \"tail\",\n          style: {\n            color: \"#fff\",\n            fontSize: 20,\n            fontWeight: \"600\",\n            maxWidth: \"70%\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 39\n          }\n        }, item.sku), React.createElement(View, {\n          style: {\n            backgroundColor: \"#95b0e5\",\n            paddingLeft: 3,\n            paddingRight: 3\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 39\n          }\n        }, React.createElement(View, {\n          style: {\n            maxWidth: \"75%\",\n            flexDirection: \"row\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 41\n          }\n        }, item.location !== null && item.location !== \"\" && item.location !== undefined && React.createElement(View, {\n          style: {\n            flex: 1,\n            flexDirection: \"row\",\n            alignItems: \"baseline\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 45\n          }\n        }, React.createElement(Text, {\n          style: {\n            fontSize: 12\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 47\n          }\n        }, \"L1:\"), React.createElement(Text, {\n          numberOfLines: 1,\n          ellipsizeMode: \"tail\",\n          style: {\n            fontSize: 15,\n            fontWeight: \"bold\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 47\n          }\n        }, item.location)), item.custom_product_1 !== null && item.custom_product_1 !== \"\" && item.custom_product_1 !== undefined && React.createElement(View, {\n          style: {\n            flex: 1,\n            flexDirection: \"row\",\n            alignItems: \"baseline\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 45\n          }\n        }, React.createElement(Text, {\n          style: {\n            fontSize: 12\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 47\n          }\n        }, \"C1:\"), React.createElement(Text, {\n          numberOfLines: 1,\n          ellipsizeMode: \"tail\",\n          style: {\n            fontSize: 15,\n            fontWeight: \"bold\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 47\n          }\n        }, item.custom_product_1)))), React.createElement(View, {\n          style: {\n            backgroundColor: \"#d3def4\",\n            paddingRight: 3,\n            paddingLeft: 3,\n            borderBottomLeftRadius: 10,\n            borderBottomRightRadius: 10\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 39\n          }\n        }, React.createElement(Text, {\n          style: {\n            fontSize: 20,\n            maxWidth: \"75%\"\n          },\n          numberOfLines: 1,\n          ellipsizeMode: \"tail\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 41\n          }\n        }, item && item.barcodes.length > 0 && item.barcodes[0].barcode))), React.createElement(View, {\n          style: {\n            flex: 5,\n            borderBottomRightRadius: 10,\n            borderTopRightRadius: 10,\n            position: \"absolute\",\n            right: 4,\n            width: \"25%\",\n            height: \"100%\",\n            bottom: 0\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 37\n          }\n        }, React.createElement(View, {\n          style: {\n            backgroundColor: \"#fff\",\n            shadowColor: \"#000\",\n            shadowOffset: {\n              width: 0,\n              height: 0\n            },\n            shadowOpacity: 1,\n            shadowRadius: 10,\n            elevation: 3,\n            borderRadius: 10,\n            borderWidth: 4,\n            borderColor: \"#336598\",\n            height: \"100%\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 39\n          }\n        }, React.createElement(Text, {\n          style: {\n            position: \"absolute\",\n            textAlign: \"center\",\n            fontSize: 18,\n            fontWeight: \"600\",\n            backgroundColor: \"#fff\",\n            opacity: 0.7,\n            bottom: 0,\n            right: 0,\n            left: 0,\n            borderRadius: 10,\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n            zIndex: 999\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 41\n          }\n        }, item.scanned_qty, \"/\", item.qty_remaining + item.scanned_qty), React.createElement(Image, {\n          source: {\n            uri: item.images && item.images.length > 0 ? item.images[0].image : placeholder\n          },\n          style: {\n            height: \"100%\",\n            width: \"100%\",\n            resizeMode: 'contain',\n            borderRadius: 10\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 41\n          }\n        })))));\n      }) : React.createElement(View, {\n        style: globalStyles.p_10,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 27\n        }\n      }, React.createElement(Text, {\n        style: styles.scannedItemNameText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 29\n        }\n      }, \"Item not available in the scanned list\")), props.order.order.scanned_items && props.order.order.scanned_items.length >= perPage && React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 25\n        }\n      }, props.order.order.scanned_items && props.order.order.scanned_items.length >= perPage ? React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          var perPage = _this2.state.scannedItemPerPage + 1;\n\n          _this2.setState({\n            scannedItemPerPage: perPage\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 31\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: \"#fff\",\n          fontWeight: \"bold\",\n          fontSize: 14,\n          zIndex: 99999,\n          textShadowColor: '#000',\n          textShadowOffset: {\n            width: 1,\n            height: 1\n          },\n          display: \"flex\",\n          justifyContent: \"center\",\n          padding: 8,\n          background: \"#41970f\",\n          marginRight: \"auto\",\n          marginLeft: \"auto\",\n          borderRadius: 5,\n          marginTop: 2\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 33\n        }\n      }, \"Show More\")) : React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          var perPage = 1;\n\n          _this2.setState({\n            scannedItemPerPage: perPage\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 31\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: \"#fff\",\n          fontWeight: \"bold\",\n          fontSize: 14,\n          zIndex: 99999,\n          textShadowColor: '#000',\n          textShadowOffset: {\n            width: 1,\n            height: 1\n          },\n          display: \"flex\",\n          justifyContent: \"center\",\n          padding: 8,\n          background: \"#f54400\",\n          marginRight: \"auto\",\n          marginLeft: \"auto\",\n          borderRadius: 5,\n          marginTop: 2\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 33\n        }\n      }, \"Reset\")))))) : React.createElement(View, {\n        style: {\n          height: windowHeight - 90,\n          width: \"100%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 13\n        }\n      }, props.order && props.order.order && props.order.order.scanned_items.length > 0 ? props.order.order.scanned_items.map(function (item, index) {\n        return React.createElement(React.Fragment, {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 407,\n            columnNumber: 23\n          }\n        }, item.scanned_qty > 0 && React.createElement(View, {\n          key: index,\n          style: {\n            flexDirection: \"row\",\n            margin: 0,\n            borderRadius: 30,\n            borderWidth: 4,\n            backgroundColor: \"#336598\",\n            borderColor: \"black\",\n            padding: 10\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 411,\n            columnNumber: 27\n          }\n        }, React.createElement(View, {\n          style: {\n            flex: 20\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 412,\n            columnNumber: 29\n          }\n        }, React.createElement(TouchableOpacity, {\n          style: {\n            backgroundColor: \"#fff\",\n            padding: 5,\n            borderTopLeftRadius: 20,\n            borderTopRightRadius: 20\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 413,\n            columnNumber: 31\n          }\n        }, React.createElement(Text, {\n          numberOfLines: 2,\n          style: item.name && item.name.length <= 32 ? {\n            fontSize: 20,\n            maxWidth: \"75%\",\n            lineHeight: \"100%\"\n          } : {\n            fontSize: 16,\n            maxWidth: \"75%\",\n            lineHeight: \"100%\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 414,\n            columnNumber: 33\n          }\n        }, item.name)), React.createElement(Text, {\n          numberOfLines: 1,\n          ellipsizeMode: \"tail\",\n          style: {\n            color: \"#fff\",\n            fontSize: 20,\n            fontWeight: \"600\",\n            maxWidth: \"70%\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 424,\n            columnNumber: 31\n          }\n        }, item.sku), React.createElement(View, {\n          style: {\n            backgroundColor: \"#95b0e5\",\n            paddingLeft: 3,\n            paddingRight: 3\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 430,\n            columnNumber: 31\n          }\n        }, React.createElement(View, {\n          style: {\n            maxWidth: \"70%\",\n            flexDirection: \"row\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 431,\n            columnNumber: 33\n          }\n        }, item.location !== null && item.location !== \"\" && item.location !== undefined && React.createElement(View, {\n          style: {\n            flex: 1,\n            flexDirection: \"row\",\n            alignItems: \"baseline\",\n            height: 25\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 434,\n            columnNumber: 37\n          }\n        }, React.createElement(Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 435,\n            columnNumber: 39\n          }\n        }, \"L1:\"), React.createElement(Text, {\n          numberOfLines: 1,\n          ellipsizeMode: \"tail\",\n          style: {\n            fontSize: 20,\n            fontWeight: \"bold\",\n            paddingRight: 10\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 436,\n            columnNumber: 39\n          }\n        }, item.location)), item.custom_product_1 !== null && item.custom_product_1 !== \"\" && item.custom_product_1 !== undefined && React.createElement(View, {\n          style: {\n            flex: 1,\n            flexDirection: \"row\",\n            alignItems: \"baseline\",\n            height: 25\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 446,\n            columnNumber: 37\n          }\n        }, React.createElement(Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 447,\n            columnNumber: 39\n          }\n        }, \"C1:\"), React.createElement(Text, {\n          numberOfLines: 1,\n          ellipsizeMode: \"tail\",\n          style: {\n            fontSize: 20,\n            fontWeight: \"bold\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 448,\n            columnNumber: 39\n          }\n        }, item.custom_product_1)))), React.createElement(View, {\n          style: {\n            backgroundColor: \"#d3def4\",\n            padding: 3,\n            borderBottomLeftRadius: 20,\n            borderBottomRightRadius: 20\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 458,\n            columnNumber: 31\n          }\n        }, React.createElement(Text, {\n          style: {\n            fontSize: 20,\n            maxWidth: \"75%\"\n          },\n          numberOfLines: 1,\n          ellipsizeMode: \"tail\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 459,\n            columnNumber: 33\n          }\n        }, item && item.barcodes.length > 0 && item.barcodes[0].barcode))), React.createElement(View, {\n          style: {\n            flex: 5,\n            borderBottomRightRadius: 12,\n            borderTopRightRadius: 12,\n            position: \"absolute\",\n            right: 6,\n            width: \"25%\",\n            height: \"100%\",\n            bottom: 0\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 472,\n            columnNumber: 29\n          }\n        }, React.createElement(View, {\n          style: {\n            backgroundColor: \"#fff\",\n            shadowColor: \"#000\",\n            shadowOffset: {\n              width: -5,\n              height: 2\n            },\n            shadowOpacity: 0.25,\n            shadowRadius: 3.84,\n            elevation: 3,\n            borderRadius: 12,\n            borderWidth: 8,\n            borderColor: \"#336598\",\n            height: \"100%\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 473,\n            columnNumber: 31\n          }\n        }, React.createElement(Text, {\n          style: {\n            position: \"absolute\",\n            textAlign: \"center\",\n            fontSize: 18,\n            fontWeight: \"600\",\n            backgroundColor: \"#fff\",\n            opacity: 0.7,\n            bottom: 0,\n            right: 0,\n            left: 0,\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n            zIndex: 999\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 474,\n            columnNumber: 33\n          }\n        }, item.scanned_qty, \"/\", item.qty_remaining + item.scanned_qty), React.createElement(Image, {\n          source: {\n            uri: item.images && item.images.length > 0 ? item.images[0].image : placeholder\n          },\n          style: {\n            height: \"100%\",\n            width: \"100%\",\n            resizeMode: 'contain',\n            borderRadius: 12\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 477,\n            columnNumber: 33\n          }\n        })))));\n      }) : React.createElement(View, {\n        style: globalStyles.p_10,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 487,\n          columnNumber: 19\n        }\n      }, React.createElement(Text, {\n        style: styles.scannedItemNameText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 488,\n          columnNumber: 21\n        }\n      }, \"Item not available in the scanned list\"))));\n    }\n  }]);\n\n  return ScannedItems;\n}(React.Component);\n\nexport { ScannedItems as default };","map":{"version":3,"sources":["C:/Users/DELL PC/Downloads/GroovePacker/src/components/scanpack/scanned_items.js"],"names":["React","styles","globalStyles","LinearGradient","backImage","placeholder","fontFamily","count","ScannedItems","props","state","scannedItemPerPage","windowWidth","Dimensions","get","width","windowHeight","height","localCount","order","scanned_items","length","map","item","scanned_qty","perPage","Platform","OS","scannedItemContainerWeb","scannedItemContainer","flex","scannedItemTextWeb","font600","slice","index","flexDirection","position","backgroundColor","textAlign","display","marginTop","minHeight","padding","borderTopLeftRadius","borderTopEndRadius","redirectToItemDetail","name","fontSize","font400","lineHeight","justifyContent","font700","color","sku","paddingLeft","paddingRight","borderBottomLeftRadius","borderBottomRightRadius","paddingBottom","maxWidth","barcodes","barcode","location","undefined","alignItems","custom_product_1","top","right","x","y","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","opacity","bottom","left","marginLeft","marginRight","zIndex","qty_remaining","uri","images","image","resizeMode","borderRadius","p_10","scannedItemNameText","setState","fontWeight","textShadowColor","textShadowOffset","background","navButton","writingMode","borderTopRightRadius","margin","borderWidth","borderColor","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { View, Text, ImageBackground, Image, Dimensions, TouchableOpacity, Platform, ScrollView } from 'react-native';\nimport styles from '../../style/scanpack';\nimport globalStyles from '../../style/global';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport backImage from \"../../../assets/bg_right.png\";\nimport placeholder from \"../../../assets/placeholder.png\";\nimport { fontFamily } from '../../helpers/fontFamily';\n\nlet count = 0\n\nexport default class ScannedItems extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      count: 0,\n      scannedItemPerPage: 1\n    };\n  }\n  render() {\n    const windowWidth = Dimensions.get('window').width;\n    const windowHeight = Dimensions.get('window').height;\n    let props = this.props;\n    let localCount = 0\n    this.props.order &&\n      this.props.order.order &&\n      this.props.order.order.scanned_items &&\n      this.props.order.order.scanned_items.length > 0 &&\n      this.props.order.order.scanned_items.map((item) => {\n        localCount = localCount + item.scanned_qty\n      }\n      )\n    count = localCount\n    let perPage = this.state.scannedItemPerPage * 10\n    return (\n      <View style={Platform.OS === \"web\" ? styles.scannedItemContainerWeb : styles.scannedItemContainer}>\n        {\n          Platform.OS === \"web\"\n            ?\n            <View style={{ flex: 1 }}>\n              {\n                windowWidth >= 900\n                  ?\n                  <ImageBackground source={backImage} style={{ height: \"100%\" }}>\n                    <Text style={[styles.scannedItemTextWeb, { fontFamily: fontFamily.font600 }]}>{count} Scanned Items</Text>\n                    {\n                      props.order && props.order.order && props.order.order.scanned_items.length > 0\n                        ?\n                        <View >\n                          {\n                            props.order.order.scanned_items.slice(0, perPage).map((item, index) => {\n                              return (\n                                <View key={index + 1}>\n                                  {\n                                    item.scanned_qty > 0\n                                    &&\n                                    <View key={index} style={{ flexDirection: \"row\", position: \"relative\", backgroundColor: \"#292929\", textAlign: \"left\", display: \"flex\", marginTop: 5 }}>\n                                      <View style={{ width: '100%', minHeight: 125 }}>\n                                        <LinearGradient\n                                          colors={['#b6c2d2', '#ddedfc', '#dceafc']}\n                                          locations={[0, 0.34, 1]}\n                                          style={{ flex: 16, padding: 4, borderTopLeftRadius: 12, borderTopEndRadius: 12 }}\n                                        >\n                                          <TouchableOpacity onLongPress={() => this.props.redirectToItemDetail(item)}\n                                            delayLongPress={1000}\n                                          >\n                                            <Text numberOfLines={2}\n                                              ellipsizeMode='tail'\n                                              style={item.name && item.name.length <= 32\n                                                ?\n                                                { fontSize: 18, fontFamily: fontFamily.font400, width: \"65%\", textAlign: \"left\", lineHeight: \"100%\" }\n                                                :\n                                                { fontSize: 16, fontFamily: fontFamily.font400, width: \"65%\", textAlign: \"left\", lineHeight: \"100%\" }}\n                                            >\n                                              {item.name}\n                                            </Text>\n                                          </TouchableOpacity>\n                                        </LinearGradient>\n                                        <View style={{\n                                          padding: 4,\n                                          justifyContent: \"center\",\n                                          backgroundColor: \"#b6cadd\"\n                                        }}>\n                                          <Text numberOfLines={1}\n                                            ellipsizeMode='tail'\n                                            style={{ fontSize: 18, fontFamily: fontFamily.font700, color: \"#3f638b\", width: '65%' }}\n                                          >\n                                            {item.sku}\n                                          </Text>\n                                        </View>\n                                        <View style={{ backgroundColor: \"#c1d4e6\", paddingLeft: 3, paddingRight: 3, borderBottomLeftRadius: 10, borderBottomRightRadius: 10, paddingBottom: 3 }}>\n                                          <View style={{ backgroundColor: \"#d3def4\", paddingLeft: 3, paddingRight: 3 }}>\n                                            <Text style={{ fontSize: 18, maxWidth: \"75%\" }}\n                                              numberOfLines={1}\n                                              ellipsizeMode='tail'\n                                            >\n                                              {\n                                                item &&\n                                                item.barcodes.length > 0 &&\n                                                item.barcodes[0].barcode\n                                              }\n                                            </Text>\n                                          </View>\n                                          <View style={{ maxWidth: \"75%\", flexDirection: \"row\" }}>\n                                            {\n                                              item.location !== null && item.location !== \"\" && item.location !== undefined &&\n                                              <View style={{ flex: 1, flexDirection: \"row\", alignItems: \"baseline\" }}>\n                                                <Text style={{ fontSize: 12, fontFamily: fontFamily.font400 }}>L1:</Text>\n                                                <Text numberOfLines={1}\n                                                  style={{ fontSize: 15, fontFamily: fontFamily.font700 }}\n                                                >\n                                                  {item.location}\n                                                </Text>\n                                              </View>\n                                            }\n                                            {\n                                              item.custom_product_1 !== null && item.custom_product_1 !== \"\" && item.custom_product_1 !== undefined &&\n                                              <View style={{ flex: 1, flexDirection: \"row\", alignItems: \"baseline\" }}>\n                                                <Text style={{ fontSize: 12, fontFamily: fontFamily.font400 }}>C1:</Text>\n                                                <Text numberOfLines={1}\n                                                  style={{ fontSize: 15, fontFamily: fontFamily.font700 }}\n                                                >\n                                                  {item.custom_product_1}\n                                                </Text>\n                                              </View>\n                                            }\n                                          </View>\n                                        </View>\n\n                                      </View>\n\n                                      <View style={{ position: \"absolute\", top: 0, right: 0, height: \"100%\" }}>\n                                        <LinearGradient\n                                          locations={[0, 0.04, 0.08]}\n                                          start={{ x: .9, y: 1 }}\n                                          colors={['#3d4851', '#9EA4A8', '#ffffff']}\n                                          style={{\n                                            height: 100,\n                                            width: 100,\n                                            backgroundColor: \"#000000\",\n                                            shadowColor: \"#000\",\n                                            shadowOffset: { width: 0, height: 0 },\n                                            shadowOpacity: 0.58,\n                                            shadowRadius: 29,\n                                            elevation: 3,\n                                            borderTopLeftRadius: 5,\n                                            borderBottomLeftRadius: 5,\n                                            marginTop: 5,\n                                            justifyContent: \"center\",\n                                            alignItems: \"center\"\n                                          }}>\n                                          <Text style={{ width: '90%', position: \"absolute\", textAlign: \"center\", fontSize: 18, fontFamily: fontFamily.font600, backgroundColor: \"#fff\", opacity: 0.7, bottom: 0, right: 0, left: 0, marginLeft: \"auto\", marginRight: \"auto\", zIndex: 999 }}>\n                                            {item.scanned_qty}/{item.qty_remaining + item.scanned_qty}\n                                          </Text>\n                                          <Image source={{ uri: item.images && item.images.length > 0 ? item.images[0].image : placeholder }}\n                                            style={{ height: \"90%\", width: \"90%\", resizeMode: 'contain', borderRadius: 10 }} />\n                                        </LinearGradient>\n                                      </View>\n                                    </View>\n                                  }\n                                </View>\n                              )\n                            })\n                          }\n                        </View>\n                        :\n                        <View style={globalStyles.p_10}>\n                          <Text style={styles.scannedItemNameText}>\n                            Item not available in the scanned list\n                          </Text>\n                        </View>\n                    }\n                    {\n                      props.order.order.scanned_items && props.order.order.scanned_items.length >= perPage &&\n                      <View>\n                        {\n                          props.order.order.scanned_items && props.order.order.scanned_items.length >= perPage\n                            ?\n                            <TouchableOpacity onPress={() => {\n                              let perPage = this.state.scannedItemPerPage + 1\n                              this.setState({ scannedItemPerPage: perPage })\n                            }}>\n                              <Text style={{\n                                color: \"#fff\",\n                                fontWeight: \"bold\",\n                                fontSize: 14,\n                                zIndex: 99999,\n                                textShadowColor: '#000',\n                                textShadowOffset: { width: 1, height: 1 },\n                                display: \"flex\",\n                                justifyContent: \"center\",\n                                padding: 8,\n                                background: \"#41970f\",\n                                marginRight: \"auto\",\n                                marginLeft: \"auto\",\n                                borderRadius: 5,\n                                marginTop: 2\n                              }}>\n                                Show More\n                              </Text>\n                            </TouchableOpacity>\n                            :\n                            <TouchableOpacity onPress={() => {\n                              let perPage = 1\n                              this.setState({ scannedItemPerPage: perPage })\n                            }}>\n                              <Text style={{\n                                color: \"#fff\",\n                                fontWeight: \"bold\",\n                                fontSize: 14,\n                                zIndex: 99999,\n                                textShadowColor: '#000',\n                                textShadowOffset: { width: 1, height: 1 },\n                                display: \"flex\",\n                                justifyContent: \"center\",\n                                padding: 8,\n                                background: \"#f54400\",\n                                marginRight: \"auto\",\n                                marginLeft: \"auto\",\n                                borderRadius: 5,\n                                marginTop: 2\n                              }}>\n                                Reset\n                              </Text>\n                            </TouchableOpacity>\n                        }\n                      </View>\n                    }\n                  </ImageBackground>\n                  :\n                  <View>\n                    <TouchableOpacity onPress={props.navButton}\n                      style={{\n                        position: \"fixed\",\n                        top: \"35%\",\n                        backgroundColor: \"rgba( 225 ,225 ,225 , 0.7)\",\n                        writingMode: \"vertical-rl\",\n                        left: 0,\n                        borderTopRightRadius: 5,\n                        borderBottomRightRadius: 5,\n                        zIndex: 999,\n                        height: 150,\n                        textAlign: \"center\"\n                      }}\n                    >\n                      <Text style={{ color: \"#000\", padding: 15 }}>Scan & Pack</Text>\n                    </TouchableOpacity>\n                    <View style={{ height: windowHeight - 90, width: \"100%\" }}>\n                      {\n                        props.order && props.order.order && props.order.order.scanned_items.length > 0\n                          ?\n                          props.order.order.scanned_items.map((item, index) => {\n                            return (\n                              <React.Fragment key={index}>\n                                {\n                                  item.scanned_qty > 0\n                                  &&\n                                  <View key={index} style={{ flexDirection: \"row\", margin: 1, borderRadius: 20, borderWidth: 4, backgroundColor: \"#336598\", borderColor: \"black\", padding: 10 }}>\n                                    <View style={{ flex: 20 }}>\n                                      <TouchableOpacity style={{ backgroundColor: \"#fff\", paddingLeft: 5, paddingRight: 5, borderTopLeftRadius: 10, borderTopRightRadius: 10 }}>\n                                        <Text numberOfLines={2}\n                                          style={item.name && item.name.length <= 32\n                                            ?\n                                            { fontSize: 20, maxWidth: \"75%\", lineHeight: \"100%\" }\n                                            :\n                                            { fontSize: 16, maxWidth: \"75%\", lineHeight: \"100%\" }}\n                                        >\n                                          {item.name}\n                                        </Text>\n                                      </TouchableOpacity>\n                                      <Text numberOfLines={1}\n                                        ellipsizeMode='tail'\n                                        style={{ color: \"#fff\", fontSize: 20, fontWeight: \"600\", maxWidth: \"70%\" }}\n                                      >\n                                        {item.sku}\n                                      </Text>\n                                      <View style={{ backgroundColor: \"#95b0e5\", paddingLeft: 3, paddingRight: 3 }}>\n                                        <View style={{ maxWidth: \"75%\", flexDirection: \"row\" }}>\n                                          {\n                                            item.location !== null && item.location !== \"\" && item.location !== undefined &&\n                                            <View style={{ flex: 1, flexDirection: \"row\", alignItems: \"baseline\" }}>\n                                              <Text style={{ fontSize: 12 }}>L1:</Text>\n                                              <Text numberOfLines={1}\n                                                ellipsizeMode='tail'\n                                                style={{ fontSize: 15, fontWeight: \"bold\" }}\n                                              >\n                                                {item.location}\n                                              </Text>\n                                            </View>\n                                          }\n                                          {\n                                            item.custom_product_1 !== null && item.custom_product_1 !== \"\" && item.custom_product_1 !== undefined &&\n                                            <View style={{ flex: 1, flexDirection: \"row\", alignItems: \"baseline\" }}>\n                                              <Text style={{ fontSize: 12 }}>C1:</Text>\n                                              <Text numberOfLines={1}\n                                                ellipsizeMode='tail'\n                                                style={{ fontSize: 15, fontWeight: \"bold\" }}\n                                              >\n                                                {item.custom_product_1}\n                                              </Text>\n                                            </View>\n                                          }\n                                        </View>\n                                      </View>\n                                      <View style={{ backgroundColor: \"#d3def4\", paddingRight: 3, paddingLeft: 3, borderBottomLeftRadius: 10, borderBottomRightRadius: 10 }}>\n                                        <Text style={{ fontSize: 20, maxWidth: \"75%\" }}\n                                          numberOfLines={1}\n                                          ellipsizeMode='tail'\n                                        >\n                                          {\n                                            item &&\n                                            item.barcodes.length > 0 &&\n                                            item.barcodes[0].barcode\n                                          }\n                                        </Text>\n                                      </View>\n                                    </View>\n\n                                    <View style={{ flex: 5, borderBottomRightRadius: 10, borderTopRightRadius: 10, position: \"absolute\", right: 4, width: \"25%\", height: \"100%\", bottom: 0 }}>\n                                      <View style={{ backgroundColor: \"#fff\", shadowColor: \"#000\", shadowOffset: { width: 0, height: 0 }, shadowOpacity: 1, shadowRadius: 10, elevation: 3, borderRadius: 10, borderWidth: 4, borderColor: \"#336598\", height: \"100%\" }}>\n                                        <Text style={{ position: \"absolute\", textAlign: \"center\", fontSize: 18, fontWeight: \"600\", backgroundColor: \"#fff\", opacity: 0.7, bottom: 0, right: 0, left: 0, borderRadius: 10, marginLeft: \"auto\", marginRight: \"auto\", zIndex: 999 }}>\n                                          {item.scanned_qty}/{item.qty_remaining + item.scanned_qty}\n                                        </Text>\n                                        <Image source={{ uri: item.images && item.images.length > 0 ? item.images[0].image : placeholder }}\n                                          style={{ height: \"100%\", width: \"100%\", resizeMode: 'contain', borderRadius: 10 }} />\n                                      </View>\n                                    </View>\n                                  </View>\n                                }\n                              </React.Fragment>\n                            )\n                          })\n                          :\n                          <View style={globalStyles.p_10}>\n                            <Text style={styles.scannedItemNameText}>\n                              Item not available in the scanned list\n                            </Text>\n                          </View>\n                      }\n                      {\n                        props.order.order.scanned_items && props.order.order.scanned_items.length >= perPage &&\n                        <View>\n                          {\n                            props.order.order.scanned_items && props.order.order.scanned_items.length >= perPage\n                              ?\n                              <TouchableOpacity onPress={() => {\n                                let perPage = this.state.scannedItemPerPage + 1\n                                this.setState({ scannedItemPerPage: perPage })\n                              }}>\n                                <Text style={{\n                                  color: \"#fff\",\n                                  fontWeight: \"bold\",\n                                  fontSize: 14,\n                                  zIndex: 99999,\n                                  textShadowColor: '#000',\n                                  textShadowOffset: { width: 1, height: 1 },\n                                  display: \"flex\",\n                                  justifyContent: \"center\",\n                                  padding: 8,\n                                  background: \"#41970f\",\n                                  marginRight: \"auto\",\n                                  marginLeft: \"auto\",\n                                  borderRadius: 5,\n                                  marginTop: 2\n                                }}>\n                                  Show More\n                                </Text>\n                              </TouchableOpacity>\n                              :\n                              <TouchableOpacity onPress={() => {\n                                let perPage = 1\n                                this.setState({ scannedItemPerPage: perPage })\n                              }}>\n                                <Text style={{\n                                  color: \"#fff\",\n                                  fontWeight: \"bold\",\n                                  fontSize: 14,\n                                  zIndex: 99999,\n                                  textShadowColor: '#000',\n                                  textShadowOffset: { width: 1, height: 1 },\n                                  display: \"flex\",\n                                  justifyContent: \"center\",\n                                  padding: 8,\n                                  background: \"#f54400\",\n                                  marginRight: \"auto\",\n                                  marginLeft: \"auto\",\n                                  borderRadius: 5,\n                                  marginTop: 2\n                                }}>\n                                  Reset\n                                </Text>\n                              </TouchableOpacity>\n                          }\n                        </View>\n                      }\n                    </View>\n                  </View>\n              }\n            </View>\n            :\n            <View style={{ height: windowHeight - 90, width: \"100%\" }}>\n              {\n                props.order && props.order.order && props.order.order.scanned_items.length > 0\n                  ?\n                  props.order.order.scanned_items.map((item, index) => {\n                    return (\n                      <React.Fragment key={index}>\n                        {\n                          item.scanned_qty > 0\n                          &&\n                          <View key={index} style={{ flexDirection: \"row\", margin: 0, borderRadius: 30, borderWidth: 4, backgroundColor: \"#336598\", borderColor: \"black\", padding: 10 }}>\n                            <View style={{ flex: 20 }}>\n                              <TouchableOpacity style={{ backgroundColor: \"#fff\", padding: 5, borderTopLeftRadius: 20, borderTopRightRadius: 20 }}>\n                                <Text numberOfLines={2}\n                                  style={item.name && item.name.length <= 32\n                                    ?\n                                    { fontSize: 20, maxWidth: \"75%\", lineHeight: \"100%\" }\n                                    :\n                                    { fontSize: 16, maxWidth: \"75%\", lineHeight: \"100%\" }}\n                                >\n                                  {item.name}\n                                </Text>\n                              </TouchableOpacity>\n                              <Text numberOfLines={1}\n                                ellipsizeMode='tail'\n                                style={{ color: \"#fff\", fontSize: 20, fontWeight: \"600\", maxWidth: \"70%\" }}\n                              >\n                                {item.sku}\n                              </Text>\n                              <View style={{ backgroundColor: \"#95b0e5\", paddingLeft: 3, paddingRight: 3 }}>\n                                <View style={{ maxWidth: \"70%\", flexDirection: \"row\" }}>\n                                  {\n                                    item.location !== null && item.location !== \"\" && item.location !== undefined &&\n                                    <View style={{ flex: 1, flexDirection: \"row\", alignItems: \"baseline\", height: 25 }}>\n                                      <Text>L1:</Text>\n                                      <Text numberOfLines={1}\n                                        ellipsizeMode='tail'\n                                        style={{ fontSize: 20, fontWeight: \"bold\", paddingRight: 10 }}\n                                      >\n                                        {item.location}\n                                      </Text>\n                                    </View>\n                                  }\n                                  {\n                                    item.custom_product_1 !== null && item.custom_product_1 !== \"\" && item.custom_product_1 !== undefined &&\n                                    <View style={{ flex: 1, flexDirection: \"row\", alignItems: \"baseline\", height: 25 }}>\n                                      <Text>C1:</Text>\n                                      <Text numberOfLines={1}\n                                        ellipsizeMode='tail'\n                                        style={{ fontSize: 20, fontWeight: \"bold\" }}\n                                      >\n                                        {item.custom_product_1}\n                                      </Text>\n                                    </View>\n                                  }\n                                </View>\n                              </View>\n                              <View style={{ backgroundColor: \"#d3def4\", padding: 3, borderBottomLeftRadius: 20, borderBottomRightRadius: 20 }}>\n                                <Text style={{ fontSize: 20, maxWidth: \"75%\" }}\n                                  numberOfLines={1}\n                                  ellipsizeMode='tail'\n                                >\n                                  {\n                                    item &&\n                                    item.barcodes.length > 0 &&\n                                    item.barcodes[0].barcode\n                                  }\n                                </Text>\n                              </View>\n                            </View>\n\n                            <View style={{ flex: 5, borderBottomRightRadius: 12, borderTopRightRadius: 12, position: \"absolute\", right: 6, width: \"25%\", height: \"100%\", bottom: 0 }}>\n                              <View style={{ backgroundColor: \"#fff\", shadowColor: \"#000\", shadowOffset: { width: -5, height: 2 }, shadowOpacity: 0.25, shadowRadius: 3.84, elevation: 3, borderRadius: 12, borderWidth: 8, borderColor: \"#336598\", height: \"100%\" }}>\n                                <Text style={{ position: \"absolute\", textAlign: \"center\", fontSize: 18, fontWeight: \"600\", backgroundColor: \"#fff\", opacity: 0.7, bottom: 0, right: 0, left: 0, marginLeft: \"auto\", marginRight: \"auto\", zIndex: 999 }}>\n                                  {item.scanned_qty}/{item.qty_remaining + item.scanned_qty}\n                                </Text>\n                                <Image source={{ uri: item.images && item.images.length > 0 ? item.images[0].image : placeholder }}\n                                  style={{ height: \"100%\", width: \"100%\", resizeMode: 'contain', borderRadius: 12 }} />\n                              </View>\n                            </View>\n                          </View>\n                        }\n                      </React.Fragment>\n                    )\n                  })\n                  :\n                  <View style={globalStyles.p_10}>\n                    <Text style={styles.scannedItemNameText}>\n                      Item not available in the scanned list\n                    </Text>\n                  </View>\n              }\n            </View>\n        }\n      </View>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\DELL PC\\\\Downloads\\\\GroovePacker\\\\src\\\\helpers\\\\swipe-gesture.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport PanResponder from \"react-native-web/dist/exports/PanResponder\";\n\nvar SwipeGesture = function (_Component) {\n  _inherits(SwipeGesture, _Component);\n\n  var _super = _createSuper(SwipeGesture);\n\n  function SwipeGesture() {\n    var _this;\n\n    _classCallCheck(this, SwipeGesture);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.componentWillMount = function () {\n      _this.PanResponder = PanResponder.create({\n        onStartShouldSetPanResponder: function onStartShouldSetPanResponder(evt, gestureState) {\n          return true;\n        },\n        onPanResponderRelease: function onPanResponderRelease(evt, gestureState) {\n          var x = gestureState.dx;\n          var y = gestureState.dy;\n\n          if (Math.abs(x) > Math.abs(y)) {\n            if (x >= 0 && x >= 200) {\n              _this.props.onSwipePerformed('right');\n            } else if (x < 0 && x <= -200) {\n              _this.props.onSwipePerformed('left');\n            }\n          } else {\n            if (y >= 0 && y >= 200) {\n              _this.props.onSwipePerformed('down');\n            } else if (y < 0 && y <= -200) {\n              _this.props.onSwipePerformed('up');\n            }\n          }\n        }\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(SwipeGesture, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Animated.View, _extends({}, this.PanResponder.panHandlers, {\n        style: this.props.gestureStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 7\n        }\n      }), React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 9\n        }\n      }, this.props.children));\n    }\n  }]);\n\n  return SwipeGesture;\n}(Component);\n\nexport { SwipeGesture as default };","map":{"version":3,"sources":["C:/Users/DELL PC/Downloads/GroovePacker/src/helpers/swipe-gesture.js"],"names":["React","Component","SwipeGesture","componentWillMount","PanResponder","create","onStartShouldSetPanResponder","evt","gestureState","onPanResponderRelease","x","dx","y","dy","Math","abs","props","onSwipePerformed","panHandlers","gestureStyle","children"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;IAOqBC,Y;;;;;;;;;;;;;;;;UAEnBC,kB,GAAqB,YAAM;AACzB,YAAKC,YAAL,GAAoBA,YAAY,CAACC,MAAb,CAAoB;AACtCC,QAAAA,4BAA4B,EAAE,sCAACC,GAAD,EAAMC,YAAN;AAAA,iBAAuB,IAAvB;AAAA,SADQ;AAEtCC,QAAAA,qBAAqB,EAAE,+BAACF,GAAD,EAAMC,YAAN,EAAuB;AAC5C,cAAIE,CAAC,GAAGF,YAAY,CAACG,EAArB;AACA,cAAIC,CAAC,GAAGJ,YAAY,CAACK,EAArB;;AACA,cAAIC,IAAI,CAACC,GAAL,CAASL,CAAT,IAAcI,IAAI,CAACC,GAAL,CAASH,CAAT,CAAlB,EAA+B;AAC7B,gBAAIF,CAAC,IAAI,CAAL,IAAUA,CAAC,IAAI,GAAnB,EAAwB;AACtB,oBAAKM,KAAL,CAAWC,gBAAX,CAA4B,OAA5B;AACD,aAFD,MAEO,IAAGP,CAAC,GAAG,CAAJ,IAASA,CAAC,IAAI,CAAC,GAAlB,EAAuB;AAC5B,oBAAKM,KAAL,CAAWC,gBAAX,CAA4B,MAA5B;AACD;AACF,WAND,MAOK;AACH,gBAAIL,CAAC,IAAI,CAAL,IAAUA,CAAC,IAAI,GAAnB,EAAwB;AACtB,oBAAKI,KAAL,CAAWC,gBAAX,CAA4B,MAA5B;AACD,aAFD,MAEO,IAAIL,CAAC,GAAG,CAAJ,IAASA,CAAC,IAAI,CAAC,GAAnB,EAAwB;AAC7B,oBAAKI,KAAL,CAAWC,gBAAX,CAA4B,IAA5B;AACD;AACF;AACF;AAnBqC,OAApB,CAApB;AAqBD,K;;;;;;;WAED,kBAAS;AACP,aACE,oBAAC,QAAD,CAAU,IAAV,eAAmB,KAAKb,YAAL,CAAkBc,WAArC;AAAkD,QAAA,KAAK,EAAE,KAAKF,KAAL,CAAWG,YAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAO,KAAKH,KAAL,CAAWI,QAAlB,CADF,CADF;AAKD;;;;EAhCuCnB,S;;SAArBC,Y","sourcesContent":["import React, { Component } from 'react';\nimport {\n  View,\n  Animated,\n  PanResponder\n} from 'react-native';\n\nexport default class SwipeGesture extends Component {\n\n  componentWillMount = () => {\n    this.PanResponder = PanResponder.create({\n      onStartShouldSetPanResponder: (evt, gestureState) => true,\n      onPanResponderRelease: (evt, gestureState) => {\n        let x = gestureState.dx;\n        let y = gestureState.dy;\n        if (Math.abs(x) > Math.abs(y)) {\n          if (x >= 0 && x >= 200) {\n            this.props.onSwipePerformed('right')\n          } else if(x < 0 && x <= -200) {\n            this.props.onSwipePerformed('left')\n          }\n        }\n        else {\n          if (y >= 0 && y >= 200) {\n            this.props.onSwipePerformed('down')\n          } else if (y < 0 && y <= -200) {\n            this.props.onSwipePerformed('up')\n          }\n        }\n      }\n    })\n  }\n\n  render() {\n    return (\n      <Animated.View {...this.PanResponder.panHandlers} style={this.props.gestureStyle}>\n        <View>{this.props.children}</View>\n      </Animated.View>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}
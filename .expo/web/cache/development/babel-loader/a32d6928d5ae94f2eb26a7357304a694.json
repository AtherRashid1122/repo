{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\DELL PC\\\\Downloads\\\\GroovePacker\\\\src\\\\components\\\\products\\\\product_detail.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport AsyncStorage from \"react-native-web/dist/exports/AsyncStorage\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { connect } from 'react-redux';\nimport { GetProductDetail, UpdateProductInfo, updateProductAlias } from \"../../actions/productAction\";\nimport { SearchScanpackOrder } from \"../../actions/scanpackAction\";\nimport { SetItem } from \"../../actions/updateAsyncAction\";\nimport ProductInfo from \"./product_info\";\nimport ScanpackOptions from \"./scanpack_options\";\nimport InventoryKitOptions from \"./inventory_kit_options\";\nimport ProductActivityLog from \"./product_activity_log\";\nimport globalStyles from \"../../style/global\";\nimport styles from \"../../style/scanpack\";\nimport cross from \"../../../assets/close_black.png\";\nimport shared_barcode from \"../../../assets/shared_barcode.png\";\nimport ProductAlias from \"../Alias/productAlias\";\nvar updateProductInfoSuccess = false;\nvar searchOrderSuccess = false;\nvar orderID = 0;\nvar buttonClick = false;\nvar aliasValid = false;\n\nvar ProductDetail = function (_Component) {\n  _inherits(ProductDetail, _Component);\n\n  var _super = _createSuper(ProductDetail);\n\n  function ProductDetail(props) {\n    var _this;\n\n    _classCallCheck(this, ProductDetail);\n\n    _this = _super.call(this, props);\n\n    _this.apiCall = function () {\n      _this.setState({\n        loading: true,\n        loaderTitle: \"Loading...\"\n      });\n\n      var id = _this.props.route && _this.props.route.params && _this.props.route.params.productInfo;\n      orderID = _this.props.route && _this.props.route.params && _this.props.route.params.orderID;\n\n      if (id) {\n        _this.props.GetProductDetail(id);\n      }\n    };\n\n    _this.changeState = function (state) {\n      if (state === \"productInfoActive\") {\n        _this.setState({\n          productInfoActive: true,\n          scanPackOptionsActive: false,\n          inventoryKitOptionsActive: false,\n          productActivityLogActive: false\n        });\n      }\n\n      if (state === \"scanPackOptionsActive\") {\n        _this.setState({\n          productInfoActive: false,\n          scanPackOptionsActive: true,\n          inventoryKitOptionsActive: false,\n          productActivityLogActive: false\n        });\n      }\n\n      if (state === \"inventoryKitOptionsActive\") {\n        _this.setState({\n          productInfoActive: false,\n          scanPackOptionsActive: false,\n          inventoryKitOptionsActive: true,\n          productActivityLogActive: false\n        });\n      }\n\n      if (state === \"productActivityLogActive\") {\n        _this.setState({\n          productInfoActive: false,\n          scanPackOptionsActive: false,\n          inventoryKitOptionsActive: false,\n          productActivityLogActive: true\n        });\n      }\n    };\n\n    _this.multiBarcode = function (value, name, index) {\n      var basicinfo = _this.state.Product.basicinfo;\n      var Product = _this.state.Product;\n\n      if (name === \"is_skippable\") {\n        basicinfo[name] = value;\n      }\n\n      if (name === \"barcode\" || name === \"packing_count\") {\n        if (name === \"barcode\") {\n          Product.barcodes[index].barcode = value;\n        }\n\n        if (name === \"packing_count\") {\n          Product.barcodes[index].packing_count = value;\n        }\n      }\n\n      _this.setState({\n        Product: Product\n      });\n    };\n\n    _this.productInfoHandleChange = function (value, name) {\n      var Product = _this.state.Product;\n      var basicinfo = Product && Product.basicinfo;\n\n      if (basicinfo) {\n        basicinfo[name] = value;\n      }\n\n      _this.setState({\n        Product: Product\n      });\n    };\n\n    _this.addMultiBarcode = function () {\n      var Product = _this.props.product.barcodes;\n      var newHash = {\n        barcode: \"\",\n        packing_count: \"1\",\n        product_id: _this.props.product.basicinfo.id\n      };\n      Product.push(newHash);\n\n      _this.setState({\n        Product: Product\n      });\n    };\n\n    _this.updateProductSBC = function (details, type, remove) {\n      var data = _this.state.Product;\n\n      if (type === \"barcode\") {\n        data.barcodes = details;\n\n        if (remove !== true) {\n          _this.updateProduct(\"barcode\");\n        }\n      }\n\n      if (type === \"sku\") {\n        data.skus = details;\n      }\n\n      if (type === \"cats\") {\n        data.cats = details;\n      }\n\n      _this.setState({\n        data: data\n      });\n    };\n\n    _this.inventoryWarehousesHandleChange = function (value, name) {\n      var Product = _this.state.Product.inventory_warehouses[0].info;\n      Product[name] = value;\n\n      _this.setState({\n        Product: Product\n      });\n    };\n\n    _this.updateProduct = function (from) {\n      _this.setState({\n        loading: true,\n        loaderTitle: \"Updating...\"\n      }, function () {\n        console.log(\"loading\", _this.state.loading);\n      });\n\n      var Product = _this.state.Product;\n\n      if (Product) {\n        var id = Product.basicinfo && Product.basicinfo.id;\n\n        if (id) {\n          Product[\"app\"] = \"app\";\n          var data = Product;\n\n          _this.props.UpdateProductInfo(id, Product);\n\n          if (from === \"barcode\") {\n            updateProductInfoSuccess = false;\n            aliasValid = true;\n            setTimeout(function () {\n              return _this.setState({\n                loading: false\n              });\n            }, 500);\n          } else {\n            updateProductInfoSuccess = true;\n          }\n\n          buttonClick = true;\n        }\n      }\n    };\n\n    _this.proceedAliasing = function () {\n      var alias_product_data_id = _this.props.updateProduct.alias_product_data.id;\n      var current_product_data_id = [];\n      current_product_data_id.push(_this.props.updateProduct.current_product_data.id);\n      var details = {\n        product_alias_ids: current_product_data_id\n      };\n\n      _this.props.updateProductAlias(alias_product_data_id, details);\n\n      updateProductInfoSuccess = true;\n    };\n\n    _this.assignUniquebarcode = function () {\n      var data = _this.state.data;\n      var lastItem = data.length;\n      var removefromLocal = \"\";\n      data && data.barcodes.length > 0 && data.barcodes.map(function (barcode) {\n        if (barcode.id === undefined) {\n          data.barcodes.pop();\n          removefromLocal = barcode.barcode;\n        }\n      });\n\n      _this.setState({\n        data: data,\n        shareBarcodeShow: false,\n        alias: false,\n        updateBarcodeLocal: true,\n        removefromLocal: removefromLocal\n      });\n    };\n\n    _this.sameBarcode = function () {\n      var data = _this.state.Product;\n      var lastItem = data.barcodes.length > 0 && data.barcodes.length - 1;\n      var id = data.basicinfo.id;\n      data && data.barcodes.length > 0 && data.barcodes.map(function (barcode, index) {\n        if (index === lastItem) {\n          barcode[\"permit_same_barcode\"] = true;\n        }\n      });\n\n      _this.props.UpdateProductInfo(id, data);\n\n      _this.setState({\n        data: data,\n        shareBarcodeShow: false,\n        alias: false\n      });\n    };\n\n    _this.state = {\n      productInfoActive: true,\n      scanPackOptionsActive: false,\n      inventoryKitOptionsActive: false,\n      productActivityLogActive: false,\n      Product: [],\n      loading: false,\n      alias: false,\n      shareBarcodeShow: false,\n      updateBarcodeLocal: false,\n      removefromLocal: \"\",\n      loadingText: \"Loading\",\n      pickerSelectedOptions: [{\n        label: \"On\",\n        value: \"on\"\n      }, {\n        label: \"Off\",\n        value: \"off\"\n      }, {\n        label: \"On with confirmation\",\n        value: \"on_with_confirmation\"\n      }]\n    };\n    return _this;\n  }\n\n  _createClass(ProductDetail, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.SearchScanpackOrder(\"\", false);\n      this.apiCall();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      var _this2 = this;\n\n      if (this.props && this.props.product && this.state.Product !== this.props.product) {\n        this.setState({\n          Product: this.props.product,\n          loading: false\n        });\n        this.props.UpdateProductInfo(0);\n      }\n\n      if (aliasValid && this.props && this.props.updateProduct && this.props.updateProduct.show_alias_popup) {\n        setTimeout(function () {\n          return _this2.setState({\n            alias: true,\n            Product: _this2.props.updateProduct,\n            loading: false\n          });\n        }, 500);\n        aliasValid = false;\n        this.props.UpdateProductInfo(0);\n      }\n\n      if (updateProductInfoSuccess === true && this.props && this.props.updateProduct && this.props.updateProduct.scan_pack_product) {\n        setTimeout(function () {\n          return _this2.setState({\n            Product: _this2.props.updateProduct.scan_pack_product,\n            loading: false\n          });\n        }, 500);\n        this.props.navigation.navigate(\"ScanPackItem\", {\n          data: {\n            from: \"productDetailPage\",\n            time: new Date(),\n            increment_id: this.props.route.params.increment_id\n          }\n        });\n        updateProductInfoSuccess = false;\n        aliasValid = false;\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.setState({\n        data: {},\n        Product: {}\n      });\n      this.props.GetProductDetail(0);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var Product = this.state && this.props.product;\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 7\n        }\n      }, this.state.loading ? React.createElement(View, {\n        style: {\n          flex: 1,\n          justifyContent: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 13\n        }\n      }, React.createElement(ActivityIndicator, {\n        size: \"large\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 15\n        }\n      }), React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 412,\n          columnNumber: 15\n        }\n      }, React.createElement(Text, {\n        style: {\n          textAlign: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 17\n        }\n      }, this.state.loaderTitle))) : React.createElement(View, {\n        style: globalStyles.flex1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 417,\n          columnNumber: 13\n        }\n      }, React.createElement(ProductAlias, {\n        alias: this.state.alias,\n        Product: this.state.Product,\n        updateProduct: this.props.updateProduct,\n        assignUniquebarcode: function assignUniquebarcode() {\n          return _this3.assignUniquebarcode();\n        },\n        shareBarcodeMethod: function shareBarcodeMethod() {\n          _this3.setState({\n            shareBarcodeShow: true,\n            alias: false\n          });\n        },\n        proceedAliasing: function proceedAliasing() {\n          return _this3.proceedAliasing();\n        },\n        shareBarcodeShow: this.state.shareBarcodeShow,\n        sameBarcode: function sameBarcode() {\n          return _this3.sameBarcode();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 15\n        }\n      }), this.props && Product && this.state.Product !== [] && React.createElement(View, {\n        style: globalStyles.flex1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 576,\n          columnNumber: 19\n        }\n      }, React.createElement(View, {\n        style: {\n          flexDirection: \"row\",\n          margin: 10,\n          borderWidth: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 577,\n          columnNumber: 21\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: this.changeState.bind(this, \"productInfoActive\"),\n        style: [globalStyles.flex2, {\n          backgroundColor: this.state.productInfoActive ? \"white\" : \"rgb(51, 101, 153)\",\n          justifyContent: \"center\"\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 578,\n          columnNumber: 23\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: this.state.productInfoActive ? \"black\" : \"white\",\n          padding: 10,\n          textAlign: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 579,\n          columnNumber: 25\n        }\n      }, \"Product Info\")), React.createElement(TouchableOpacity, {\n        onPress: this.changeState.bind(this, \"scanPackOptionsActive\"),\n        style: {\n          flex: 2,\n          backgroundColor: this.state.scanPackOptionsActive ? \"white\" : \"rgb(51, 101, 153)\",\n          justifyContent: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 583,\n          columnNumber: 23\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: this.state.scanPackOptionsActive ? \"black\" : \"white\",\n          padding: 10,\n          textAlign: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 584,\n          columnNumber: 25\n        }\n      }, \"Scan & Pack Options\")), React.createElement(TouchableOpacity, {\n        onPress: this.changeState.bind(this, \"inventoryKitOptionsActive\"),\n        style: {\n          flex: 2,\n          backgroundColor: this.state.inventoryKitOptionsActive ? \"white\" : \"rgb(51, 101, 153)\",\n          justifyContent: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 588,\n          columnNumber: 23\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: this.state.inventoryKitOptionsActive ? \"black\" : \"white\",\n          padding: 10,\n          textAlign: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 589,\n          columnNumber: 25\n        }\n      }, \"Inventory/Kit Options\")), React.createElement(TouchableOpacity, {\n        onPress: this.changeState.bind(this, \"productActivityLogActive\"),\n        style: {\n          flex: 2,\n          backgroundColor: this.state.productActivityLogActive ? \"white\" : \"rgb(51, 101, 153)\",\n          justifyContent: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 593,\n          columnNumber: 23\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: this.state.productActivityLogActive ? \"black\" : \"white\",\n          padding: 10,\n          textAlign: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 594,\n          columnNumber: 25\n        }\n      }, \"Product Activity Log\"))), React.createElement(View, {\n        style: {\n          flexDirection: \"row\",\n          alignSelf: \"flex-end\",\n          marginRight: 10,\n          marginLeft: 10,\n          padding: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 599,\n          columnNumber: 21\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return _this3.updateProduct(\"save&close\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 600,\n          columnNumber: 23\n        }\n      }, React.createElement(Text, {\n        style: {\n          padding: 10,\n          backgroundColor: \"rgb(51, 101, 153)\",\n          color: \"#fff\",\n          fontWeight: \"bold\",\n          borderRadius: 20,\n          marginRight: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 600,\n          columnNumber: 90\n        }\n      }, \"Save & Close\")), React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return _this3.props.navigation.goBack();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 601,\n          columnNumber: 23\n        }\n      }, React.createElement(Text, {\n        style: {\n          padding: 10,\n          backgroundColor: \"rgb(73, 72, 72)\",\n          color: \"#fff\",\n          fontWeight: \"bold\",\n          borderRadius: 20\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 601,\n          columnNumber: 88\n        }\n      }, \"Close \"))), this.state.productInfoActive && React.createElement(ProductInfo, _extends({\n        basicinfo: Product.basicinfo,\n        images: Product.images,\n        navigation: this.props.navigation,\n        productInfoHandleChange: function productInfoHandleChange(value, name) {\n          return _this3.productInfoHandleChange(value, name);\n        },\n        updateProductSBC: function updateProductSBC(details, type, remove) {\n          return _this3.updateProductSBC(details, type, remove);\n        },\n        updateProduct: function updateProduct() {\n          return _this3.updateProduct();\n        },\n        updateBarcodeLocal: this.state.updateBarcodeLocal,\n        removefromLocal: this.state.removefromLocal,\n        updateLocalBarcode: function updateLocalBarcode() {\n          return _this3.setState({\n            removefromLocal: \"\"\n          });\n        }\n      }, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 605,\n          columnNumber: 25\n        }\n      })), this.state.scanPackOptionsActive && React.createElement(ScanpackOptions, {\n        barcodes: Product.barcodes,\n        basicinfo: Product.basicinfo,\n        productInfoHandleChange: function productInfoHandleChange(value, name) {\n          return _this3.productInfoHandleChange(value, name);\n        },\n        multiBarcode: function multiBarcode(value, name, index) {\n          return _this3.multiBarcode(value, name, index);\n        },\n        navigation: this.props.navigation,\n        addMultiBarcode: function addMultiBarcode() {\n          return _this3.addMultiBarcode();\n        },\n        pickerSelectedOptions: this.state.pickerSelectedOptions,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 619,\n          columnNumber: 25\n        }\n      }), this.state.inventoryKitOptionsActive && React.createElement(InventoryKitOptions, {\n        inventoryWarehouses: Product.inventory_warehouses,\n        navigation: this.props.navigation,\n        inventoryWarehousesHandleChange: function inventoryWarehousesHandleChange(value, name) {\n          return _this3.inventoryWarehousesHandleChange(value, name);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 630,\n          columnNumber: 25\n        }\n      }), this.state.productActivityLogActive && React.createElement(ProductActivityLog, {\n        activities: Product.activities,\n        navigation: this.props.navigation,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 637,\n          columnNumber: 25\n        }\n      }), React.createElement(View, {\n        style: {\n          flexDirection: \"row\",\n          alignSelf: \"flex-end\",\n          marginRight: 10,\n          marginLeft: 10,\n          padding: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 641,\n          columnNumber: 21\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return _this3.updateProduct(\"save&close\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 642,\n          columnNumber: 23\n        }\n      }, React.createElement(Text, {\n        style: {\n          padding: 10,\n          backgroundColor: \"rgb(51, 101, 153)\",\n          color: \"#fff\",\n          fontWeight: \"bold\",\n          borderRadius: 20,\n          marginRight: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 642,\n          columnNumber: 90\n        }\n      }, \"Save & Close\")), React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return _this3.props.navigation.goBack();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 643,\n          columnNumber: 23\n        }\n      }, React.createElement(Text, {\n        style: {\n          padding: 10,\n          backgroundColor: \"rgb(73, 72, 72)\",\n          color: \"#fff\",\n          fontWeight: \"bold\",\n          borderRadius: 20\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 643,\n          columnNumber: 88\n        }\n      }, \"Close \"))))));\n    }\n  }]);\n\n  return ProductDetail;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    product: state.product.product,\n    updateProduct: state.product.updateProduct,\n    searchOrder: state.scanpack,\n    updateProductAlias: state.product.updateProductAlias\n  };\n};\n\nvar mapDispatchToProps = {\n  GetProductDetail: GetProductDetail,\n  UpdateProductInfo: UpdateProductInfo,\n  SetItem: SetItem,\n  SearchScanpackOrder: SearchScanpackOrder,\n  updateProductAlias: updateProductAlias\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductDetail);","map":{"version":3,"sources":["C:/Users/DELL PC/Downloads/GroovePacker/src/components/products/product_detail.js"],"names":["React","Component","connect","GetProductDetail","UpdateProductInfo","updateProductAlias","SearchScanpackOrder","SetItem","ProductInfo","ScanpackOptions","InventoryKitOptions","ProductActivityLog","globalStyles","styles","cross","shared_barcode","ProductAlias","updateProductInfoSuccess","searchOrderSuccess","orderID","buttonClick","aliasValid","ProductDetail","props","apiCall","setState","loading","loaderTitle","id","route","params","productInfo","changeState","state","productInfoActive","scanPackOptionsActive","inventoryKitOptionsActive","productActivityLogActive","multiBarcode","value","name","index","basicinfo","Product","barcodes","barcode","packing_count","productInfoHandleChange","addMultiBarcode","product","newHash","product_id","push","updateProductSBC","details","type","remove","data","updateProduct","skus","cats","inventoryWarehousesHandleChange","inventory_warehouses","info","from","console","log","setTimeout","proceedAliasing","alias_product_data_id","alias_product_data","current_product_data_id","current_product_data","product_alias_ids","assignUniquebarcode","lastItem","length","removefromLocal","map","undefined","pop","shareBarcodeShow","alias","updateBarcodeLocal","sameBarcode","loadingText","pickerSelectedOptions","label","show_alias_popup","scan_pack_product","navigation","navigate","time","Date","increment_id","flex","justifyContent","textAlign","flex1","flexDirection","margin","borderWidth","bind","flex2","backgroundColor","color","padding","alignSelf","marginRight","marginLeft","fontWeight","borderRadius","goBack","images","activities","mapStateToProps","searchOrder","scanpack","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { View, Text, TextInput , ActivityIndicator , TouchableOpacity , AsyncStorage,Image  } from 'react-native';\nimport { connect } from 'react-redux';\nimport { GetProductDetail , UpdateProductInfo , updateProductAlias } from \"../../actions/productAction\";\nimport {SearchScanpackOrder} from \"../../actions/scanpackAction\";\nimport { SetItem } from \"../../actions/updateAsyncAction\";\nimport ProductInfo from \"./product_info\";\nimport ScanpackOptions from \"./scanpack_options\";\nimport InventoryKitOptions from \"./inventory_kit_options\";\nimport ProductActivityLog from \"./product_activity_log\";\nimport globalStyles from '../../style/global';\nimport styles from '../../style/scanpack';\nimport cross from \"../../../assets/close_black.png\";\nimport shared_barcode from \"../../../assets/shared_barcode.png\";\nimport ProductAlias from \"../Alias/productAlias\";\n\nlet updateProductInfoSuccess = false\nlet searchOrderSuccess = false\nlet orderID = 0\nlet buttonClick = false\nlet aliasValid = false\n\nclass ProductDetail extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      productInfoActive : true ,\n      scanPackOptionsActive:  false,\n      inventoryKitOptionsActive: false,\n      productActivityLogActive: false,\n      Product: [],\n      loading: false,\n      alias: false,\n      shareBarcodeShow: false,\n      updateBarcodeLocal: false,\n      removefromLocal: \"\",\n      loadingText: \"Loading\",\n      pickerSelectedOptions:[\n        {\n          label: \"On\",\n          value: \"on\"\n        },\n        {\n          label: \"Off\",\n          value: \"off\"\n        },\n        {\n          label: \"On with confirmation\",\n          value: \"on_with_confirmation\"\n        }\n      ]\n    };\n  }\n\n  componentDidMount(){\n    this.props.SearchScanpackOrder(\"\" , false)\n    this.apiCall()\n  }\n\n  // static getDerivedStateFromProps(nextProps){\n  //   if(nextProps.product){\n  //     return {Product: nextProps.product}\n  //   }\n  //   return null\n  // }\n\n  componentDidUpdate(){    \n    if(this.props && this.props.product && this.state.Product !== this.props.product){\n      this.setState({Product: this.props.product , loading: false })\n      this.props.UpdateProductInfo(0)\n    }\n\n    if(aliasValid && this.props && this.props.updateProduct && this.props.updateProduct.show_alias_popup){\n      setTimeout( () => this.setState({alias: true , Product: this.props.updateProduct ,loading: false}) , 500);\n      aliasValid = false\n      this.props.UpdateProductInfo(0)\n    }\n\n    if(updateProductInfoSuccess === true && this.props && this.props.updateProduct && this.props.updateProduct.scan_pack_product){\n      setTimeout( () => this.setState({Product: this.props.updateProduct.scan_pack_product ,loading: false}) , 500);\n      this.props.navigation.navigate(\"ScanPackItem\" , {data: {from: \"productDetailPage\" , time: new Date() , increment_id: this.props.route.params.increment_id} } )\n      updateProductInfoSuccess = false\n      aliasValid = false\n    }\n\n    // if(updateProductInfoSuccess === true && this.props && this.props.updateProduct && this.props.updateProduct.scan_pack_product){\n    //   if(aliasValid && this.props.updateProduct.show_alias_popup){\n    //     setTimeout( () => this.setState({alias: true , Product: this.props.updateProduct ,loading: false}) , 500);\n    //     aliasValid = false\n    //   }else{\n    //     setTimeout( () => this.setState({Product: this.props.updateProduct.scan_pack_product ,loading: false}) , 500);\n    //     this.props.navigation.navigate(\"ScanPackItem\" , {data: {from: \"productDetailPage\" , time: new Date() , increment_id: this.props.route.params.increment_id} } )\n    //   }\n    //   updateProductInfoSuccess = false\n    // }\n  \n  }\n\n  //Redirect to the scanpackItem page with order details \n  // orderDetails = (order) => {\n  //   if(order && order.scan_hash && order.scan_hash.data){\n  //     this.props.navigation.navigate(\"ScanPackItem\" , {data: {from: \"productDetailPage\" , data: order.scan_hash.data} } )\n  //   }\n  // }\n\n  // updateProductLocal = async(productInfo) => {\n  //   if(productInfo){\n  //     let updateOrderID =  productInfo.product_id\n  //     let localOrderData = await AsyncStorage.getItem(\"storeOrder\")\n  //     let order = JSON.parse(localOrderData)\n  //     let newOrder = []\n  //     let pushOrder = {}\n  //     order.orders && order.orders.length > 0 && order.orders.map((order , index) => {\n  //       return(\n  //         order.scan_hash && order.scan_hash.data.order && order.scan_hash.data.order.unscanned_items && order.scan_hash.data.order.unscanned_items.length > 0 && order.scan_hash.data.order.unscanned_items.map((items , index) => {\n  //           if(items.product_type === \"single\"){\n  //             if(items.product_id === updateOrderID){\n  //                 items.barcodes = productInfo.barcodes\n  //                 items.click_scan_enabled = productInfo.click_scan_enabled\n  //                 items.confirmation = productInfo.confirmation\n  //                 items.custom_product_1 = productInfo.custom_product_1\n  //                 items.custom_product_2 = productInfo.custom_product_2\n  //                 items.custom_product_3 = productInfo.custom_product_3\n  //                 items.custom_product_display_1 = productInfo.custom_product_display_1\n  //                 items.custom_product_display_2 = productInfo.custom_product_display_2\n  //                 items.custom_product_display_3 = productInfo.custom_product_display_3\n  //                 items.images = productInfo.images\n  //                 items.instruction = productInfo.instruction\n  //                 items.location = productInfo.location\n  //                 items.location2 = productInfo.location2\n  //                 items.location3 = productInfo.location3\n  //                 items.name = productInfo.name\n  //                 items.packing_placement = productInfo.packing_placement\n  //                 items.product_id = productInfo.product_id\n  //                 items.record_serial = productInfo.record_serial\n  //                 items.second_record_serial = productInfo.second_record_serial\n  //                 items.skippable = productInfo.skippable\n  //                 items.sku = productInfo.sku\n  //                 items.type_scan_enabled = productInfo.type_scan_enabled\n  //             }\n  //           }else{\n  //             items.child_items && items.child_items.length > 0 && items.child_items.map((child , index) => {\n  //               if(child.product_id === updateOrderID){\n  //                 child.barcodes = productInfo.barcodes\n  //                 child.click_scan_enabled = productInfo.click_scan_enabled\n  //                 child.confirmation = productInfo.confirmation\n  //                 child.custom_product_1 = productInfo.custom_product_1\n  //                 child.custom_product_2 = productInfo.custom_product_2\n  //                 child.custom_product_3 = productInfo.custom_product_3\n  //                 child.custom_product_display_1 = productInfo.custom_product_display_1\n  //                 child.custom_product_display_2 = productInfo.custom_product_display_2\n  //                 child.custom_product_display_3 = productInfo.custom_product_display_3\n  //                 child.images = productInfo.images\n  //                 child.instruction = productInfo.instruction\n  //                 child.location = productInfo.location\n  //                 child.location2 = productInfo.location2\n  //                 child.location3 = productInfo.location3\n  //                 child.name = productInfo.name\n  //                 child.packing_placement = productInfo.packing_placement\n  //                 child.product_id = productInfo.product_id\n  //                 child.record_serial = productInfo.record_serial\n  //                 child.second_record_serial = productInfo.second_record_serial\n  //                 child.skippable = productInfo.skippable\n  //                 child.sku = productInfo.sku\n  //                 child.type_scan_enabled = productInfo.type_scan_enabled\n  //               }\n  //             })\n  //           }\n  //           return items\n  //         })\n  //       )\n  //     })\n  //     order.orders && order.orders.length > 0 && order.orders.map((order , index) => {\n  //       return(\n  //         order.scan_hash && order.scan_hash.data.order && order.scan_hash.data.order.scanned_items && order.scan_hash.data.order.scanned_items.length > 0 && order.scan_hash.data.order.scanned_items.map((items , index) => {\n  //           if(items.product_type === \"single\"){\n  //             if(items.product_id === updateOrderID){\n  //                 items.barcodes = productInfo.barcodes\n  //                 items.click_scan_enabled = productInfo.click_scan_enabled\n  //                 items.confirmation = productInfo.confirmation\n  //                 items.custom_product_1 = productInfo.custom_product_1\n  //                 items.custom_product_2 = productInfo.custom_product_2\n  //                 items.custom_product_3 = productInfo.custom_product_3\n  //                 items.custom_product_display_1 = productInfo.custom_product_display_1\n  //                 items.custom_product_display_2 = productInfo.custom_product_display_2\n  //                 items.custom_product_display_3 = productInfo.custom_product_display_3\n  //                 items.images = productInfo.images\n  //                 items.instruction = productInfo.instruction\n  //                 items.location = productInfo.location\n  //                 items.location2 = productInfo.location2\n  //                 items.location3 = productInfo.location3\n  //                 items.name = productInfo.name\n  //                 items.packing_placement = productInfo.packing_placement\n  //                 items.product_id = productInfo.product_id\n  //                 items.record_serial = productInfo.record_serial\n  //                 items.second_record_serial = productInfo.second_record_serial\n  //                 items.skippable = productInfo.skippable\n  //                 items.sku = productInfo.sku\n  //                 items.type_scan_enabled = productInfo.type_scan_enabled\n  //             }\n  //           }else{\n  //             items.child_items && items.child_items.length > 0 && items.child_items.map((child , index) => {\n  //               if(child.product_id === updateOrderID){\n  //                 child.barcodes = productInfo.barcodes\n  //                 child.click_scan_enabled = productInfo.click_scan_enabled\n  //                 child.confirmation = productInfo.confirmation\n  //                 child.custom_product_1 = productInfo.custom_product_1\n  //                 child.custom_product_2 = productInfo.custom_product_2\n  //                 child.custom_product_3 = productInfo.custom_product_3\n  //                 child.custom_product_display_1 = productInfo.custom_product_display_1\n  //                 child.custom_product_display_2 = productInfo.custom_product_display_2\n  //                 child.custom_product_display_3 = productInfo.custom_product_display_3\n  //                 child.images = productInfo.images\n  //                 child.instruction = productInfo.instruction\n  //                 child.location = productInfo.location\n  //                 child.location2 = productInfo.location2\n  //                 child.location3 = productInfo.location3\n  //                 child.name = productInfo.name\n  //                 child.packing_placement = productInfo.packing_placement\n  //                 child.product_id = productInfo.product_id\n  //                 child.record_serial = productInfo.record_serial\n  //                 child.second_record_serial = productInfo.second_record_serial\n  //                 child.skippable = productInfo.skippable\n  //                 child.sku = productInfo.sku\n  //                 child.type_scan_enabled = productInfo.type_scan_enabled\n  //               }\n  //             })\n  //           }\n  //           return items\n  //         })\n  //       )\n  //     })\n  //     order.orders && order.orders.map((order , index) => {\n  //       if(order.id === orderID){\n  //         pushOrder = order\n  //       }\n  //     })\n  //     let convertOrder = JSON.stringify(order)\n\n  //     this.props.SetItem(\"storeOrder\", convertOrder)\n  //     this.props.navigation.navigate('ScanPackItem', {data: pushOrder.scan_hash.data});\n  //     this.setState({visible: false})\n  //   }\n  // }\n\n  apiCall = () =>{\n    this.setState({loading: true , loaderTitle: \"Loading...\"})\n    let id = this.props.route && this.props.route.params && this.props.route.params.productInfo\n    orderID = this.props.route && this.props.route.params && this.props.route.params.orderID\n    if(id){\n      this.props.GetProductDetail(id)\n    }\n  }\n\n  changeState = (state) => {\n    if(state === \"productInfoActive\"){\n      this.setState({ productInfoActive: true, scanPackOptionsActive: false, inventoryKitOptionsActive: false,\n                      productActivityLogActive: false\n                    })\n    }\n    if(state === \"scanPackOptionsActive\"){\n      this.setState({ productInfoActive: false, scanPackOptionsActive: true, inventoryKitOptionsActive: false,\n                      productActivityLogActive: false\n                    })\n    }\n    if(state === \"inventoryKitOptionsActive\"){\n      this.setState({ productInfoActive: false, scanPackOptionsActive: false, inventoryKitOptionsActive: true,\n                      productActivityLogActive: false\n                    })\n    }\n    if(state === \"productActivityLogActive\"){\n      this.setState({ productInfoActive: false, scanPackOptionsActive: false, inventoryKitOptionsActive: false,\n                      productActivityLogActive: true\n                    })\n    }\n  }\n\n  multiBarcode = (value , name , index) => {\n    let basicinfo = this.state.Product.basicinfo\n    let Product = this.state.Product\n    if(name === \"is_skippable\"){\n      basicinfo[name] = value\n    }\n    if(name === \"barcode\" || name === \"packing_count\"){\n      if(name === \"barcode\"){\n        Product.barcodes[index].barcode = value\n      }\n      if(name === \"packing_count\"){\n        Product.barcodes[index].packing_count = value \n      }\n    }\n    this.setState({Product})\n  }\n\n  productInfoHandleChange = (value , name ) => {\n    let Product = this.state.Product\n    let basicinfo = Product && Product.basicinfo\n    if(basicinfo){\n      basicinfo[name] = value\n    }\n    this.setState({Product})\n  }\n\n  addMultiBarcode = () => {\n    let Product = this.props.product.barcodes\n    let newHash = {\n          barcode: \"\",\n          packing_count: \"1\",\n          product_id: this.props.product.basicinfo.id\n        }\n    Product.push(newHash)\n    this.setState({Product})\n  }\n\n  updateProductSBC = (details , type , remove) => {\n    let data = this.state.Product\n    if(type === \"barcode\"){\n      data.barcodes = details\n      if(remove !== true){\n        this.updateProduct(\"barcode\")\n      } \n    }\n    if(type === \"sku\"){\n      data.skus = details\n    }\n    if(type === \"cats\"){\n      data.cats = details\n    }\n    this.setState({data})\n  }\n\n  inventoryWarehousesHandleChange = (value , name ) => {\n    let Product = this.state.Product.inventory_warehouses[0].info\n    Product[name] = value\n    this.setState({Product})\n  }\n\n  updateProduct = (from) => {\n    this.setState({loading: true , loaderTitle: \"Updating...\"} , () => {\n      console.log(\"loading\" , this.state.loading )\n    })\n    let Product = this.state.Product\n    if(Product){\n      let id = Product.basicinfo && Product.basicinfo.id\n      if(id){\n        Product[\"app\"] = \"app\"\n        let data = Product\n        this.props.UpdateProductInfo(id , Product)\n        if(from === \"barcode\"){\n          updateProductInfoSuccess = false\n          aliasValid = true\n          setTimeout( () => this.setState({loading: false}) , 500);\n        }else{\n          updateProductInfoSuccess = true\n        }\n        buttonClick = true\n      }\n    }\n  }\n\n  componentWillUnmount(){\n    this.setState({data: {} , Product: {}})\n    this.props.GetProductDetail(0)\n  }\n\n  proceedAliasing = () => {\n    let alias_product_data_id = this.props.updateProduct.alias_product_data.id\n    let current_product_data_id = []\n    current_product_data_id.push(this.props.updateProduct.current_product_data.id)\n    let details = {\n      product_alias_ids: current_product_data_id\n    }\n    this.props.updateProductAlias(alias_product_data_id , details)\n    updateProductInfoSuccess = true\n  }\n\n  assignUniquebarcode = () => {\n    let data = this.state.data\n    let lastItem = data.length\n    let removefromLocal = \"\"\n    data && data.barcodes.length > 0 && data.barcodes.map((barcode) => {\n      if(barcode.id === undefined){\n        data.barcodes.pop()\n        removefromLocal = barcode.barcode\n      }\n    })\n    this.setState({data , shareBarcodeShow: false, alias: false,  updateBarcodeLocal: true , removefromLocal})\n  }\n\n  sameBarcode = () => {\n    let data = this.state.Product\n    let lastItem = data.barcodes.length > 0 && data.barcodes.length - 1\n    let id = data.basicinfo.id\n    data && data.barcodes.length > 0 && data.barcodes.map((barcode,index) => {\n      if(index === lastItem){\n        barcode[\"permit_same_barcode\"] = true\n      }\n    })\n    this.props.UpdateProductInfo(id , data)\n    this.setState({data , shareBarcodeShow: false, alias: false})\n  }\n\n  render() {\n    let Product = this.state && this.props.product\n    return (\n      <React.Fragment>\n        {\n          this.state.loading\n          ?\n            <View style={{flex: 1 , justifyContent: \"center\"}}>\n              <ActivityIndicator size=\"large\" />\n              <View>\n                <Text style={{textAlign: \"center\"}}>{this.state.loaderTitle}</Text>\n              </View>\n            </View>\n          :\n            <View style={globalStyles.flex1}>\n              <ProductAlias alias={this.state.alias}\n                            Product={this.state.Product}\n                            updateProduct={this.props.updateProduct}\n                            assignUniquebarcode={() => this.assignUniquebarcode()}\n                            shareBarcodeMethod={() => {this.setState({shareBarcodeShow: true , alias: false}) }} \n                            proceedAliasing={() => this.proceedAliasing()}\n                            shareBarcodeShow={this.state.shareBarcodeShow}\n                            sameBarcode={() => this.sameBarcode()}/>\n              {/*{\n                this.state.alias && this.state.Product && this.props.updateProduct && this.props.updateProduct.current_product_data && \n                  <View style={styles.typeScanContainer}>\n                    <View style={styles.aliasBox}>\n                      <View style={globalStyles.flexDirectionRow}>\n                        <Text style={styles.aliasTextHeading}>\n                          Duplicate barcode identified. An alias may be required.\n                        </Text>\n                        <TouchableOpacity onPress={() => {this.assignUniquebarcode()} }>\n                          <Image style={{height: 20 , width: 20}} source={cross} /> \n                        </TouchableOpacity>\n                      </View>\n                      \n                      <Text style={styles.aliasText}>\n                        You have tried to add a barcode that already exists on another item. Aliasing is often used in this situation to combine multiple SKUs in the same item record.\n                      </Text>\n                      \n                      <Text style={styles.aliasText}>\n                        If both of these SKUs, refer to the same physical product, we can add the new sku to the existing item.\n                      </Text>\n\n                      <View style={{flexDirection: \"row\" , justifyContent: \"center\"}}>\n                        <View style={{borderWidth: 1 , padding: 6 , backgroundColor: \"#dbeaf7\" , borderRadius: 10 , marginLeft: 4 , marginRight: 4 , width: \"20%\"}}>\n                          <h3>This new item</h3>\n                          <Text style={{fontWeight: 500}}>Name: {this.props.updateProduct && this.props.updateProduct.current_product_data && this.props.updateProduct.current_product_data.name}</Text>\n                          <Text style={{fontWeight: 500}}>SKU: {this.props.updateProduct && this.props.updateProduct.current_product_data && this.props.updateProduct.current_product_data.sku}</Text>\n                          <Text style={{fontWeight: 500}}>Barcode: {this.props.updateProduct && this.props.updateProduct.current_product_data && this.props.updateProduct.current_product_data.barcode}</Text>\n                        </View>\n                        <View style={{padding: 6 , marginLeft: 4 , marginRight: 4 , justifyContent: \"center\"}}>\n                          <h3> + </h3>\n                        </View>\n                        <View style={{borderWidth: 1 , padding: 6 , backgroundColor: \"#c0e7c3\" , borderRadius: 10 , marginLeft: 4 , marginRight: 4 , width: \"20%\"}}>\n                          <h3>Will be added to this existing item</h3>\n                          <Text style={{fontWeight: 500}}>Name: {this.props.updateProduct && this.props.updateProduct.alias_product_data && this.props.updateProduct.alias_product_data.name}</Text>\n                          <Text style={{fontWeight: 500}}>SKU: {this.props.updateProduct && this.props.updateProduct.alias_product_data && this.props.updateProduct.alias_product_data.sku}</Text>\n                          <Text style={{fontWeight: 500}}>Barcode: {this.props.updateProduct && this.props.updateProduct.alias_product_data && this.props.updateProduct.alias_product_data.barcode}</Text>\n                        </View>\n                        <View style={{padding: 6 , marginLeft: 4 , marginRight: 4, justifyContent: \"center\"}}>\n                          <h3> = </h3>\n                        </View>\n                        <View style={{borderWidth: 1 , padding: 6 , backgroundColor: \"#009e0f\" , borderRadius: 10 , marginLeft: 4 , marginRight: 4, width: \"20%\"}}>\n                          <h3 style={{color: \"#fff\"}}>Resulting in this item</h3>\n                          <Text style={{color: \"#fff\", fontWeight: 500}}>Name: {this.props.updateProduct && this.props.updateProduct.after_alias_product_data && this.props.updateProduct.after_alias_product_data.name}</Text>\n                          <Text style={{color: \"#fff\", fontWeight: 500}}>SKU: {this.props.updateProduct && this.props.updateProduct.after_alias_product_data && this.props.updateProduct.after_alias_product_data.name}</Text>\n                          <Text style={{color: \"#fff\", fontWeight: 500}}>Barcode: {this.props.updateProduct && this.props.updateProduct.after_alias_product_data && this.props.updateProduct.after_alias_product_data.name}</Text>\n                        </View>\n                      </View>\n\n                      <View style={{alignItems: \"center\" , marginTop: 10 , marginBottom: 10}}>\n                        <Text>\n                          Not to sound ominous but....\n                        </Text>\n                        <Text>\n                          This can not be undone.\n                        </Text>\n                      </View>\n\n                      <View style={{flexDirection: \"row\", justifyContent: \"center\" , marginTop: 10 , marginBottom: 10}}>\n                        <TouchableOpacity onPress={}>\n                          <Text style={{fontWeight: 600, borderWidth: 1 , backgroundColor: \"#d7a549\" , color: \"#fff\" , padding: 8 , borderRadius: 10 , marginLeft: 4 , marginRight: 4 }}> No Thanks. These Items are different </Text>\n                        </TouchableOpacity>\n                        <TouchableOpacity onPress={() => {this.proceedAliasing()}}>\n                          <Text style={{fontWeight: 600, borderWidth: 1 , backgroundColor: \"green\" , color: \"#fff\" , padding: 8 , borderRadius: 10 , marginLeft: 4 , marginRight: 4 }}> Proceed With Aliasing </Text>\n                        </TouchableOpacity>\n                      </View>\n                      \n                    </View>\n                  </View>\n              }\n              {\n                this.state.shareBarcodeShow && this.state.Product && this.props.updateProduct && this.props.updateProduct.current_product_data &&\n                  <View style={styles.typeScanContainer}>\n                    <View style={styles.aliasBox}>\n                      <View style={globalStyles.flexDirectionRow}>\n                        <Text style={styles.aliasTextHeading}>\n                          Permit a Shared Barcode to be used across multiple items?\n                        </Text>\n                        <TouchableOpacity onPress={() => {this.assignUniquebarcode()} }>\n                          <Image style={{height: 20 , width: 20}} source={cross} /> \n                        </TouchableOpacity>\n                      </View>\n                      \n                      <View style={{alignItems: \"center\"}}>\n                        <Image style={{height: 60 , width: 60}} source={shared_barcode} />\n                        <Text style={{fontWeight: 500, marginTop: 10 , marginBottom: 10}}>Barcode: {this.props.updateProduct && this.props.updateProduct.matching_barcode}</Text>\n                      </View>\n\n                      <Text style={styles.aliasText}>\n                        Since the items are different it is recommended to assign unique barcodes so that Groovepacker will be able to distinguish between them.\n                      </Text>\n                      \n                      <Text style={styles.aliasText}>\n                        There are some special cases when you might decide to have the same barcode used for two or more unique items. This is not a recommended practice since GroovepPacker and other apps that use the barcode will not be able to tell them apart.\n                      </Text>\n\n                      <View style={{flexDirection: \"row\", justifyContent: \"center\" , marginTop: 10 , marginBottom: 10}}>\n                        <TouchableOpacity onPress={() => {this.sameBarcode() }}>\n                          <Text style={{fontWeight: 600, borderWidth: 1 , backgroundColor: \"#d7a549\" , color: \"#fff\" , padding: 8 , borderRadius: 10 , marginLeft: 4 , marginRight: 4 }}> \n                            Yes, I want to permit these separate items to have the same barcode\n                          </Text>\n                        </TouchableOpacity>\n                        <TouchableOpacity onPress={() => {this.assignUniquebarcode()}}>\n                          <Text style={{fontWeight: 600, borderWidth: 1 , backgroundColor: \"green\" , color: \"#fff\" , padding: 8 , borderRadius: 10 , marginLeft: 4 , marginRight: 4 }}> \n                            No I will assign unique barcode to this item \n                          </Text>\n                        </TouchableOpacity>\n                      </View>\n\n                      <View style={{alignItems: \"center\" , marginTop: 10 , marginBottom: 10}}>\n                        <View style={{padding: 6 , marginLeft: 4 , marginRight: 4 , width: \"60%\"}}>\n                          <Text style={{fontWeight: 500}}>Name: {this.props.updateProduct && this.props.updateProduct.current_product_data && this.props.updateProduct.current_product_data.name}</Text>\n                          <Text style={{fontWeight: 500}}>SKU: {this.props.updateProduct && this.props.updateProduct.current_product_data && this.props.updateProduct.current_product_data.sku}</Text>\n                        </View>\n                        {\n                          this.props.updateProduct && \n                              this.props.updateProduct.shared_bacode_products && \n                                this.props.updateProduct.shared_bacode_products.length > 0 &&\n                                  this.props.updateProduct.shared_bacode_products.map((product, index) => {\n                                    return(\n                                        <View style={{padding: 6 , marginLeft: 4 , marginRight: 4 , width: \"60%\"}} key={index}>\n                                          <Text style={{fontWeight: 500}}>Name: {product.name}</Text>\n                                          <Text style={{fontWeight: 500}}>SKU: {product.sku}</Text>\n                                        </View>\n                                      )\n                                  })\n                        }\n\n                      </View>\n\n                      <View style={{alignItems: \"center\" , marginTop: 10 , marginBottom: 10}}>\n                        <View style={{padding: 6 , marginLeft: 4 , marginRight: 4 , width: \"80%\"}}>\n                          <Text style={styles.aliasDescription}>\n                              An example of when this might be used would be where a manufacturer has used the same barcode on 3 variants of an item. Perhaps the item is the same but the packaging differs slighly. It is not practical to re-barcode items since their would be no cost incurred if the wrong variant was shipped.\n                          </Text>\n                        </View>  \n\n                        <View style={{padding: 6 , marginLeft: 4 , marginRight: 4 , width: \"80%\"}}>\n                          <Text style={styles.aliasDescription}>\n                            Another scenario would be a regular item and a \"tester\" version. Both share the same barcode and are the same item, but they have differing SKUs for inventory tracking purposes. Here it would be possible to alias the items but by keeping them separate it is possible to show the packer instructions that are specific to one of the SKUs.\n                          </Text>\n                        </View>\n\n                      </View>\n\n                      \n                    </View>\n                  </View> \n              }*/}\n              {\n                this.props && Product && this.state.Product !== [] &&\n                  <View style={globalStyles.flex1}>\n                    <View style={{flexDirection: \"row\" , margin: 10 , borderWidth: 1 }}>\n                      <TouchableOpacity onPress={this.changeState.bind(this , \"productInfoActive\")} style={[globalStyles.flex2 , {backgroundColor: this.state.productInfoActive ? \"white\" : \"rgb(51, 101, 153)\" , justifyContent: \"center\"}]}>\n                        <Text style={{color: this.state.productInfoActive ? \"black\" : \"white\" , padding: 10 , textAlign: \"center\"}}>\n                          Product Info\n                        </Text>\n                      </TouchableOpacity>\n                      <TouchableOpacity onPress={this.changeState.bind(this , \"scanPackOptionsActive\")} style={{flex:2 , backgroundColor: this.state.scanPackOptionsActive ? \"white\" : \"rgb(51, 101, 153)\" , justifyContent: \"center\"}}>\n                        <Text style={{ color: this.state.scanPackOptionsActive ? \"black\" : \"white\" , padding: 10 , textAlign: \"center\"}}>\n                          Scan & Pack Options\n                        </Text>\n                      </TouchableOpacity>\n                      <TouchableOpacity onPress={this.changeState.bind(this , \"inventoryKitOptionsActive\")} style={{flex:2 , backgroundColor: this.state.inventoryKitOptionsActive ? \"white\" : \"rgb(51, 101, 153)\" , justifyContent: \"center\"}}>\n                        <Text style={{color: this.state.inventoryKitOptionsActive ? \"black\" : \"white\" , padding: 10 , textAlign: \"center\"}}>\n                          Inventory/Kit Options\n                        </Text>\n                      </TouchableOpacity>\n                      <TouchableOpacity onPress={this.changeState.bind(this , \"productActivityLogActive\")} style={{flex:2 , backgroundColor: this.state.productActivityLogActive ? \"white\" : \"rgb(51, 101, 153)\" , justifyContent: \"center\"}}>\n                        <Text style={{color: this.state.productActivityLogActive ? \"black\" : \"white\" , padding: 10 , textAlign: \"center\"}}>\n                          Product Activity Log\n                        </Text>\n                      </TouchableOpacity>\n                    </View>\n                    <View style={{flexDirection: \"row\", alignSelf: \"flex-end\" , marginRight: 10 , marginLeft: 10 , padding: 10}}>\n                      <TouchableOpacity onPress={() => this.updateProduct(\"save&close\")}><Text style={{padding: 10 , backgroundColor: \"rgb(51, 101, 153)\" , color: \"#fff\" , fontWeight: \"bold\" , borderRadius: 20 , marginRight: 10 }}>Save & Close</Text></TouchableOpacity>\n                      <TouchableOpacity onPress={() => this.props.navigation.goBack()}><Text style={{padding: 10 , backgroundColor: \"rgb(73, 72, 72)\" , color: \"#fff\" , fontWeight: \"bold\" , borderRadius: 20 }}>Close </Text></TouchableOpacity>\n                    </View>\n                    {\n                      this.state.productInfoActive &&\n                        <ProductInfo basicinfo={Product.basicinfo}\n                                     images={Product.images}\n                                     navigation={this.props.navigation}\n                                     productInfoHandleChange={(value , name) => this.productInfoHandleChange(value , name)}\n                                     updateProductSBC ={(details , type , remove) => this.updateProductSBC(details, type, remove)}\n                                     updateProduct={() => this.updateProduct() }\n                                     updateBarcodeLocal={this.state.updateBarcodeLocal}\n                                     removefromLocal={this.state.removefromLocal}\n                                     updateLocalBarcode={() => this.setState({removefromLocal: \"\"})}\n                                     {...this.props}\n                                     />\n                    }\n                    {\n                      this.state.scanPackOptionsActive &&\n                        <ScanpackOptions barcodes={Product.barcodes}\n                                         basicinfo={Product.basicinfo}\n                                         productInfoHandleChange={(value , name) => this.productInfoHandleChange(value , name)}\n                                         multiBarcode={(value , name , index) => this.multiBarcode(value , name , index)}\n                                         navigation={this.props.navigation}\n                                         addMultiBarcode={() => this.addMultiBarcode()}\n                                         pickerSelectedOptions={this.state.pickerSelectedOptions}\n                                         />\n                    }\n                    {\n                      this.state.inventoryKitOptionsActive &&\n                        <InventoryKitOptions inventoryWarehouses={Product.inventory_warehouses}\n                                             navigation={this.props.navigation}\n                                             inventoryWarehousesHandleChange={(value , name) => this.inventoryWarehousesHandleChange(value , name)}\n                                             />\n                    }\n                    {\n                      this.state.productActivityLogActive &&\n                        <ProductActivityLog activities={Product.activities}\n                                            navigation={this.props.navigation}\n                                            />\n                    }\n                    <View style={{flexDirection: \"row\", alignSelf: \"flex-end\" , marginRight: 10 , marginLeft: 10 , padding: 10}}>\n                      <TouchableOpacity onPress={() => this.updateProduct(\"save&close\")}><Text style={{padding: 10 , backgroundColor: \"rgb(51, 101, 153)\" , color: \"#fff\" , fontWeight: \"bold\" , borderRadius: 20 , marginRight: 10 }}>Save & Close</Text></TouchableOpacity>\n                      <TouchableOpacity onPress={() => this.props.navigation.goBack()}><Text style={{padding: 10 , backgroundColor: \"rgb(73, 72, 72)\" , color: \"#fff\" , fontWeight: \"bold\" , borderRadius: 20 }}>Close </Text></TouchableOpacity>\n                    </View>\n                  </View>\n              }\n            </View>\n        }\n      </React.Fragment>      \n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    product: state.product.product,\n    updateProduct: state.product.updateProduct,\n    searchOrder: state.scanpack,\n    updateProductAlias: state.product.updateProductAlias\n  }\n};\n\nconst mapDispatchToProps = {\n  GetProductDetail,\n  UpdateProductInfo,\n  SetItem,\n  SearchScanpackOrder,\n  updateProductAlias\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductDetail)\n\n"]},"metadata":{},"sourceType":"module"}
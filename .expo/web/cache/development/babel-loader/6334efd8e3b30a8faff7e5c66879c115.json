{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport axios from 'axios';\nimport { UPDATE_PRODUCT, SEARCH_SCANPACK_ORDER, SEARCH_SCANPACK_ORDER_FAIL } from \"../constants\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nexport function SearchScanpackOrder(data, call) {\n  return function _callee(dispatch) {\n    var access_token, url;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"access_token\"));\n\n          case 2:\n            access_token = _context.sent;\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"url\"));\n\n          case 5:\n            url = _context.sent;\n\n            if (call === false) {\n              dispatch({\n                type: SEARCH_SCANPACK_ORDER_FAIL,\n                payload: \"\"\n              });\n            } else {\n              axios({\n                method: 'post',\n                url: url + \"/scan_pack/scan_barcode.json\",\n                headers: {\n                  'Authorization': \"Bearer \" + access_token\n                },\n                data: data\n              }).then(function (res) {\n                dispatch({\n                  type: SEARCH_SCANPACK_ORDER,\n                  payload: res.data\n                });\n              }).catch(function (error) {});\n            }\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n}\nexport function UpdateProduct(data) {\n  return function _callee2(dispatch) {\n    var access_token, url;\n    return _regeneratorRuntime.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"access_token\"));\n\n          case 2:\n            access_token = _context2.sent;\n            _context2.next = 5;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"url\"));\n\n          case 5:\n            url = _context2.sent;\n            axios({\n              method: 'post',\n              url: url + \"/products/update_product_list.json?id=\" + data.id + \"&var=\" + data.name + \"&value=\" + data.value,\n              headers: {\n                'Authorization': \"Bearer \" + access_token\n              }\n            }).then(function (data) {\n              dispatch({\n                type: UPDATE_PRODUCT,\n                payload: data.data.data\n              });\n            }).catch(function (error) {});\n\n          case 7:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n}","map":{"version":3,"sources":["C:/Users/DELL PC/Downloads/GroovePacker/src/actions/scanpackAction.js"],"names":["axios","UPDATE_PRODUCT","SEARCH_SCANPACK_ORDER","SEARCH_SCANPACK_ORDER_FAIL","AsyncStorage","SearchScanpackOrder","data","call","dispatch","getItem","access_token","url","type","payload","method","headers","then","res","catch","error","UpdateProduct","id","name","value"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,EAA0BC,qBAA1B,EAAkDC,0BAAlD;AAEA,OAAOC,YAAP,MAAyB,2CAAzB;AAEA,OAAO,SAASC,mBAAT,CAA6BC,IAA7B,EAAoCC,IAApC,EAA0C;AAC/C,SAAO,iBAAMC,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACsBJ,YAAY,CAACK,OAAb,CAAqB,cAArB,CADtB;;AAAA;AACCC,YAAAA,YADD;AAAA;AAAA,6CAEaN,YAAY,CAACK,OAAb,CAAqB,KAArB,CAFb;;AAAA;AAECE,YAAAA,GAFD;;AAGL,gBAAGJ,IAAI,KAAK,KAAZ,EAAkB;AAChBC,cAAAA,QAAQ,CAAC;AACCI,gBAAAA,IAAI,EAAET,0BADP;AAECU,gBAAAA,OAAO,EAAE;AAFV,eAAD,CAAR;AAID,aALD,MAKK;AACHb,cAAAA,KAAK,CAAC;AACAc,gBAAAA,MAAM,EAAE,MADR;AAEAH,gBAAAA,GAAG,EAAKA,GAAL,iCAFH;AAGAI,gBAAAA,OAAO,EAAE;AAAC,+CAA2BL;AAA5B,iBAHT;AAIAJ,gBAAAA,IAAI,EAAEA;AAJN,eAAD,CAAL,CAMKU,IANL,CAMU,UAACC,GAAD,EAAS;AACbT,gBAAAA,QAAQ,CAAC;AACCI,kBAAAA,IAAI,EAAEV,qBADP;AAECW,kBAAAA,OAAO,EAAEI,GAAG,CAACX;AAFd,iBAAD,CAAR;AAID,eAXL,EAYKY,KAZL,CAYW,UAACC,KAAD,EAAW,CACjB,CAbL;AAcD;;AAvBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAP;AAyBD;AAGD,OAAO,SAASC,aAAT,CAAuBd,IAAvB,EAA6B;AAClC,SAAO,kBAAME,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACsBJ,YAAY,CAACK,OAAb,CAAqB,cAArB,CADtB;;AAAA;AACCC,YAAAA,YADD;AAAA;AAAA,6CAEaN,YAAY,CAACK,OAAb,CAAqB,KAArB,CAFb;;AAAA;AAECE,YAAAA,GAFD;AAGLX,YAAAA,KAAK,CAAC;AACAc,cAAAA,MAAM,EAAE,MADR;AAEAH,cAAAA,GAAG,EAAKA,GAAL,8CAAiDL,IAAI,CAACe,EAAtD,aAAgEf,IAAI,CAACgB,IAArE,eAAmFhB,IAAI,CAACiB,KAF3F;AAGAR,cAAAA,OAAO,EAAE;AAAC,6CAA2BL;AAA5B;AAHT,aAAD,CAAL,CAMKM,IANL,CAMU,UAACV,IAAD,EAAU;AACdE,cAAAA,QAAQ,CAAC;AACCI,gBAAAA,IAAI,EAAEX,cADP;AAECY,gBAAAA,OAAO,EAAEP,IAAI,CAACA,IAAL,CAAUA;AAFpB,eAAD,CAAR;AAID,aAXL,EAYKY,KAZL,CAYW,UAACC,KAAD,EAAW,CACjB,CAbL;;AAHK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAP;AAkBD","sourcesContent":["import axios from 'axios';\nimport { UPDATE_PRODUCT , SEARCH_SCANPACK_ORDER , SEARCH_SCANPACK_ORDER_FAIL } from '../constants';\n// import { AsyncStorage } from 'react-native';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nexport function SearchScanpackOrder(data , call) {\n  return async(dispatch) => {\n    const access_token = await AsyncStorage.getItem(\"access_token\")\n    const url = await AsyncStorage.getItem(\"url\")\n    if(call === false){\n      dispatch({\n                type: SEARCH_SCANPACK_ORDER_FAIL,\n                payload: \"\"\n              })\n    }else{\n      axios({\n            method: 'post',\n            url: `${url}/scan_pack/scan_barcode.json`,\n            headers: {'Authorization': `Bearer ${access_token}`},\n            data: data\n          })\n          .then((res) => {\n            dispatch({\n                      type: SEARCH_SCANPACK_ORDER,\n                      payload: res.data\n                    })\n          })\n          .catch((error) => {\n          })\n    }\n  }\n}\n\n\nexport function UpdateProduct(data) {\n  return async(dispatch) => {\n    const access_token = await AsyncStorage.getItem(\"access_token\")\n    const url = await AsyncStorage.getItem(\"url\")\n    axios({\n          method: 'post',\n          url: `${url}/products/update_product_list.json?id=${data.id}&var=${data.name}&value=${data.value}`,\n          headers: {'Authorization': `Bearer ${access_token}`}\n          // data: data\n        })\n        .then((data) => {\n          dispatch({\n                    type: UPDATE_PRODUCT,\n                    payload: data.data.data\n                  })\n        })\n        .catch((error) => {\n        })\n  }\n}\n"]},"metadata":{},"sourceType":"module"}
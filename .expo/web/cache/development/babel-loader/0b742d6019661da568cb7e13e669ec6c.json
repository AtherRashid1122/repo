{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\DELL PC\\\\Downloads\\\\GroovePacker\\\\src\\\\components\\\\Alias\\\\productAlias.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { connect } from 'react-redux';\nimport globalStyles from \"../../style/global\";\nimport styles from \"../../style/scanpack\";\nimport cross from \"../../../assets/close_black.png\";\nimport shared_barcode from \"../../../assets/shared_barcode.png\";\n\nvar ProductAlias = function (_Component) {\n  _inherits(ProductAlias, _Component);\n\n  var _super = _createSuper(ProductAlias);\n\n  function ProductAlias(props) {\n    var _this;\n\n    _classCallCheck(this, ProductAlias);\n\n    _this = _super.call(this, props);\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(ProductAlias, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 7\n        }\n      }, this.props.alias && this.props.Product && this.props.updateProduct.current_product_data && this.props.updateProduct.alias_product_data.barcode && React.createElement(View, {\n        style: styles.typeScanContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }\n      }, React.createElement(View, {\n        style: styles.aliasBox,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: globalStyles.flexDirectionRow,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 15\n        }\n      }, React.createElement(Text, {\n        style: styles.aliasTextHeading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 17\n        }\n      }, \"Duplicate barcode identified. An alias may be required.\"), React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          _this2.props.assignUniquebarcode();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 17\n        }\n      }, React.createElement(Image, {\n        style: {\n          height: 20,\n          width: 20\n        },\n        source: cross,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 19\n        }\n      }))), React.createElement(Text, {\n        style: styles.aliasText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 15\n        }\n      }, \"You have tried to add a barcode that already exists on another item. Aliasing is often used in this situation to combine multiple SKUs in the same item record.\"), React.createElement(Text, {\n        style: styles.aliasText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 15\n        }\n      }, \"If both of these SKUs, refer to the same physical product, we can add the new sku to the existing item.\"), React.createElement(View, {\n        style: {\n          flexDirection: \"row\",\n          justifyContent: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 15\n        }\n      }, React.createElement(View, {\n        style: {\n          borderWidth: 1,\n          padding: 6,\n          backgroundColor: \"#dbeaf7\",\n          borderRadius: 10,\n          marginLeft: 4,\n          marginRight: 4,\n          width: \"20%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 17\n        }\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 19\n        }\n      }, \"This new item\"), React.createElement(Text, {\n        style: {\n          fontWeight: 500\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 19\n        }\n      }, \"Name: \", this.props.updateProduct && this.props.updateProduct.current_product_data && this.props.updateProduct.current_product_data.name), React.createElement(Text, {\n        style: {\n          fontWeight: 500\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 19\n        }\n      }, \"SKU: \", this.props.updateProduct && this.props.updateProduct.current_product_data && this.props.updateProduct.current_product_data.sku), React.createElement(Text, {\n        style: {\n          fontWeight: 500\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 19\n        }\n      }, \"Barcode: \", this.props.updateProduct && this.props.updateProduct.current_product_data && this.props.updateProduct.current_product_data.barcode)), React.createElement(View, {\n        style: {\n          padding: 6,\n          marginLeft: 4,\n          marginRight: 4,\n          justifyContent: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 19\n        }\n      }, \" + \")), React.createElement(View, {\n        style: {\n          borderWidth: 1,\n          padding: 6,\n          backgroundColor: \"#c0e7c3\",\n          borderRadius: 10,\n          marginLeft: 4,\n          marginRight: 4,\n          width: \"20%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 19\n        }\n      }, \"Will be added to this existing item\"), React.createElement(Text, {\n        style: {\n          fontWeight: 500\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 19\n        }\n      }, \"Name: \", this.props.updateProduct && this.props.updateProduct.alias_product_data && this.props.updateProduct.alias_product_data.name), React.createElement(Text, {\n        style: {\n          fontWeight: 500\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 19\n        }\n      }, \"SKU: \", this.props.updateProduct && this.props.updateProduct.alias_product_data && this.props.updateProduct.alias_product_data.sku), React.createElement(Text, {\n        style: {\n          fontWeight: 500\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 19\n        }\n      }, \"Barcode: \", this.props.updateProduct && this.props.updateProduct.alias_product_data && this.props.updateProduct.alias_product_data.barcode)), React.createElement(View, {\n        style: {\n          padding: 6,\n          marginLeft: 4,\n          marginRight: 4,\n          justifyContent: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 19\n        }\n      }, \" = \")), React.createElement(View, {\n        style: {\n          borderWidth: 1,\n          padding: 6,\n          backgroundColor: \"#009e0f\",\n          borderRadius: 10,\n          marginLeft: 4,\n          marginRight: 4,\n          width: \"20%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }\n      }, React.createElement(\"h3\", {\n        style: {\n          color: \"#fff\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 19\n        }\n      }, \"Resulting in this item\"), React.createElement(Text, {\n        style: {\n          color: \"#fff\",\n          fontWeight: 500\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 19\n        }\n      }, \"Name: \", this.props.updateProduct && this.props.updateProduct.after_alias_product_data && this.props.updateProduct.after_alias_product_data.name), React.createElement(Text, {\n        style: {\n          color: \"#fff\",\n          fontWeight: 500\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 19\n        }\n      }, \"SKU: \", this.props.updateProduct && this.props.updateProduct.after_alias_product_data && this.props.updateProduct.after_alias_product_data.sku), React.createElement(Text, {\n        style: {\n          color: \"#fff\",\n          fontWeight: 500\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 19\n        }\n      }, \"Barcode: \", this.props.updateProduct && this.props.updateProduct.after_alias_product_data && this.props.updateProduct.after_alias_product_data.barcode))), React.createElement(View, {\n        style: {\n          alignItems: \"center\",\n          marginTop: 10,\n          marginBottom: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 15\n        }\n      }, React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 17\n        }\n      }, \"Not to sound ominous but....\"), React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 17\n        }\n      }, \"This can not be undone.\")), React.createElement(View, {\n        style: {\n          flexDirection: \"row\",\n          justifyContent: \"center\",\n          marginTop: 10,\n          marginBottom: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 15\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: this.props.shareBarcodeMethod,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontWeight: 600,\n          borderWidth: 1,\n          backgroundColor: \"#d7a549\",\n          color: \"#fff\",\n          padding: 8,\n          borderRadius: 10,\n          marginLeft: 4,\n          marginRight: 4\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 19\n        }\n      }, \" No Thanks. These Items are different \")), React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          _this2.props.proceedAliasing();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontWeight: 600,\n          borderWidth: 1,\n          backgroundColor: \"green\",\n          color: \"#fff\",\n          padding: 8,\n          borderRadius: 10,\n          marginLeft: 4,\n          marginRight: 4\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 19\n        }\n      }, \" Proceed With Aliasing \"))))), this.props.shareBarcodeShow && this.props.Product && this.props.updateProduct && this.props.updateProduct.current_product_data && React.createElement(View, {\n        style: styles.typeScanContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }\n      }, React.createElement(View, {\n        style: styles.aliasBox,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: globalStyles.flexDirectionRow,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 15\n        }\n      }, React.createElement(Text, {\n        style: styles.aliasTextHeading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 17\n        }\n      }, \"Permit a Shared Barcode to be used across multiple items?\"), React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          _this2.props.assignUniquebarcode();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 17\n        }\n      }, React.createElement(Image, {\n        style: {\n          height: 20,\n          width: 20\n        },\n        source: cross,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 19\n        }\n      }))), React.createElement(View, {\n        style: {\n          alignItems: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 15\n        }\n      }, React.createElement(Image, {\n        style: {\n          height: 60,\n          width: 60\n        },\n        source: shared_barcode,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 17\n        }\n      }), React.createElement(Text, {\n        style: {\n          fontWeight: 500,\n          marginTop: 10,\n          marginBottom: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 17\n        }\n      }, \"Barcode: \", this.props.updateProduct && this.props.updateProduct.matching_barcode)), React.createElement(Text, {\n        style: styles.aliasText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 15\n        }\n      }, \"Since the items are different it is recommended to assign unique barcodes so that Groovepacker will be able to distinguish between them.\"), React.createElement(Text, {\n        style: styles.aliasText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 15\n        }\n      }, \"There are some special cases when you might decide to have the same barcode used for two or more unique items. This is not a recommended practice since GroovepPacker and other apps that use the barcode will not be able to tell them apart.\"), React.createElement(View, {\n        style: {\n          flexDirection: \"row\",\n          justifyContent: \"center\",\n          marginTop: 10,\n          marginBottom: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 15\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          _this2.props.sameBarcode();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontWeight: 600,\n          borderWidth: 1,\n          backgroundColor: \"#d7a549\",\n          color: \"#fff\",\n          padding: 8,\n          borderRadius: 10,\n          marginLeft: 4,\n          marginRight: 4\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 19\n        }\n      }, \"Yes, I want to permit these separate items to have the same barcode\")), React.createElement(TouchableOpacity, {\n        onPress: function onPress(fromButton) {\n          _this2.props.assignUniquebarcode(\"fromButton\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontWeight: 600,\n          borderWidth: 1,\n          backgroundColor: \"green\",\n          color: \"#fff\",\n          padding: 8,\n          borderRadius: 10,\n          marginLeft: 4,\n          marginRight: 4\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 19\n        }\n      }, \"No I will assign unique barcode to this item\"))), React.createElement(View, {\n        style: {\n          alignItems: \"center\",\n          marginTop: 10,\n          marginBottom: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 15\n        }\n      }, React.createElement(View, {\n        style: {\n          padding: 6,\n          marginLeft: 4,\n          marginRight: 4,\n          width: \"60%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontWeight: 500\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 19\n        }\n      }, \"Name: \", this.props.updateProduct && this.props.updateProduct.current_product_data && this.props.updateProduct.current_product_data.name), React.createElement(Text, {\n        style: {\n          fontWeight: 500\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 19\n        }\n      }, \"SKU: \", this.props.updateProduct && this.props.updateProduct.current_product_data && this.props.updateProduct.current_product_data.sku)), this.props.updateProduct && this.props.updateProduct.shared_bacode_products && this.props.updateProduct.shared_bacode_products.length > 0 && this.props.updateProduct.shared_bacode_products.map(function (product, index) {\n        return React.createElement(View, {\n          style: {\n            padding: 6,\n            marginLeft: 4,\n            marginRight: 4,\n            width: \"60%\"\n          },\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 33\n          }\n        }, React.createElement(Text, {\n          style: {\n            fontWeight: 500\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 35\n          }\n        }, \"Name: \", product.name), React.createElement(Text, {\n          style: {\n            fontWeight: 500\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 35\n          }\n        }, \"SKU: \", product.sku));\n      })), React.createElement(View, {\n        style: {\n          alignItems: \"center\",\n          marginTop: 10,\n          marginBottom: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 15\n        }\n      }, React.createElement(View, {\n        style: {\n          padding: 6,\n          marginLeft: 4,\n          marginRight: 4,\n          width: \"80%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: styles.aliasDescription,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 19\n        }\n      }, \"An example of when this might be used would be where a manufacturer has used the same barcode on 3 variants of an item. Perhaps the item is the same but the packaging differs slighly. It is not practical to re-barcode items since their would be no cost incurred if the wrong variant was shipped.\")), React.createElement(View, {\n        style: {\n          padding: 6,\n          marginLeft: 4,\n          marginRight: 4,\n          width: \"80%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: styles.aliasDescription,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 19\n        }\n      }, \"Another scenario would be a regular item and a \\\"tester\\\" version. Both share the same barcode and are the same item, but they have differing SKUs for inventory tracking purposes. Here it would be possible to alias the items but by keeping them separate it is possible to show the packer instructions that are specific to one of the SKUs.\"))))));\n    }\n  }]);\n\n  return ProductAlias;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {};\n};\n\nvar mapDispatchToProps = {};\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductAlias);","map":{"version":3,"sources":["C:/Users/DELL PC/Downloads/GroovePacker/src/components/Alias/productAlias.js"],"names":["React","Component","AsyncStorage","connect","globalStyles","styles","cross","shared_barcode","ProductAlias","props","state","alias","Product","updateProduct","current_product_data","alias_product_data","barcode","typeScanContainer","aliasBox","flexDirectionRow","aliasTextHeading","assignUniquebarcode","height","width","aliasText","flexDirection","justifyContent","borderWidth","padding","backgroundColor","borderRadius","marginLeft","marginRight","fontWeight","name","sku","color","after_alias_product_data","alignItems","marginTop","marginBottom","shareBarcodeMethod","proceedAliasing","shareBarcodeShow","matching_barcode","sameBarcode","fromButton","shared_bacode_products","length","map","product","index","aliasDescription","mapStateToProps","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { View, Text, TextInput , ActivityIndicator , TouchableOpacity ,Image  } from 'react-native';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { connect } from 'react-redux';\nimport globalStyles from '../../style/global';\nimport styles from '../../style/scanpack';\nimport cross from \"../../../assets/close_black.png\";\nimport shared_barcode from \"../../../assets/shared_barcode.png\";\n\nclass ProductAlias extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n    };\n  }\n\n  render() {\n    return (\n     \t<React.Fragment>\n     \t{\n        this.props.alias && this.props.Product &&  this.props.updateProduct.current_product_data && this.props.updateProduct.alias_product_data.barcode && \n          <View style={styles.typeScanContainer}>\n            <View style={styles.aliasBox}>\n              <View style={globalStyles.flexDirectionRow}>\n                <Text style={styles.aliasTextHeading}>\n                  Duplicate barcode identified. An alias may be required.\n                </Text>\n                <TouchableOpacity onPress={() => {this.props.assignUniquebarcode()} }>\n                  <Image style={{height: 20 , width: 20}} source={cross} /> \n                </TouchableOpacity>\n              </View>\n              \n              <Text style={styles.aliasText}>\n                You have tried to add a barcode that already exists on another item. Aliasing is often used in this situation to combine multiple SKUs in the same item record.\n              </Text>\n              \n              <Text style={styles.aliasText}>\n                If both of these SKUs, refer to the same physical product, we can add the new sku to the existing item.\n              </Text>\n\n              <View style={{flexDirection: \"row\" , justifyContent: \"center\"}}>\n                <View style={{borderWidth: 1 , padding: 6 , backgroundColor: \"#dbeaf7\" , borderRadius: 10 , marginLeft: 4 , marginRight: 4 , width: \"20%\"}}>\n                  <h3>This new item</h3>\n                  <Text style={{fontWeight: 500}}>Name: {this.props.updateProduct && this.props.updateProduct.current_product_data && this.props.updateProduct.current_product_data.name}</Text>\n                  <Text style={{fontWeight: 500}}>SKU: {this.props.updateProduct && this.props.updateProduct.current_product_data && this.props.updateProduct.current_product_data.sku}</Text>\n                  <Text style={{fontWeight: 500}}>Barcode: {this.props.updateProduct && this.props.updateProduct.current_product_data && this.props.updateProduct.current_product_data.barcode}</Text>\n                </View>\n                <View style={{padding: 6 , marginLeft: 4 , marginRight: 4 , justifyContent: \"center\"}}>\n                  <h3> + </h3>\n                </View>\n                <View style={{borderWidth: 1 , padding: 6 , backgroundColor: \"#c0e7c3\" , borderRadius: 10 , marginLeft: 4 , marginRight: 4 , width: \"20%\"}}>\n                  <h3>Will be added to this existing item</h3>\n                  <Text style={{fontWeight: 500}}>Name: {this.props.updateProduct && this.props.updateProduct.alias_product_data && this.props.updateProduct.alias_product_data.name}</Text>\n                  <Text style={{fontWeight: 500}}>SKU: {this.props.updateProduct && this.props.updateProduct.alias_product_data && this.props.updateProduct.alias_product_data.sku}</Text>\n                  <Text style={{fontWeight: 500}}>Barcode: {this.props.updateProduct && this.props.updateProduct.alias_product_data && this.props.updateProduct.alias_product_data.barcode}</Text>\n                </View>\n                <View style={{padding: 6 , marginLeft: 4 , marginRight: 4, justifyContent: \"center\"}}>\n                  <h3> = </h3>\n                </View>\n                <View style={{borderWidth: 1 , padding: 6 , backgroundColor: \"#009e0f\" , borderRadius: 10 , marginLeft: 4 , marginRight: 4, width: \"20%\"}}>\n                  <h3 style={{color: \"#fff\"}}>Resulting in this item</h3>\n                  <Text style={{color: \"#fff\", fontWeight: 500}}>Name: {this.props.updateProduct && this.props.updateProduct.after_alias_product_data && this.props.updateProduct.after_alias_product_data.name}</Text>\n                  <Text style={{color: \"#fff\", fontWeight: 500}}>SKU: {this.props.updateProduct && this.props.updateProduct.after_alias_product_data && this.props.updateProduct.after_alias_product_data.sku}</Text>\n                  <Text style={{color: \"#fff\", fontWeight: 500}}>Barcode: {this.props.updateProduct && this.props.updateProduct.after_alias_product_data && this.props.updateProduct.after_alias_product_data.barcode}</Text>\n                </View>\n              </View>\n\n              <View style={{alignItems: \"center\" , marginTop: 10 , marginBottom: 10}}>\n                <Text>\n                  Not to sound ominous but....\n                </Text>\n                <Text>\n                  This can not be undone.\n                </Text>\n              </View>\n\n              <View style={{flexDirection: \"row\", justifyContent: \"center\" , marginTop: 10 , marginBottom: 10}}>\n                <TouchableOpacity onPress={this.props.shareBarcodeMethod}>\n                  <Text style={{fontWeight: 600, borderWidth: 1 , backgroundColor: \"#d7a549\" , color: \"#fff\" , padding: 8 , borderRadius: 10 , marginLeft: 4 , marginRight: 4 }}> No Thanks. These Items are different </Text>\n                </TouchableOpacity>\n                <TouchableOpacity onPress={() => {this.props.proceedAliasing()}}>\n                  <Text style={{fontWeight: 600, borderWidth: 1 , backgroundColor: \"green\" , color: \"#fff\" , padding: 8 , borderRadius: 10 , marginLeft: 4 , marginRight: 4 }}> Proceed With Aliasing </Text>\n                </TouchableOpacity>\n              </View>\n              \n            </View>\n          </View>\n      }\n      {\n        this.props.shareBarcodeShow && this.props.Product && this.props.updateProduct && this.props.updateProduct.current_product_data &&\n          <View style={styles.typeScanContainer}>\n            <View style={styles.aliasBox}>\n              <View style={globalStyles.flexDirectionRow}>\n                <Text style={styles.aliasTextHeading}>\n                  Permit a Shared Barcode to be used across multiple items?\n                </Text>\n                <TouchableOpacity onPress={() => {this.props.assignUniquebarcode()} }>\n                  <Image style={{height: 20 , width: 20}} source={cross} /> \n                </TouchableOpacity>\n              </View>\n              \n              <View style={{alignItems: \"center\"}}>\n                <Image style={{height: 60 , width: 60}} source={shared_barcode} />\n                <Text style={{fontWeight: 500, marginTop: 10 , marginBottom: 10}}>Barcode: {this.props.updateProduct && this.props.updateProduct.matching_barcode}</Text>\n              </View>\n\n              <Text style={styles.aliasText}>\n                Since the items are different it is recommended to assign unique barcodes so that Groovepacker will be able to distinguish between them.\n              </Text>\n              \n              <Text style={styles.aliasText}>\n                There are some special cases when you might decide to have the same barcode used for two or more unique items. This is not a recommended practice since GroovepPacker and other apps that use the barcode will not be able to tell them apart.\n              </Text>\n\n              <View style={{flexDirection: \"row\", justifyContent: \"center\" , marginTop: 10 , marginBottom: 10}}>\n                <TouchableOpacity onPress={() => {this.props.sameBarcode() }}>\n                  <Text style={{fontWeight: 600, borderWidth: 1 , backgroundColor: \"#d7a549\" , color: \"#fff\" , padding: 8 , borderRadius: 10 , marginLeft: 4 , marginRight: 4 }}> \n                    Yes, I want to permit these separate items to have the same barcode\n                  </Text>\n                </TouchableOpacity>\n                <TouchableOpacity onPress={(fromButton) => {this.props.assignUniquebarcode(\"fromButton\")}}>\n                  <Text style={{fontWeight: 600, borderWidth: 1 , backgroundColor: \"green\" , color: \"#fff\" , padding: 8 , borderRadius: 10 , marginLeft: 4 , marginRight: 4 }}> \n                    No I will assign unique barcode to this item \n                  </Text>\n                </TouchableOpacity>\n              </View>\n\n              <View style={{alignItems: \"center\" , marginTop: 10 , marginBottom: 10}}>\n                <View style={{padding: 6 , marginLeft: 4 , marginRight: 4 , width: \"60%\"}}>\n                  <Text style={{fontWeight: 500}}>Name: {this.props.updateProduct && this.props.updateProduct.current_product_data && this.props.updateProduct.current_product_data.name}</Text>\n                  <Text style={{fontWeight: 500}}>SKU: {this.props.updateProduct && this.props.updateProduct.current_product_data && this.props.updateProduct.current_product_data.sku}</Text>\n                </View>\n                {\n                  this.props.updateProduct && \n                      this.props.updateProduct.shared_bacode_products && \n                        this.props.updateProduct.shared_bacode_products.length > 0 &&\n                          this.props.updateProduct.shared_bacode_products.map((product, index) => {\n                            return(\n                                <View style={{padding: 6 , marginLeft: 4 , marginRight: 4 , width: \"60%\"}} key={index}>\n                                  <Text style={{fontWeight: 500}}>Name: {product.name}</Text>\n                                  <Text style={{fontWeight: 500}}>SKU: {product.sku}</Text>\n                                </View>\n                              )\n                          })\n                }\n\n              </View>\n\n              <View style={{alignItems: \"center\" , marginTop: 10 , marginBottom: 10}}>\n                <View style={{padding: 6 , marginLeft: 4 , marginRight: 4 , width: \"80%\"}}>\n                  <Text style={styles.aliasDescription}>\n                      An example of when this might be used would be where a manufacturer has used the same barcode on 3 variants of an item. Perhaps the item is the same but the packaging differs slighly. It is not practical to re-barcode items since their would be no cost incurred if the wrong variant was shipped.\n                  </Text>\n                </View>  \n\n                <View style={{padding: 6 , marginLeft: 4 , marginRight: 4 , width: \"80%\"}}>\n                  <Text style={styles.aliasDescription}>\n                    Another scenario would be a regular item and a \"tester\" version. Both share the same barcode and are the same item, but they have differing SKUs for inventory tracking purposes. Here it would be possible to alias the items but by keeping them separate it is possible to show the packer instructions that are specific to one of the SKUs.\n                  </Text>\n                </View>\n\n              </View>\n\n              \n            </View>\n          </View> \n      }\n      </React.Fragment> \n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n  }\n};\n\nconst mapDispatchToProps = {\n\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductAlias)\n\n"]},"metadata":{},"sourceType":"module"}
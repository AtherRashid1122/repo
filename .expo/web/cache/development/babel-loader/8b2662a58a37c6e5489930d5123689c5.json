{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\DELL PC\\\\Downloads\\\\GroovePacker\\\\src\\\\components\\\\orders\\\\orderdetail.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport BackHandler from \"react-native-web/dist/exports/BackHandler\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { connect } from \"react-redux\";\nimport { GetItem, SetItem } from \"../../actions/updateAsyncAction\";\nimport { GetOrderDetail, UpdateOrderQuantity, RemoveOrderItems, UpdateOrderInfo } from \"../../actions/orderActions\";\nimport { OrderBackButtonClick } from \"../../actions/headerActions\";\nimport ItemsDetail from \"./items_detail\";\nimport NotesDetail from \"./notes_detail\";\nimport { SubmitLog } from \"../../actions/saveLogAction\";\nimport ActivitiesExceptionDetail from \"./activities_exception_detail\";\nimport MultiBoxDetail from \"./multi_box_detail\";\nimport InformationDetail from \"./information_detail\";\nimport globalStyles from \"../../style/global\";\nimport styles from \"../../style/orderdetail\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport toggle from \"../../../assets/toggle1.png\";\nvar saveData = false;\nvar productID = 0;\nvar removeOrder = true;\nvar updateOrder = true;\nvar fetchData = true;\nvar updateOrderSuccess = true;\nvar windowWidth = Dimensions.get(\"window\").width;\nvar windowHeight = Dimensions.get(\"window\").height;\n\nvar OrderDetail = function (_Component) {\n  _inherits(OrderDetail, _Component);\n\n  var _super = _createSuper(OrderDetail);\n\n  function OrderDetail(props) {\n    var _this;\n\n    _classCallCheck(this, OrderDetail);\n\n    _this = _super.call(this, props);\n\n    _this.backAction = function () {\n      Alert.alert(\"Hold on!\", \"Are you sure you want to go back?\", [{\n        text: \"Cancel\",\n        onPress: function onPress() {\n          return null;\n        },\n        style: \"cancel\"\n      }, {\n        text: \"YES\",\n        onPress: function onPress() {\n          return _this.updateBasicInfo();\n        }\n      }]);\n      return true;\n    };\n\n    _this.multipleTime = function _callee() {\n      var getItem, convert;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"logsArray\"));\n\n            case 2:\n              getItem = _context.sent;\n              convert = getItem && JSON.parse(getItem);\n\n              _this.props.SubmitLog(convert);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.apiCall = function (id) {\n      var detail = {\n        id: id,\n        orderDetail: _this.state.data\n      };\n\n      if (id !== null) {\n        _this.props.GetOrderDetail(detail);\n      }\n    };\n\n    _this.changeState = function (state) {\n      if (state === \"itemActive\") {\n        _this.setState({\n          itemActive: true,\n          notesActive: false,\n          informationActive: false,\n          activitiesActive: false,\n          multiBoxActive: false\n        });\n      }\n\n      if (state === \"notesActive\") {\n        _this.setState({\n          itemActive: false,\n          notesActive: true,\n          informationActive: false,\n          activitiesActive: false,\n          multiBoxActive: false\n        });\n      }\n\n      if (state === \"informationActive\") {\n        _this.setState({\n          itemActive: false,\n          notesActive: false,\n          informationActive: true,\n          activitiesActive: false,\n          multiBoxActive: false\n        });\n      }\n\n      if (state === \"activitiesActive\") {\n        _this.setState({\n          itemActive: false,\n          notesActive: false,\n          informationActive: false,\n          activitiesActive: true,\n          multiBoxActive: false\n        });\n      }\n\n      if (state === \"multiBoxActive\") {\n        _this.setState({\n          itemActive: false,\n          notesActive: false,\n          informationActive: false,\n          activitiesActive: false,\n          multiBoxActive: true\n        });\n      }\n    };\n\n    _this.updateQuantity = function _callee2(item) {\n      var data;\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!item) {\n                _context2.next = 4;\n                break;\n              }\n\n              data = {\n                orderitem: item.iteminfo.id,\n                qty: item.iteminfo.qty && parseInt(item.iteminfo.qty)\n              };\n              _context2.next = 4;\n              return _regeneratorRuntime.awrap(_this.props.UpdateOrderQuantity(data));\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.removeItems = function _callee3() {\n      var removeIds, data;\n      return _regeneratorRuntime.async(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              removeIds = _this.state.removeIds;\n              data = {\n                orderitem: removeIds\n              };\n\n              if (!(_this.state.removeIds && _this.state.removeIds.length > 0)) {\n                _context3.next = 6;\n                break;\n              }\n\n              _context3.next = 5;\n              return _regeneratorRuntime.awrap(_this.props.RemoveOrderItems(data));\n\n            case 5:\n              removeOrder = true;\n\n            case 6:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.updateBasicInfo = function _callee4() {\n      var basicInfo, id, data;\n      return _regeneratorRuntime.async(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _this.setState({\n                visible: true\n              });\n\n              basicInfo = _this.state.order && _this.state.order.basicinfo;\n\n              if (!basicInfo) {\n                _context4.next = 9;\n                break;\n              }\n\n              basicInfo[\"app\"] = \"app\";\n              id = basicInfo.id;\n              data = basicInfo;\n              _context4.next = 8;\n              return _regeneratorRuntime.awrap(_this.props.UpdateOrderInfo(id, data));\n\n            case 8:\n              updateOrderSuccess = true;\n\n            case 9:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.state = {\n      data: {\n        filter: \"awaiting\",\n        order: \"DESC\",\n        limit: \"1\",\n        offset: \"0\"\n      },\n      dataList: {\n        filter: \"awaiting\",\n        order: \"DESC\",\n        limit: \"1\",\n        offset: \"0\",\n        app: \"app\"\n      },\n      visible: false,\n      itemActive: true,\n      notesActive: false,\n      informationActive: false,\n      activitiesActive: false,\n      multiBoxActive: false,\n      items: [],\n      removeIds: [],\n      order: []\n    };\n    return _this;\n  }\n\n  _createClass(OrderDetail, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var id = this.props.route && this.props.route.params && this.props.route.params.item && this.props.route.params.item.id;\n      this.setState({\n        id: id\n      });\n\n      if (id) {\n        this.apiCall(id);\n        this.multipleTime();\n      }\n\n      this.backHandler = BackHandler.addEventListener(\"hardwareBackPress\", this.backAction);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      if (this.props.orderDetail !== this.state.order) {\n        this.setState({\n          order: this.props.orderDetail\n        });\n      }\n\n      if (removeOrder && this.props.removeOrderItems) {\n        this.apiCall(this.state.id);\n        removeOrder = false;\n      }\n\n      if (updateOrder && this.props.route && this.props.route.params && this.props.route.params.from === \"UpdateOrder\") {\n        var id = this.props.route.params.data;\n        this.apiCall(id);\n        updateOrder = false;\n      }\n\n      if (updateOrderSuccess && this.props.updateOrderSuccess && this.props.updateOrderSuccess.scan_pack_data && this.props.updateOrderSuccess.scan_pack_data[0] && this.props.updateOrderSuccess.scan_pack_data[0].scan_hash.data) {\n        this.setState({\n          visible: false\n        });\n        this.props.navigation.navigate(\"ScanPackItem\", {\n          data: {\n            from: \"orderDetailPage\",\n            order: this.props.updateOrderSuccess.scan_pack_data[0].scan_hash.data.order\n          }\n        });\n        updateOrderSuccess = false;\n      }\n    }\n  }, {\n    key: \"redirect\",\n    value: function redirect(item) {\n      this.props.navigation.navigate(\"ProductDetail\", {\n        data: item,\n        token: this.state.token,\n        url: this.state.url\n      });\n    }\n  }, {\n    key: \"addOrderItem\",\n    value: function addOrderItem(items) {\n      this.props.navigation.navigate(\"Select Product to add to Order\", items);\n      updateOrder = true;\n    }\n  }, {\n    key: \"removeOrderItem\",\n    value: function removeOrderItem(ids) {\n      var removeIds = this.state.removeIds;\n      var check = removeIds.includes(ids.iteminfo.id);\n\n      if (check) {\n        var index = removeIds.findIndex(function (removeIds) {\n          return removeIds === ids.iteminfo.id;\n        });\n        removeIds.splice(index, 1);\n      } else {\n        removeIds.push(ids.iteminfo.id);\n      }\n\n      this.setState({\n        removeIds: removeIds\n      });\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(text, item) {\n      var qtyValue = item.iteminfo;\n      qtyValue[\"qty\"] = text && JSON.parse(text);\n      this.setState({\n        qtyValue: qtyValue\n      });\n    }\n  }, {\n    key: \"handleBasicInfo\",\n    value: function handleBasicInfo(name, value) {\n      var tempInfo = this.state.order && this.state.order.basicinfo;\n      tempInfo[name] = value;\n      this.setState({\n        tempInfo: tempInfo\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.backHandler.remove();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var order = this.props && this.state.order;\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 7\n        }\n      }, this.state.visible ? React.createElement(View, {\n        style: {\n          flex: 1,\n          justifyContent: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 11\n        }\n      }, React.createElement(ActivityIndicator, {\n        size: \"large\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 13\n        }\n      })) : React.createElement(View, {\n        style: {\n          position: \"relative\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 11\n        }\n      }, React.createElement(View, {\n        style: {\n          height: \"90%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 13\n        }\n      }, order && React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 17\n        }\n      }, React.createElement(LinearGradient, {\n        colors: [\"#2E4452\", \"#14222F\"],\n        style: styles.tabContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 19\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: this.changeState.bind(this, \"itemActive\"),\n        style: [globalStyles.flex2, globalStyles.justifyCenter, {\n          backgroundColor: this.state.itemActive ? \"white\" : \"#336599\"\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: [styles.tabLabel, {\n          color: this.state.itemActive ? \"black\" : \"white\"\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 23\n        }\n      }, \"Items\")), React.createElement(TouchableOpacity, {\n        onPress: this.changeState.bind(this, \"notesActive\"),\n        style: [globalStyles.flex2, globalStyles.justifyCenter, {\n          backgroundColor: this.state.notesActive ? \"white\" : \"#336599\"\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: [styles.tabLabel, {\n          color: this.state.notesActive ? \"black\" : \"white\"\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 23\n        }\n      }, \"Notes\")), React.createElement(TouchableOpacity, {\n        onPress: this.changeState.bind(this, \"informationActive\"),\n        style: [globalStyles.flex2, globalStyles.justifyCenter, {\n          backgroundColor: this.state.informationActive ? \"white\" : \"#336599\"\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: [styles.tabLabel, {\n          color: this.state.informationActive ? \"black\" : \"white\"\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 23\n        }\n      }, \"Information\")), React.createElement(TouchableOpacity, {\n        onPress: this.changeState.bind(this, \"activitiesActive\"),\n        style: [globalStyles.flex2, globalStyles.justifyCenter, {\n          backgroundColor: this.state.activitiesActive ? \"white\" : \"#336599\"\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: [styles.tabLabel, {\n          color: this.state.activitiesActive ? \"black\" : \"white\"\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 431,\n          columnNumber: 23\n        }\n      }, \"Activities & Exceptions\")), React.createElement(TouchableOpacity, {\n        onPress: this.changeState.bind(this, \"multiBoxActive\"),\n        style: [globalStyles.flex2, globalStyles.justifyCenter, {\n          backgroundColor: this.state.multiBoxActive ? \"white\" : \"#336599\"\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 444,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: [styles.tabLabel, {\n          color: this.state.multiBoxActive ? \"black\" : \"white\"\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 456,\n          columnNumber: 23\n        }\n      }, \"Multi-Box Info\"))), this.state.itemActive && React.createElement(ItemsDetail, {\n        items: order,\n        token: this.state.token,\n        url: this.state.url,\n        redirect: this.redirect.bind(this),\n        navigation: this.props.navigation,\n        updateQuantity: function updateQuantity(e) {\n          return _this2.updateQuantity(e);\n        },\n        addOrderItem: function addOrderItem(e) {\n          return _this2.addOrderItem(e);\n        },\n        handleChange: function handleChange(e, item) {\n          return _this2.handleChange(e, item);\n        },\n        removeOrderItem: function removeOrderItem(ids) {\n          return _this2.removeOrderItem(ids);\n        },\n        removeIds: this.state.removeIds,\n        removeItems: function removeItems() {\n          return _this2.removeItems();\n        },\n        updateBasicInfo: function updateBasicInfo() {\n          return _this2.updateBasicInfo();\n        },\n        back: function back() {\n          return _this2.props.navigation.goBack();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 471,\n          columnNumber: 21\n        }\n      }), this.state.notesActive && React.createElement(NotesDetail, {\n        basicinfo: order.basicinfo,\n        navigation: this.props.navigation,\n        handleChange: function handleChange(Name, Value) {\n          return _this2.handleBasicInfo(Name, Value);\n        },\n        updateBasicInfo: function updateBasicInfo() {\n          return _this2.updateBasicInfo();\n        },\n        back: function back() {\n          return _this2.props.navigation.goBack();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 488,\n          columnNumber: 21\n        }\n      }), this.state.informationActive && React.createElement(InformationDetail, {\n        basicinfo: order.basicinfo,\n        navigation: this.props.navigation,\n        handleChange: function handleChange(Name, Value) {\n          return _this2.handleBasicInfo(Name, Value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 499,\n          columnNumber: 21\n        }\n      }), this.state.activitiesActive && React.createElement(ActivitiesExceptionDetail, {\n        activities: order.activities,\n        exception: order.exception,\n        navigation: this.props.navigation,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 508,\n          columnNumber: 21\n        }\n      }), this.state.multiBoxActive && React.createElement(MultiBoxDetail, {\n        navigation: this.props.navigation,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 515,\n          columnNumber: 21\n        }\n      }))), Platform.OS === \"web\" ? React.createElement(View, {\n        style: {\n          flexDirection: \"row\",\n          position: \"absolute\",\n          bottom: 0,\n          backgroundColor: \"transparent\",\n          alignSelf: \"flex-end\",\n          margin: 5\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 522,\n          columnNumber: 15\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return _this2.updateBasicInfo();\n        },\n        style: {\n          marginRight: 10,\n          borderWidth: 1,\n          borderStyle: \"solid\",\n          borderColor: \"#336597\",\n          borderRadius: 30,\n          backgroundColor: \"#494848\",\n          height: 40\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 532,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: \"white\",\n          padding: 10,\n          fontWeight: \"bold\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 544,\n          columnNumber: 19\n        }\n      }, \"Cancel\")), React.createElement(TouchableOpacity, {\n        style: {\n          marginRight: 10,\n          borderWidth: 1,\n          borderStyle: \"solid\",\n          borderColor: \"#336597\",\n          borderRadius: 20,\n          backgroundColor: \"#336599\",\n          height: 40\n        },\n        onPress: function onPress() {\n          return _this2.updateBasicInfo();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 550,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: \"white\",\n          padding: 10,\n          fontWeight: \"bold\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 562,\n          columnNumber: 19\n        }\n      }, \"Save & Close\"))) : React.createElement(View, {\n        style: {\n          flexDirection: \"row\",\n          position: \"absolute\",\n          bottom: 10,\n          backgroundColor: \"transparent\",\n          alignSelf: \"flex-end\",\n          margin: 5\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 570,\n          columnNumber: 15\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return _this2.updateBasicInfo();\n        },\n        style: {\n          borderWidth: 1,\n          borderStyle: \"solid\",\n          borderColor: \"#336597\",\n          backgroundColor: \"#494848\",\n          justifyContent: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 580,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: \"white\",\n          padding: 4,\n          fontSize: 13,\n          fontWeight: \"bold\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 590,\n          columnNumber: 19\n        }\n      }, \"Cancel\")), React.createElement(TouchableOpacity, {\n        style: {\n          marginRight: 10,\n          borderWidth: 1,\n          borderStyle: \"solid\",\n          borderColor: \"#336597\",\n          backgroundColor: \"#336599\",\n          justifyContent: \"center\"\n        },\n        onPress: function onPress() {\n          return _this2.updateBasicInfo();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 601,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: \"white\",\n          padding: 4,\n          fontSize: 13,\n          fontWeight: \"bold\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 612,\n          columnNumber: 19\n        }\n      }, \"Save & Close\")))));\n    }\n  }]);\n\n  return OrderDetail;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    orderDetail: state.order.order,\n    saveData: state.updateAsync.retriveData,\n    removeOrderItems: state.order.removeOrderItems,\n    updateOrderSuccess: state.order.updateOrder\n  };\n};\n\nvar mapDispatchToProps = {\n  GetOrderDetail: GetOrderDetail,\n  GetItem: GetItem,\n  UpdateOrderQuantity: UpdateOrderQuantity,\n  RemoveOrderItems: RemoveOrderItems,\n  UpdateOrderInfo: UpdateOrderInfo,\n  SubmitLog: SubmitLog,\n  SetItem: SetItem,\n  OrderBackButtonClick: OrderBackButtonClick\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(OrderDetail);","map":{"version":3,"sources":["C:/Users/DELL PC/Downloads/GroovePacker/src/components/orders/orderdetail.js"],"names":["React","Component","AsyncStorage","connect","GetItem","SetItem","GetOrderDetail","UpdateOrderQuantity","RemoveOrderItems","UpdateOrderInfo","OrderBackButtonClick","ItemsDetail","NotesDetail","SubmitLog","ActivitiesExceptionDetail","MultiBoxDetail","InformationDetail","globalStyles","styles","LinearGradient","toggle","saveData","productID","removeOrder","updateOrder","fetchData","updateOrderSuccess","windowWidth","Dimensions","get","width","windowHeight","height","OrderDetail","props","backAction","Alert","alert","text","onPress","style","updateBasicInfo","multipleTime","getItem","convert","JSON","parse","apiCall","id","detail","orderDetail","state","data","changeState","setState","itemActive","notesActive","informationActive","activitiesActive","multiBoxActive","updateQuantity","item","orderitem","iteminfo","qty","parseInt","removeItems","removeIds","length","visible","basicInfo","order","basicinfo","filter","limit","offset","dataList","app","items","route","params","backHandler","BackHandler","addEventListener","removeOrderItems","from","scan_pack_data","scan_hash","navigation","navigate","token","url","ids","check","includes","index","findIndex","splice","push","qtyValue","name","value","tempInfo","remove","flex","justifyContent","position","tabContainer","bind","flex2","justifyCenter","backgroundColor","tabLabel","color","redirect","e","addOrderItem","handleChange","removeOrderItem","goBack","Name","Value","handleBasicInfo","activities","exception","Platform","OS","flexDirection","bottom","alignSelf","margin","marginRight","borderWidth","borderStyle","borderColor","borderRadius","padding","fontWeight","fontSize","mapStateToProps","updateAsync","retriveData","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  View,\n  Text,\n  // AsyncStorage,\n  ActivityIndicator,\n  Platform,\n  Alert,\n  Dimensions,\n  BackHandler,\n  TextInput,\n  Image,\n  TouchableOpacity,\n  ScrollView,\n} from \"react-native\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { connect } from \"react-redux\";\nimport { GetItem, SetItem } from \"../../actions/updateAsyncAction\";\n\nimport {\n  GetOrderDetail,\n  UpdateOrderQuantity,\n  RemoveOrderItems,\n  UpdateOrderInfo,\n} from \"../../actions/orderActions\";\nimport { OrderBackButtonClick } from \"../../actions/headerActions\";\nimport ItemsDetail from \"./items_detail\";\nimport NotesDetail from \"./notes_detail\";\nimport { SubmitLog } from \"../../actions/saveLogAction\";\nimport ActivitiesExceptionDetail from \"./activities_exception_detail\";\nimport MultiBoxDetail from \"./multi_box_detail\";\nimport InformationDetail from \"./information_detail\";\nimport globalStyles from \"../../style/global\";\nimport styles from \"../../style/orderdetail\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport toggle from \"../../../assets/toggle1.png\";\n\nlet saveData = false;\nlet productID = 0;\nlet removeOrder = true;\nlet updateOrder = true;\nlet fetchData = true;\nlet updateOrderSuccess = true;\nconst windowWidth = Dimensions.get(\"window\").width;\nconst windowHeight = Dimensions.get(\"window\").height;\n\nclass OrderDetail extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: {\n        filter: \"awaiting\",\n        order: \"DESC\",\n        limit: \"1\",\n        offset: \"0\",\n      },\n      dataList: {\n        filter: \"awaiting\",\n        order: \"DESC\",\n        limit: \"1\",\n        offset: \"0\",\n        app: \"app\",\n      },\n      visible: false,\n      itemActive: true,\n      notesActive: false,\n      informationActive: false,\n      activitiesActive: false,\n      multiBoxActive: false,\n      items: [],\n      removeIds: [],\n      order: [],\n    };\n  }\n\n  componentDidMount() {\n    // let productID = this.props && this.props.route.params.item && this.props.route.params.item.id\n    // this.props.GetItem(\"storeOrder\")\n    let id =\n      this.props.route &&\n      this.props.route.params &&\n      this.props.route.params.item &&\n      this.props.route.params.item.id;\n    // console.log('item id: ', this.props.route.params)\n    this.setState({ id: id });\n    if (id) {\n      this.apiCall(id);\n      this.multipleTime();\n    }\n    // this.props.navigation.goBack(null)\n    this.backHandler = BackHandler.addEventListener(\n      \"hardwareBackPress\",\n      this.backAction\n    );\n  }\n\n  backAction = () => {\n    Alert.alert(\"Hold on!\", \"Are you sure you want to go back?\", [\n      {\n        text: \"Cancel\",\n        onPress: () => null,\n        style: \"cancel\",\n      },\n      { text: \"YES\", onPress: () => this.updateBasicInfo() },\n    ]);\n    return true;\n  };\n\n  multipleTime = async () => {\n    let getItem = await AsyncStorage.getItem(\"logsArray\");\n    let convert = getItem && JSON.parse(getItem);\n    this.props.SubmitLog(convert);\n  };\n\n  componentDidUpdate() {\n    if (this.props.orderDetail !== this.state.order) {\n      this.setState({ order: this.props.orderDetail });\n    }\n    if (removeOrder && this.props.removeOrderItems) {\n      this.apiCall(this.state.id);\n      removeOrder = false;\n    }\n    if (\n      updateOrder &&\n      this.props.route &&\n      this.props.route.params &&\n      this.props.route.params.from === \"UpdateOrder\"\n    ) {\n      let id = this.props.route.params.data;\n      this.apiCall(id);\n      updateOrder = false;\n    }\n    if (\n      updateOrderSuccess &&\n      this.props.updateOrderSuccess &&\n      this.props.updateOrderSuccess.scan_pack_data &&\n      this.props.updateOrderSuccess.scan_pack_data[0] &&\n      this.props.updateOrderSuccess.scan_pack_data[0].scan_hash.data\n    ) {\n      // this.updateOrderList(this.props.updateOrderSuccess.scan_pack_data[0])\n      this.setState({ visible: false });\n      this.props.navigation.navigate(\"ScanPackItem\", {\n        data: {\n          from: \"orderDetailPage\",\n          order:\n            this.props.updateOrderSuccess.scan_pack_data[0].scan_hash.data\n              .order,\n        },\n      });\n      updateOrderSuccess = false;\n    }\n    // if(this.state.items !== this.props.items){\n    //   this.setState({items: this.props.items})\n    // }\n  }\n\n  // updateOrderList = async(updateOrder) => {\n  //   let localOrderList = await AsyncStorage.getItem(\"storeOrder\")\n  //   let searchOrderNumber = updateOrder.id\n  //   let orderFound = false\n  //   if(localOrderList){\n  //     let unString = localOrderList && JSON.parse(localOrderList)\n  //     if(unString.orders && unString.orders.length > 0){\n  //       unString.orders && unString.orders.map((orders ) => {\n  //         if(orders.id === searchOrderNumber){\n  //           orders = updateOrder\n  //           orderFound = true\n  //         }\n  //       })\n  //     }\n  //     if(orderFound === false){\n  //       let updatedList = unString.orders && unString.orders.push(updateOrder)\n  //     }\n  //     let finalList = JSON.stringify(unString)\n  //     this.props.SetItem( \"storeOrder\" , finalList)\n  //   }\n  // }\n\n  apiCall = (id) => {\n    // let id = this.props && this.props.route.params.item && this.props.route.params.item.id\n    let detail = {\n      id: id,\n      orderDetail: this.state.data,\n    };\n    if (id !== null) {\n      this.props.GetOrderDetail(detail);\n    }\n  };\n\n  redirect(item) {\n    this.props.navigation.navigate(\"ProductDetail\", {\n      data: item,\n      token: this.state.token,\n      url: this.state.url,\n    });\n  }\n\n  changeState = (state) => {\n    if (state === \"itemActive\") {\n      this.setState({\n        itemActive: true,\n        notesActive: false,\n        informationActive: false,\n        activitiesActive: false,\n        multiBoxActive: false,\n      });\n    }\n    if (state === \"notesActive\") {\n      this.setState({\n        itemActive: false,\n        notesActive: true,\n        informationActive: false,\n        activitiesActive: false,\n        multiBoxActive: false,\n      });\n    }\n    if (state === \"informationActive\") {\n      this.setState({\n        itemActive: false,\n        notesActive: false,\n        informationActive: true,\n        activitiesActive: false,\n        multiBoxActive: false,\n      });\n    }\n    if (state === \"activitiesActive\") {\n      this.setState({\n        itemActive: false,\n        notesActive: false,\n        informationActive: false,\n        activitiesActive: true,\n        multiBoxActive: false,\n      });\n    }\n    if (state === \"multiBoxActive\") {\n      this.setState({\n        itemActive: false,\n        notesActive: false,\n        informationActive: false,\n        activitiesActive: false,\n        multiBoxActive: true,\n      });\n    }\n  };\n\n  updateQuantity = async (item) => {\n    if (item) {\n      let data = {\n        orderitem: item.iteminfo.id,\n        qty: item.iteminfo.qty && parseInt(item.iteminfo.qty),\n      };\n      await this.props.UpdateOrderQuantity(data);\n    }\n  };\n\n  addOrderItem(items) {\n    this.props.navigation.navigate(\"Select Product to add to Order\", items);\n    updateOrder = true;\n  }\n\n  removeOrderItem(ids) {\n    let removeIds = this.state.removeIds;\n    var check = removeIds.includes(ids.iteminfo.id);\n    if (check) {\n      const index = removeIds.findIndex(\n        (removeIds) => removeIds === ids.iteminfo.id\n      );\n      removeIds.splice(index, 1);\n    } else {\n      removeIds.push(ids.iteminfo.id);\n    }\n    this.setState({ removeIds });\n  }\n\n  handleChange(text, item) {\n    let qtyValue = item.iteminfo;\n    qtyValue[\"qty\"] = text && JSON.parse(text);\n    this.setState({ qtyValue });\n  }\n\n  removeItems = async () => {\n    let removeIds = this.state.removeIds;\n    let data = {\n      orderitem: removeIds,\n    };\n    if (this.state.removeIds && this.state.removeIds.length > 0) {\n      await this.props.RemoveOrderItems(data);\n      removeOrder = true;\n    }\n  };\n\n  handleBasicInfo(name, value) {\n    let tempInfo = this.state.order && this.state.order.basicinfo;\n    tempInfo[name] = value;\n    this.setState({ tempInfo });\n  }\n\n  updateBasicInfo = async () => {\n    this.setState({ visible: true });\n    let basicInfo = this.state.order && this.state.order.basicinfo;\n    if (basicInfo) {\n      basicInfo[\"app\"] = \"app\";\n      let id = basicInfo.id;\n      let data = basicInfo;\n      await this.props.UpdateOrderInfo(id, data);\n      updateOrderSuccess = true;\n      // this.props.navigation.navigate(\"ScanPack\" , {data: {from: \"orderDetailPage\" , id: this.state.order}})\n    }\n  };\n\n  // handleBackButtonClick(){\n  //   this.props.navigation.goBack(null);\n  //   return true;\n  //   this.updateBasicInfo()\n  // }\n\n  componentWillUnmount() {\n    this.backHandler.remove();\n  }\n\n  render() {\n    let order = this.props && this.state.order;\n    return (\n      <React.Fragment>\n        {this.state.visible ? (\n          <View style={{ flex: 1, justifyContent: \"center\" }}>\n            <ActivityIndicator size=\"large\" />\n          </View>\n        ) : (\n          <View style={{ position: \"relative\" }}>\n            {/* <View style={{ height: \"6%\", borderWidth: 1 }}>\n              <LinearGradient\n                colors={[\"#2E4452\", \"#14222F\"]}\n                style={styles.headerGradient}\n              >\n                <TouchableOpacity\n                  onPress={() => {}}\n                  style={styles.drawerBtn}\n                >\n                  <Image\n                    style={styles.drawerImg}\n                    source={toggle ? toggle : \"\"}\n                  />\n                </TouchableOpacity>\n                {console.log()}\n              </LinearGradient>\n            </View> */}\n            <View style={{ height: \"90%\" }}>\n              {order && (\n                <View>\n                  <LinearGradient colors={[\"#2E4452\", \"#14222F\"]} style={styles.tabContainer}>\n                    <TouchableOpacity\n                      onPress={this.changeState.bind(this, \"itemActive\")}\n                      style={[\n                        globalStyles.flex2,\n                        globalStyles.justifyCenter,\n                        {\n                          backgroundColor: this.state.itemActive\n                            ? \"white\"\n                            : \"#336599\",\n                        },\n                      ]}\n                    >\n                      <Text\n                        style={[\n                          styles.tabLabel,\n                          { color: this.state.itemActive ? \"black\" : \"white\" },\n                        ]}\n                      >\n                        Items\n                      </Text>\n                    </TouchableOpacity>\n                    <TouchableOpacity\n                      onPress={this.changeState.bind(this, \"notesActive\")}\n                      style={[\n                        globalStyles.flex2,\n                        globalStyles.justifyCenter,\n                        {\n                          backgroundColor: this.state.notesActive\n                            ? \"white\"\n                            : \"#336599\",\n                        },\n                      ]}\n                    >\n                      <Text\n                        style={[\n                          styles.tabLabel,\n                          { color: this.state.notesActive ? \"black\" : \"white\" },\n                        ]}\n                      >\n                        Notes\n                      </Text>\n                    </TouchableOpacity>\n                    <TouchableOpacity\n                      onPress={this.changeState.bind(this, \"informationActive\")}\n                      style={[\n                        globalStyles.flex2,\n                        globalStyles.justifyCenter,\n                        {\n                          backgroundColor: this.state.informationActive\n                            ? \"white\"\n                            : \"#336599\",\n                        },\n                      ]}\n                    >\n                      <Text\n                        style={[\n                          styles.tabLabel,\n                          {\n                            color: this.state.informationActive\n                              ? \"black\"\n                              : \"white\",\n                          },\n                        ]}\n                      >\n                        Information\n                      </Text>\n                    </TouchableOpacity>\n                    <TouchableOpacity\n                      onPress={this.changeState.bind(this, \"activitiesActive\")}\n                      style={[\n                        globalStyles.flex2,\n                        globalStyles.justifyCenter,\n                        {\n                          backgroundColor: this.state.activitiesActive\n                            ? \"white\"\n                            : \"#336599\",\n                        },\n                      ]}\n                    >\n                      <Text\n                        style={[\n                          styles.tabLabel,\n                          {\n                            color: this.state.activitiesActive\n                              ? \"black\"\n                              : \"white\",\n                          },\n                        ]}\n                      >\n                        Activities & Exceptions\n                      </Text>\n                    </TouchableOpacity>\n                    <TouchableOpacity\n                      onPress={this.changeState.bind(this, \"multiBoxActive\")}\n                      style={[\n                        globalStyles.flex2,\n                        globalStyles.justifyCenter,\n                        {\n                          backgroundColor: this.state.multiBoxActive\n                            ? \"white\"\n                            : \"#336599\",\n                        },\n                      ]}\n                    >\n                      <Text\n                        style={[\n                          styles.tabLabel,\n                          {\n                            color: this.state.multiBoxActive\n                              ? \"black\"\n                              : \"white\",\n                          },\n                        ]}\n                      >\n                        Multi-Box Info\n                      </Text>\n                    </TouchableOpacity>\n                  </LinearGradient>\n                  {this.state.itemActive && (\n                    <ItemsDetail\n                      items={order}\n                      token={this.state.token}\n                      url={this.state.url}\n                      redirect={this.redirect.bind(this)}\n                      navigation={this.props.navigation}\n                      updateQuantity={(e) => this.updateQuantity(e)}\n                      addOrderItem={(e) => this.addOrderItem(e)}\n                      handleChange={(e, item) => this.handleChange(e, item)}\n                      removeOrderItem={(ids) => this.removeOrderItem(ids)}\n                      removeIds={this.state.removeIds}\n                      removeItems={() => this.removeItems()}\n                      updateBasicInfo={() => this.updateBasicInfo()}\n                      back={() => this.props.navigation.goBack()}\n                    />\n                  )}\n                  {this.state.notesActive && (\n                    <NotesDetail\n                      basicinfo={order.basicinfo}\n                      navigation={this.props.navigation}\n                      handleChange={(Name, Value) =>\n                        this.handleBasicInfo(Name, Value)\n                      }\n                      updateBasicInfo={() => this.updateBasicInfo()}\n                      back={() => this.props.navigation.goBack()}\n                    />\n                  )}\n                  {this.state.informationActive && (\n                    <InformationDetail\n                      basicinfo={order.basicinfo}\n                      navigation={this.props.navigation}\n                      handleChange={(Name, Value) =>\n                        this.handleBasicInfo(Name, Value)\n                      }\n                    />\n                  )}\n                  {this.state.activitiesActive && (\n                    <ActivitiesExceptionDetail\n                      activities={order.activities}\n                      exception={order.exception}\n                      navigation={this.props.navigation}\n                    />\n                  )}\n                  {this.state.multiBoxActive && (\n                    <MultiBoxDetail navigation={this.props.navigation} />\n                  )}\n                </View>\n              )}\n            </View>\n\n            {Platform.OS === \"web\" ? (\n              <View\n                style={{\n                  flexDirection: \"row\",\n                  position: \"absolute\",\n                  bottom: 0,\n                  backgroundColor: \"transparent\",\n                  alignSelf: \"flex-end\",\n                  margin: 5,\n                }}\n              >\n                <TouchableOpacity\n                  onPress={() => this.updateBasicInfo()}\n                  style={{\n                    marginRight: 10,\n                    borderWidth: 1,\n                    borderStyle: \"solid\",\n                    borderColor: \"#336597\",\n                    borderRadius: 30,\n                    backgroundColor: \"#494848\",\n                    height: 40,\n                  }}\n                >\n                  <Text\n                    style={{ color: \"white\", padding: 10, fontWeight: \"bold\" }}\n                  >\n                    Cancel\n                  </Text>\n                </TouchableOpacity>\n                <TouchableOpacity\n                  style={{\n                    marginRight: 10,\n                    borderWidth: 1,\n                    borderStyle: \"solid\",\n                    borderColor: \"#336597\",\n                    borderRadius: 20,\n                    backgroundColor: \"#336599\",\n                    height: 40,\n                  }}\n                  onPress={() => this.updateBasicInfo()}\n                >\n                  <Text\n                    style={{ color: \"white\", padding: 10, fontWeight: \"bold\" }}\n                  >\n                    Save & Close\n                  </Text>\n                </TouchableOpacity>\n              </View>\n            ) : (\n              <View\n                style={{\n                  flexDirection: \"row\",\n                  position: \"absolute\",\n                  bottom: 10,\n                  backgroundColor: \"transparent\",\n                  alignSelf: \"flex-end\",\n                  margin: 5,\n                }}\n              >\n                <TouchableOpacity\n                  onPress={() => this.updateBasicInfo()}\n                  style={{\n                    borderWidth: 1,\n                    borderStyle: \"solid\",\n                    borderColor: \"#336597\",\n                    backgroundColor: \"#494848\",\n                    justifyContent: \"center\",\n                  }}\n                >\n                  <Text\n                    style={{\n                      color: \"white\",\n                      padding: 4,\n                      fontSize: 13,\n                      fontWeight: \"bold\",\n                    }}\n                  >\n                    Cancel\n                  </Text>\n                </TouchableOpacity>\n                <TouchableOpacity\n                  style={{\n                    marginRight: 10,\n                    borderWidth: 1,\n                    borderStyle: \"solid\",\n                    borderColor: \"#336597\",\n                    backgroundColor: \"#336599\",\n                    justifyContent: \"center\",\n                  }}\n                  onPress={() => this.updateBasicInfo()}\n                >\n                  <Text\n                    style={{\n                      color: \"white\",\n                      padding: 4,\n                      fontSize: 13,\n                      fontWeight: \"bold\",\n                    }}\n                  >\n                    Save & Close\n                  </Text>\n                </TouchableOpacity>\n              </View>\n            )}\n          </View>\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    orderDetail: state.order.order,\n    saveData: state.updateAsync.retriveData,\n    removeOrderItems: state.order.removeOrderItems,\n    updateOrderSuccess: state.order.updateOrder,\n  };\n};\n\nconst mapDispatchToProps = {\n  GetOrderDetail,\n  GetItem,\n  UpdateOrderQuantity,\n  RemoveOrderItems,\n  UpdateOrderInfo,\n  SubmitLog,\n  SetItem,\n  OrderBackButtonClick,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OrderDetail);\n"]},"metadata":{},"sourceType":"module"}
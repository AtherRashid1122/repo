{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\DELL PC\\\\Downloads\\\\GroovePacker\\\\src\\\\components\\\\scanpack\\\\addBarcode.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport styles from \"../../style/scanpack\";\nimport globalStyles from \"../../style/global\";\nimport { fontFamily } from \"../../helpers/fontFamily\";\nimport { LinearGradient } from 'expo-linear-gradient';\n\nvar AddBarcode = function (_Component) {\n  _inherits(AddBarcode, _Component);\n\n  var _super = _createSuper(AddBarcode);\n\n  function AddBarcode(props) {\n    var _this;\n\n    _classCallCheck(this, AddBarcode);\n\n    _this = _super.call(this, props);\n    _this.typeScanFocus = React.createRef();\n    return _this;\n  }\n\n  _createClass(AddBarcode, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this.typeScanFocus.current.focus();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: styles.typeScanContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 4\n        }\n      }, React.createElement(LinearGradient, {\n        locations: [0, 1],\n        start: {\n          x: 0,\n          y: 1\n        },\n        end: {\n          x: 0,\n          y: 0\n        },\n        colors: [\"#d47d02\", \"#ffb636\"],\n        style: [styles.typeScanBox, {\n          backgroundColor: \"#b7b7b7\",\n          paddingHorizontal: 10,\n          paddingVertical: 5\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 5\n        }\n      }, React.createElement(View, {\n        style: globalStyles.flexDirectionRow,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 6\n        }\n      }, React.createElement(View, {\n        style: {\n          flexDirection: \"column\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        style: [styles.scanCountText, {\n          fontFamily: fontFamily.font400,\n          fontSize: 20\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 8\n        }\n      }, \"Carefully check the item before scanning.\"), React.createElement(Text, {\n        style: [styles.scanCountText, {\n          fontFamily: fontFamily.font400,\n          fontSize: 20\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 8\n        }\n      }, \"It will be saved and also marked \\\"scanned\\\".\"))), React.createElement(View, {\n        style: {\n          display: \"flex\",\n          alignItems: \"center\",\n          flexDirection: 'row'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 6\n        }\n      }, React.createElement(TextInput, {\n        value: this.props.addBarcodeText,\n        onChangeText: this.props.addBarcodeChange,\n        autoFocus: true,\n        ref: this.typeScanFocus,\n        onSubmitEditing: this.props.addBarcodeText !== \"\" ? this.props.addBarcodeSubmit : \"\",\n        style: [styles.typeScanCountInput, {\n          backgroundColor: \"#df8b0f\",\n          outline: \"none\",\n          width: \"60%\",\n          color: \"#000\",\n          fontFamily: fontFamily.font500,\n          fontSize: 18\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 7\n        }\n      }), React.createElement(TouchableOpacity, {\n        onPress: this.props.closeAlert,\n        style: [styles.scanCountSubmitBtnBox, {\n          marginTop: 20\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        style: [styles.scanCountSubmitBtn, {\n          fontFamily: fontFamily.font400\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 8\n        }\n      }, \"Cancel\")))));\n    }\n  }]);\n\n  return AddBarcode;\n}(Component);\n\nexport { AddBarcode as default };","map":{"version":3,"sources":["C:/Users/DELL PC/Downloads/GroovePacker/src/components/scanpack/addBarcode.js"],"names":["React","Component","styles","globalStyles","fontFamily","LinearGradient","AddBarcode","props","typeScanFocus","createRef","current","focus","typeScanContainer","x","y","typeScanBox","backgroundColor","paddingHorizontal","paddingVertical","flexDirectionRow","flexDirection","scanCountText","font400","fontSize","display","alignItems","addBarcodeText","addBarcodeChange","addBarcodeSubmit","typeScanCountInput","outline","width","color","font500","closeAlert","scanCountSubmitBtnBox","marginTop","scanCountSubmitBtn"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { View, Text, TextInput, TouchableOpacity } from 'react-native';\nimport styles from '../../style/scanpack';\nimport globalStyles from '../../style/global';\nimport { fontFamily } from '../../helpers/fontFamily';\nimport { LinearGradient } from 'expo-linear-gradient';\n\n\nexport default class AddBarcode extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.typeScanFocus = React.createRef();\n\t}\n\n\tcomponentDidUpdate() {\n\t\tthis.typeScanFocus.current.focus()\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<View style={styles.typeScanContainer}>\n\t\t\t\t<LinearGradient\n\t\t\t\t\tlocations={[0, 1]}\n\t\t\t\t\tstart={{ x: 0, y: 1 }} end={{ x: 0, y: 0 }}\n\t\t\t\t\tcolors={[\"#d47d02\", \"#ffb636\"]}\n\t\t\t\t\tstyle={[styles.typeScanBox, { backgroundColor: \"#b7b7b7\", paddingHorizontal: 10, paddingVertical: 5 }]}>\n\t\t\t\t\t<View style={globalStyles.flexDirectionRow}>\n\t\t\t\t\t\t<View style={{ flexDirection: \"column\" }}>\n\t\t\t\t\t\t\t<Text style={[styles.scanCountText, { fontFamily: fontFamily.font400, fontSize: 20 }]}>\n\t\t\t\t\t\t\t\tCarefully check the item before scanning.\n\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t\t<Text style={[styles.scanCountText, { fontFamily: fontFamily.font400, fontSize: 20 }]}>\n\t\t\t\t\t\t\t\tIt will be saved and also marked \"scanned\".\n\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t</View>\n\t\t\t\t\t</View>\n\t\t\t\t\t<View style={{ display: \"flex\", alignItems: \"center\", flexDirection: 'row' }}>\n\t\t\t\t\t\t<TextInput\n\t\t\t\t\t\t\tvalue={this.props.addBarcodeText}\n\t\t\t\t\t\t\tonChangeText={this.props.addBarcodeChange}\n\t\t\t\t\t\t\tautoFocus={true}\n\t\t\t\t\t\t\tref={this.typeScanFocus}\n\t\t\t\t\t\t\tonSubmitEditing={this.props.addBarcodeText !== \"\" ? this.props.addBarcodeSubmit : \"\"}\n\t\t\t\t\t\t\tstyle={[styles.typeScanCountInput, { backgroundColor: \"#df8b0f\", outline: \"none\", width: \"60%\", color: \"#000\", fontFamily: fontFamily.font500, fontSize: 18 }]}>\n\t\t\t\t\t\t</TextInput>\n\t\t\t\t\t\t<TouchableOpacity onPress={this.props.closeAlert}\n\t\t\t\t\t\t\tstyle={[styles.scanCountSubmitBtnBox, { marginTop: 20 }]}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Text style={[styles.scanCountSubmitBtn, { fontFamily: fontFamily.font400 }]}>\n\t\t\t\t\t\t\t\tCancel\n\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t</TouchableOpacity>\n\t\t\t\t\t\t{/*<TouchableOpacity onPress={this.props.serialRecordInput !== \"\" ? this.props.serialRecordFun :  \"\"}\n\t                            style={styles.scanCountSubmitBtnBox}\n\t                            >\n\t            <Text style={styles.scanCountSubmitBtn}>\n\t              Submit\n\t            </Text>\n\t          </TouchableOpacity>*/}\n\t\t\t\t\t</View>\n\t\t\t\t</LinearGradient>\n\t\t\t</View>\n\t\t);\n\t}\n}"]},"metadata":{},"sourceType":"module"}
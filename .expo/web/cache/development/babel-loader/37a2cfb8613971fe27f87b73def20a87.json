{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL PC\\\\Downloads\\\\GroovePacker\\\\src\\\\components\\\\scanpack\\\\shipmentsRecord.js\";\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport styles from \"../../style/scanpack\";\nimport globalStyles from \"../../style/global\";\nexport default function ShipmentRecord(props) {\n  var Ship = props.Shipment;\n  return React.createElement(View, {\n    style: styles.shipContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }\n  }, props.errorMessageShow === false ? React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }\n  }, Ship && Ship.se_all_shipments && React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: styles.shipParagraph,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 19\n    }\n  }, \"Additional shipments Associated With this order \"), Ship.se_all_shipments && Ship.se_all_shipments.shipments.length > 0 && Ship.se_all_shipments.shipments.map(function (order, index) {\n    return React.createElement(View, {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 29\n      }\n    }, React.createElement(View, {\n      style: styles.shipOrderTextContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 31\n      }\n    }, React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        return props.callOrder(order);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 33\n      }\n    }, React.createElement(Text, {\n      style: styles.shipOrderLink,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 35\n      }\n    }, order.increment_id)), React.createElement(Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 33\n      }\n    }, \" Contains \", order.items_count, \" items(s)\")));\n  }), React.createElement(TouchableOpacity, {\n    onPress: props.hideShipment,\n    style: styles.shipCloseButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 19\n    }\n  }, React.createElement(Text, {\n    style: styles.shipOrderTextContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 21\n    }\n  }, \"Once all unwanted shipments are removed you can click here to acknowledge and continue.\"))), Ship && Ship.se_old_combined_shipments && React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: styles.shipParagraph,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 19\n    }\n  }, \"One of the shipments associated with this order was scanned in GroovePacker and then combined in ShippingEasy. Rather than modifying an order that has been scanned we are letting you know so you can take any action that is required  \"), Ship.se_old_combined_shipments && Ship.se_old_combined_shipments.length > 0 && Ship.se_old_combined_shipments.map(function (order, index) {\n    return React.createElement(View, {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 31\n      }\n    }, React.createElement(View, {\n      style: styles.shipOrderTextContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 33\n      }\n    }, React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        return props.callOrder(order);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 35\n      }\n    }, React.createElement(Text, {\n      style: styles.shipOrderLink,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 37\n      }\n    }, order.increment_id)), React.createElement(Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 35\n      }\n    }, \" \", order.status, \" \")));\n  }), React.createElement(TouchableOpacity, {\n    onPress: props.hideShipment,\n    style: styles.shipCloseButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    style: styles.shipOrderTextContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 23\n    }\n  }, \"Once all unwanted shipments are removed you can click here to acknowledge and continue.\"))), Ship && Ship.se_old_split_shipments && React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: styles.shipParagraph,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 19\n    }\n  }, \"One of the shipments associated with this order was scanned in GroovePacker and then combined in ShippingEasy. Rather than modifying an order that has been scanned we are letting you know so you can take any action that is required  \"), Ship.se_old_split_shipments && Ship.se_old_split_shipments.length > 0 && Ship.se_old_split_shipments.map(function (order, index) {\n    return React.createElement(View, {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 29\n      }\n    }, React.createElement(View, {\n      style: styles.shipOrderTextContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 31\n      }\n    }, React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        return props.callOrder(order);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 33\n      }\n    }, React.createElement(Text, {\n      style: styles.shipOrderLink,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 35\n      }\n    }, order.increment_id)), React.createElement(Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 33\n      }\n    }, order.status)));\n  }), React.createElement(TouchableOpacity, {\n    onPress: props.hideShipment,\n    style: styles.shipCloseButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 19\n    }\n  }, React.createElement(Text, {\n    style: styles.shipOrderTextContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 23\n    }\n  }, \"Once all unwanted shipments are removed you can click here to acknowledge and continue.\")))) : React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.shipParagraph,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 15\n    }\n  }, props.errorMessage), React.createElement(TouchableOpacity, {\n    onPress: props.hideShipment,\n    style: styles.shipCloseButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    style: styles.shipOrderTextContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 17\n    }\n  }, \"Close\"))));\n}","map":{"version":3,"sources":["C:/Users/DELL PC/Downloads/GroovePacker/src/components/scanpack/shipmentsRecord.js"],"names":["React","styles","globalStyles","ShipmentRecord","props","Ship","Shipment","shipContainer","errorMessageShow","se_all_shipments","shipParagraph","shipments","length","map","order","index","shipOrderTextContainer","callOrder","shipOrderLink","increment_id","items_count","hideShipment","shipCloseButton","se_old_combined_shipments","status","se_old_split_shipments","errorMessage"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { View, Text, TextInput, TouchableOpacity } from 'react-native';\nimport styles from '../../style/scanpack';\nimport globalStyles from '../../style/global';\n\nexport default function ShipmentRecord(props){\n  let Ship = props.Shipment\n  return (\n    <View style={styles.shipContainer}>\n      {\n        props.errorMessageShow === false\n          ?\n            <View>\n            {\n              Ship && Ship.se_all_shipments &&\n                <View>\n                  <Text style={styles.shipParagraph}>Additional shipments Associated With this order </Text>\n                  {\n                    Ship.se_all_shipments &&\n                      Ship.se_all_shipments.shipments.length > 0 &&\n                        Ship.se_all_shipments.shipments.map((order , index) =>{\n                          return(\n                            <View key={index}>\n                              <View style={styles.shipOrderTextContainer}>\n                                <TouchableOpacity onPress={() => props.callOrder(order)}>\n                                  <Text style={styles.shipOrderLink}>\n                                    {order.increment_id}\n                                  </Text>\n                                </TouchableOpacity>\n                                <Text> Contains {order.items_count} items(s)</Text>\n                              </View>\n                            </View>\n                          )\n                        })\n                  }\n                  <TouchableOpacity onPress={props.hideShipment} style={styles.shipCloseButton}>\n                    <Text style={styles.shipOrderTextContainer}>\n                        Once all unwanted shipments are removed you can click here to acknowledge and continue.\n                      </Text>\n                  </TouchableOpacity>\n                </View>\n            }\n            {\n              Ship && Ship.se_old_combined_shipments &&\n                <View>\n                  <Text style={styles.shipParagraph}>\n                    One of the shipments associated with this order was scanned in GroovePacker and then combined in ShippingEasy. Rather than modifying an order that has been scanned we are letting you know so you can take any action that is required  </Text>\n                    {\n                      Ship.se_old_combined_shipments &&\n                        Ship.se_old_combined_shipments.length > 0 &&\n                          Ship.se_old_combined_shipments.map((order , index) =>{\n                            return(\n                              <View key={index}>\n                                <View style={styles.shipOrderTextContainer}>\n                                  <TouchableOpacity onPress={() => props.callOrder(order)}>\n                                    <Text style={styles.shipOrderLink}>\n                                      {order.increment_id}\n                                    </Text>\n                                  </TouchableOpacity>\n                                  <Text> {order.status} </Text>\n                                </View>\n                              </View>\n                            )\n                          })\n                    }\n                    <TouchableOpacity onPress={props.hideShipment} style={styles.shipCloseButton}>\n                      <Text style={styles.shipOrderTextContainer}>\n                        Once all unwanted shipments are removed you can click here to acknowledge and continue.\n                      </Text>\n                    </TouchableOpacity>\n                </View>\n            }\n            {\n              Ship && Ship.se_old_split_shipments &&\n                <View>\n                  <Text style={styles.shipParagraph}>One of the shipments associated with this order was scanned in GroovePacker and then combined in ShippingEasy. Rather than modifying an order that has been scanned we are letting you know so you can take any action that is required  </Text>\n                  {\n                    Ship.se_old_split_shipments &&\n                      Ship.se_old_split_shipments.length > 0 &&\n                        Ship.se_old_split_shipments.map((order , index) =>{\n                          return(\n                            <View key={index}>\n                              <View style={styles.shipOrderTextContainer}>\n                                <TouchableOpacity onPress={() => props.callOrder(order)}>\n                                  <Text style={styles.shipOrderLink}>\n                                    {order.increment_id}\n                                  </Text>\n                                </TouchableOpacity>\n                                <Text>{order.status}</Text>\n                              </View>\n                            </View>\n                          )\n                        })\n                  }\n                  <TouchableOpacity onPress={props.hideShipment} style={styles.shipCloseButton}>\n                      <Text style={styles.shipOrderTextContainer}>\n                        Once all unwanted shipments are removed you can click here to acknowledge and continue.\n                      </Text>\n                  </TouchableOpacity>\n                </View>\n            }\n            </View>\n          :\n            <View>\n              <Text style={styles.shipParagraph}>\n                {props.errorMessage}\n              </Text>\n              <TouchableOpacity onPress={props.hideShipment} style={styles.shipCloseButton}>\n                <Text style={styles.shipOrderTextContainer}>\n                  Close\n                </Text>\n              </TouchableOpacity>\n            </View>\n\n      }\n\n    </View>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\DELL PC\\\\Downloads\\\\GroovePacker\\\\src\\\\components\\\\drawer\\\\drawer.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport AsyncStorage from \"react-native-web/dist/exports/AsyncStorage\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport styles from \"../../style/drawer\";\nimport stylesAlert from \"../../style/scanpack\";\nimport globalStyles from \"../../style/global\";\nimport { connect } from \"react-redux\";\nimport * as RootNavigation from \"../root_navigation\";\nimport { SetItem, GetItem } from \"../../actions/updateAsyncAction\";\nimport { SubmitLog, ScanPackBugReport } from \"../../actions/saveLogAction\";\nimport LogoutIcon from \"../../../assets/logout_icon.png\";\nimport SupportIcon from \"../../../assets/support_icon.png\";\nimport CloseDrawerIcon from \"../../../assets/close_drawer.png\";\nimport ExIcon from \"../../../assets/G_Ex_icon.png\";\nimport BugIcon from \"../../../assets/bug_icon.png\";\nimport ScannerIcon from \"../../../assets/scanner_icon.png\";\nimport { fontFamily } from \"../../helpers/fontFamily\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport Constants from \"expo-constants\";\nvar windowHeight = Dimensions.get(\"window\").height;\nvar localLogCheck = false;\nvar updateLogLocal = false;\nvar reportBug = false;\nvar reportLogSuccess = false;\n\nvar Drawer = function (_Component) {\n  _inherits(Drawer, _Component);\n\n  var _super = _createSuper(Drawer);\n\n  function Drawer(props) {\n    var _this;\n\n    _classCallCheck(this, Drawer);\n\n    _this = _super.call(this, props);\n\n    _this.updateDimensions = function () {\n      _this.setState({\n        windowWidth: window.innerWidth\n      });\n    };\n\n    _this.getUserInfo = function _callee() {\n      var info, userInfo;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"userInfo\"));\n\n            case 2:\n              info = _context.sent;\n\n              if (info) {\n                userInfo = info && JSON.parse(info);\n\n                _this.setState({\n                  userInfo: userInfo\n                });\n              }\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.logout = function _callee2() {\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return _regeneratorRuntime.awrap(AsyncStorage.clear());\n\n            case 3:\n              _this.redirect(\"SignIn\");\n\n              _context2.next = 8;\n              break;\n\n            case 6:\n              _context2.prev = 6;\n              _context2.t0 = _context2[\"catch\"](0);\n\n            case 8:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, [[0, 6]], Promise);\n    };\n\n    _this.clearStore = function () {\n      localLogCheck = true;\n\n      _this.props.GetItem(\"logsArray\");\n    };\n\n    _this.dismissPopUp = function () {\n      _this.setState({\n        localLogPopUp: false,\n        reportBugPopUp: false\n      });\n\n      RootNavigation.reset(\"ScanPack\");\n\n      _this.props.closeDrawer();\n    };\n\n    _this.discardChanges = function _callee3() {\n      return _regeneratorRuntime.async(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return _regeneratorRuntime.awrap(AsyncStorage.removeItem(\"logsArray\"));\n\n            case 2:\n              _context3.next = 4;\n              return _regeneratorRuntime.awrap(AsyncStorage.removeItem(\"storeOrder\"));\n\n            case 4:\n              RootNavigation.reset(\"ScanPack\", \"refreshButton\");\n\n              _this.props.closeDrawer();\n\n            case 6:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.saveChanges = function _callee4() {\n      var getItem, convert;\n      return _regeneratorRuntime.async(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              updateLogLocal = true;\n              localLogCheck = true;\n              _context4.next = 4;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"logsArray\"));\n\n            case 4:\n              getItem = _context4.sent;\n              convert = getItem && JSON.parse(getItem);\n\n              _this.props.SubmitLog(convert);\n\n            case 7:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.validation = function () {\n      var feedback = _this.state.feedbackField && _this.state.feedbackField.trim(\" \");\n\n      if (feedback === \"\") {\n        _this.setState({\n          feedbackFieldError: true\n        });\n      } else {\n        return true;\n      }\n    };\n\n    _this.submitBugReport = function _callee5() {\n      var logging, LoggingArray, bugObject;\n      return _regeneratorRuntime.async(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.next = 2;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"Logging\"));\n\n            case 2:\n              logging = _context5.sent;\n              LoggingArray = JSON.parse(logging);\n              bugObject = {\n                feedback: _this.state.feedbackField,\n                logs: LoggingArray\n              };\n\n              if (_this.validation() === true) {\n                _this.setState({\n                  spinner: true\n                });\n\n                _this.props.ScanPackBugReport(bugObject);\n\n                reportLogSuccess = true;\n              }\n\n            case 6:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.state = {\n      userInfo: \"\",\n      localLogPopUp: false,\n      reportBugPopUp: false,\n      logTime: \"\",\n      feedbackField: \"\",\n      feedbackFieldError: false,\n      spinner: false,\n      windowWidth: Dimensions.get(\"window\").width\n    };\n    return _this;\n  }\n\n  _createClass(Drawer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      window.addEventListener(\"resize\", this.updateDimensions);\n      this.getUserInfo();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      window.removeEventListener(\"resize\", this.updateDimensions);\n    }\n  }, {\n    key: \"redirect\",\n    value: function redirect(page) {\n      RootNavigation.reset(page);\n      this.props.closeDrawer();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      if (localLogCheck && this.props && this.props.localLog && this.props.localLog.retriveData && this.props.localLog.retriveData !== this.state.localData) {\n        localLogCheck = false;\n        var tempLocal = this.props.localLog && this.props.localLog.retriveData;\n\n        if (tempLocal !== \" \") {\n          var tempConvert = tempLocal !== \" \" && JSON.parse(tempLocal);\n\n          if (tempConvert && tempConvert.length > 0) {\n            this.setState({\n              localLogPopUp: true\n            });\n          }\n\n          this.setState({\n            localData: tempLocal\n          });\n        }\n      } else {\n        if (localLogCheck && this.props && this.props.localLog && this.props.localLog.retriveData === false) {\n          localLogCheck = false;\n          this.discardChanges();\n        }\n      }\n\n      if (updateLogLocal && this.props.updateLog.time !== this.state.logTime) {\n        if (this.props.updateLog && this.props.updateLog.logs && this.props.updateLog.logs.status === \"OK\" && this.props.updateLog.updateLog && this.props.updateLog.time) {\n          updateLogLocal = false;\n          this.setState({\n            logTime: this.props.updateLog.time\n          });\n          RootNavigation.reset(\"ScanPack\", \"refreshButton\");\n          this.props.closeDrawer();\n        }\n      }\n\n      if (this.props && this.props.updateReportLog && reportLogSuccess) {\n        reportLogSuccess = false;\n        this.setState({\n          reportBugPopUp: false,\n          feedbackField: \"\",\n          spinner: false\n        });\n        RootNavigation.reset(\"ScanPack\", \"refreshButton\");\n        this.props.closeDrawer();\n      }\n    }\n  }, {\n    key: \"reportBug\",\n    value: function reportBug() {\n      this.setState({\n        reportBugPopUp: true\n      });\n    }\n  }, {\n    key: \"cancelBugReport\",\n    value: function cancelBugReport() {\n      this.props.closeDrawer();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var navigation = this.props.navigation;\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 7\n        }\n      }, this.state.reportBugPopUp === true ? React.createElement(SafeAreaView, {\n        style: [stylesAlert.alertContainer, {\n          height: \"100%\"\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }\n      }, this.state.spinner ? React.createElement(View, {\n        style: {\n          flex: 1,\n          justifyContent: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 15\n        }\n      }, React.createElement(ActivityIndicator, {\n        size: \"large\",\n        color: \"#fff\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 17\n        }\n      })) : React.createElement(View, {\n        style: stylesAlert.alertBox,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 15\n        }\n      }, React.createElement(View, {\n        style: globalStyles.flexDirectionRow,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: stylesAlert.alertText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 19\n        }\n      }), React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return _this2.dismissPopUp();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 19\n        }\n      }, React.createElement(Text, {\n        style: stylesAlert.alertClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 21\n        }\n      }, \"X\"))), React.createElement(Text, {\n        style: {\n          textAlign: \"center\",\n          fontWeight: \"bold\",\n          fontSize: 20\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 17\n        }\n      }, \"Feedback\"), React.createElement(View, {\n        style: {\n          marginTop: 20\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 17\n        }\n      }, this.state.feedbackFieldError && React.createElement(Text, {\n        style: {\n          color: \"#d40b0b\",\n          padding: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 21\n        }\n      }, \"Field is required to submit\"), React.createElement(TextInput, {\n        placeholder: \"Type your feedback message\",\n        name: \"feedbackField\",\n        autoFocus: true,\n        onChangeText: function onChangeText(text) {\n          _this2.setState({\n            feedbackField: text,\n            feedbackFieldError: false\n          });\n        },\n        style: {\n          backgroundColor: \"#fff\",\n          padding: 10,\n          borderRadius: 20\n        },\n        autoCapitalize: \"none\",\n        onSubmitEditing: function onSubmitEditing() {\n          return _this2.submitBugReport();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 19\n        }\n      })), React.createElement(View, {\n        style: {\n          flexDirection: \"row\",\n          justifyContent: \"center\",\n          margin: 50\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 17\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: [stylesAlert.alertSubmitBox, {\n          marginRight: 5,\n          marginLeft: 5\n        }],\n        onPress: function onPress() {\n          return _this2.submitBugReport();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 19\n        }\n      }, React.createElement(Text, {\n        style: stylesAlert.alertSubmitBtn,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 21\n        }\n      }, \"Submit Report\")), React.createElement(TouchableOpacity, {\n        style: [stylesAlert.alertSubmitBox, {\n          marginRight: 5,\n          marginLeft: 5\n        }],\n        onPress: function onPress() {\n          return _this2.cancelBugReport();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 19\n        }\n      }, React.createElement(Text, {\n        style: stylesAlert.alertSubmitBtn,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 21\n        }\n      }, \"Cancel\"))))) : React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 11\n        }\n      }, this.state.localLogPopUp ? React.createElement(SafeAreaView, {\n        style: [stylesAlert.alertContainer, {\n          height: windowHeight\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 15\n        }\n      }, React.createElement(View, {\n        style: stylesAlert.alertBox,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        style: globalStyles.flexDirectionRow,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 19\n        }\n      }, React.createElement(Text, {\n        style: stylesAlert.alertText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 21\n        }\n      }), React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return _this2.dismissPopUp();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: stylesAlert.alertClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 23\n        }\n      }, \"X\"))), React.createElement(Text, {\n        style: {\n          textAlign: \"center\",\n          fontWeight: \"bold\",\n          fontSize: 20\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 19\n        }\n      }, \"Are you want to save changes ?\"), React.createElement(View, {\n        style: {\n          flexDirection: \"row\",\n          justifyContent: \"center\",\n          margin: 50\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 19\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: [stylesAlert.alertSubmitBox, {\n          marginRight: 5,\n          marginLeft: 5\n        }],\n        onPress: function onPress() {\n          return _this2.saveChanges();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: stylesAlert.alertSubmitBtn,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 23\n        }\n      }, \"Save Changes\")), React.createElement(TouchableOpacity, {\n        style: [stylesAlert.alertSubmitBox, {\n          marginRight: 5,\n          marginLeft: 5\n        }],\n        onPress: function onPress() {\n          return _this2.discardChanges();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: stylesAlert.alertSubmitBtn,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 23\n        }\n      }, \"Discard Changes\"))))) : React.createElement(SafeAreaView, {\n        style: [styles.drawerBackView, globalStyles.positionFixed],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 15\n        }\n      }, React.createElement(View, {\n        style: [styles.drawerMainView, {\n          position: \"relative\"\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        style: {\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n          paddingHorizontal: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 19\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: {\n          alignItems: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: \"#778fa5\",\n          fontFamily: fontFamily.font600,\n          fontSize: 14\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 23\n        }\n      }, \"Log Out\"), React.createElement(View, {\n        style: {\n          width: 30,\n          height: 30\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 23\n        }\n      }, React.createElement(Image, {\n        source: LogoutIcon,\n        style: {\n          width: \"100%\",\n          height: \"100%\"\n        },\n        resizeMode: \"contain\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 25\n        }\n      }))), React.createElement(View, {\n        style: {\n          alignItems: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 21\n        }\n      }, React.createElement(View, {\n        style: {\n          width: 80,\n          height: 80,\n          borderWidth: 2,\n          borderColor: \"#778fa5\",\n          borderRadius: 10,\n          justifyContent: \"center\",\n          alignItems: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 23\n        }\n      }, this.state.userInfo.current_tenant && React.createElement(Text, {\n        style: {\n          color: \"#778fa5\",\n          fontFamily: fontFamily.font700,\n          fontSize: 70,\n          textTransform: \"uppercase\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 27\n        }\n      }, this.state.userInfo.current_tenant[0])), React.createElement(Text, {\n        style: {\n          color: \"#778fa5\",\n          fontFamily: fontFamily.font400,\n          fontSize: 16\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 23\n        }\n      }, this.state.userInfo.current_tenant), React.createElement(Text, {\n        style: {\n          color: \"#778fa5\",\n          fontFamily: fontFamily.font700,\n          fontSize: 16\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 23\n        }\n      }, this.state.userInfo.username)), React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 21\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return _this2.dismissPopUp();\n        },\n        style: {\n          width: 30,\n          height: 30\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 23\n        }\n      }, React.createElement(Image, {\n        source: CloseDrawerIcon,\n        style: {\n          width: \"100%\",\n          height: \"100%\"\n        },\n        resizeMode: \"contain\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 426,\n          columnNumber: 25\n        }\n      })))), React.createElement(LinearGradient, {\n        start: {\n          x: 0,\n          y: 1\n        },\n        end: {\n          x: 0,\n          y: 0\n        },\n        locations: [0, 1],\n        colors: [\"#577189\", \"#526c84\"],\n        style: {\n          height: 1,\n          width: \"70%\",\n          backgroundColor: \"#778fa5\",\n          marginTop: 50\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 435,\n          columnNumber: 19\n        }\n      }), React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return _this2.redirect(\"ScanPack\");\n        },\n        style: {\n          marginTop: 50,\n          paddingHorizontal: 10,\n          flexDirection: \"row\",\n          alignItems: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 447,\n          columnNumber: 19\n        }\n      }, React.createElement(View, {\n        style: {\n          width: 30,\n          height: 30\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 456,\n          columnNumber: 21\n        }\n      }, React.createElement(Image, {\n        source: ScannerIcon,\n        style: {\n          width: \"100%\",\n          height: \"100%\"\n        },\n        resizeMode: \"contain\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 457,\n          columnNumber: 23\n        }\n      })), React.createElement(Text, {\n        style: {\n          color: \"#778fa5\",\n          fontFamily: fontFamily.font700,\n          fontSize: 16,\n          marginLeft: 5\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 463,\n          columnNumber: 21\n        }\n      }, \"Scan & Verify\")), React.createElement(TouchableOpacity, {\n        style: {\n          marginTop: 50,\n          paddingHorizontal: 10,\n          flexDirection: \"row\",\n          alignItems: \"center\"\n        },\n        onPress: function onPress() {\n          _this2.redirect(\"OrderList\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 474,\n          columnNumber: 19\n        }\n      }, React.createElement(Text, {\n        style: styles.textStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 485,\n          columnNumber: 21\n        }\n      }, \"Order List\")), React.createElement(LinearGradient, {\n        start: {\n          x: 0,\n          y: 1\n        },\n        end: {\n          x: 0,\n          y: 0\n        },\n        locations: [0, 1],\n        colors: [\"#577189\", \"#526c84\"],\n        style: {\n          height: 1,\n          width: \"70%\",\n          backgroundColor: \"#778fa5\",\n          marginTop: 100\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 487,\n          columnNumber: 19\n        }\n      }), React.createElement(TouchableOpacity, {\n        style: {\n          marginTop: 20,\n          paddingHorizontal: 10,\n          flexDirection: \"row\",\n          alignItems: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 499,\n          columnNumber: 19\n        }\n      }, React.createElement(View, {\n        style: {\n          width: 30,\n          height: 30\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 507,\n          columnNumber: 21\n        }\n      }, React.createElement(Image, {\n        source: SupportIcon,\n        style: {\n          width: \"100%\",\n          height: \"100%\"\n        },\n        resizeMode: \"contain\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 508,\n          columnNumber: 23\n        }\n      })), React.createElement(Text, {\n        style: {\n          color: \"#778fa5\",\n          fontFamily: fontFamily.font700,\n          fontSize: 16,\n          marginLeft: 5\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 514,\n          columnNumber: 21\n        }\n      }, \"Get Support\")), React.createElement(TouchableOpacity, {\n        onPress: this.reportBug.bind(this),\n        style: {\n          marginTop: 10,\n          paddingHorizontal: 10,\n          flexDirection: \"row\",\n          alignItems: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 525,\n          columnNumber: 19\n        }\n      }, React.createElement(View, {\n        style: {\n          width: 30,\n          height: 30\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 534,\n          columnNumber: 21\n        }\n      }, React.createElement(Image, {\n        source: BugIcon,\n        style: {\n          width: \"100%\",\n          height: \"100%\"\n        },\n        resizeMode: \"contain\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 535,\n          columnNumber: 23\n        }\n      })), React.createElement(Text, {\n        style: {\n          color: \"#778fa5\",\n          fontFamily: fontFamily.font700,\n          fontSize: 16,\n          marginLeft: 5\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 541,\n          columnNumber: 21\n        }\n      }, \"Report a bug\")), React.createElement(View, {\n        style: {\n          position: \"absolute\",\n          bottom: 20,\n          left: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 552,\n          columnNumber: 19\n        }\n      }, React.createElement(View, {\n        style: {\n          flexDirection: \"row\",\n          alignItems: \"flex-end\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 553,\n          columnNumber: 21\n        }\n      }, React.createElement(View, {\n        style: {\n          width: 100,\n          height: 100\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 556,\n          columnNumber: 23\n        }\n      }, React.createElement(Image, {\n        source: ExIcon,\n        style: {\n          width: \"100%\",\n          height: \"100%\"\n        },\n        resizeMode: \"contain\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 557,\n          columnNumber: 25\n        }\n      })), React.createElement(View, {\n        style: {\n          marginBottom: 10,\n          marginLeft: 5\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 563,\n          columnNumber: 23\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: \"#778fa5\",\n          fontFamily: fontFamily.font500,\n          fontSize: 14\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 564,\n          columnNumber: 25\n        }\n      }, \"GroovePacker EX\"), React.createElement(Text, {\n        style: {\n          color: \"#778fa5\",\n          fontFamily: fontFamily.font500,\n          fontSize: 14\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 573,\n          columnNumber: 25\n        }\n      }, \"Expo v \", Constants.expoVersion))))))));\n    }\n  }]);\n\n  return Drawer;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    localLog: state.updateAsync,\n    updateLog: state.saveLog,\n    updateReportLog: state.saveLog.updateReportLog\n  };\n};\n\nvar mapDispatchToProps = {\n  SetItem: SetItem,\n  GetItem: GetItem,\n  SubmitLog: SubmitLog,\n  ScanPackBugReport: ScanPackBugReport\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Drawer);","map":{"version":3,"sources":["C:/Users/DELL PC/Downloads/GroovePacker/src/components/drawer/drawer.js"],"names":["React","Component","styles","stylesAlert","globalStyles","connect","RootNavigation","SetItem","GetItem","SubmitLog","ScanPackBugReport","LogoutIcon","SupportIcon","CloseDrawerIcon","ExIcon","BugIcon","ScannerIcon","fontFamily","LinearGradient","Constants","windowHeight","Dimensions","get","height","localLogCheck","updateLogLocal","reportBug","reportLogSuccess","Drawer","props","updateDimensions","setState","windowWidth","window","innerWidth","getUserInfo","AsyncStorage","getItem","info","userInfo","JSON","parse","logout","clear","redirect","clearStore","dismissPopUp","localLogPopUp","reportBugPopUp","reset","closeDrawer","discardChanges","removeItem","saveChanges","convert","validation","feedback","state","feedbackField","trim","feedbackFieldError","submitBugReport","logging","LoggingArray","bugObject","logs","spinner","logTime","width","addEventListener","removeEventListener","page","localLog","retriveData","localData","tempLocal","tempConvert","length","updateLog","time","status","updateReportLog","navigation","alertContainer","flex","justifyContent","alertBox","flexDirectionRow","alertText","alertClose","textAlign","fontWeight","fontSize","marginTop","color","padding","text","backgroundColor","borderRadius","flexDirection","margin","alertSubmitBox","marginRight","marginLeft","alertSubmitBtn","cancelBugReport","drawerBackView","positionFixed","drawerMainView","position","paddingHorizontal","alignItems","font600","borderWidth","borderColor","current_tenant","font700","textTransform","font400","username","x","y","textStyle","bind","bottom","left","marginBottom","font500","expoVersion","mapStateToProps","updateAsync","saveLog","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  View,\r\n  SafeAreaView,\r\n  Text,\r\n  TextInput,\r\n  ActivityIndicator,\r\n  AsyncStorage,\r\n  Dimensions,\r\n  TouchableOpacity,\r\n  ScrollView,\r\n  Platform,\r\n  Image,\r\n} from \"react-native\";\r\nimport styles from \"../../style/drawer\";\r\nimport stylesAlert from \"../../style/scanpack\";\r\nimport globalStyles from \"../../style/global\";\r\nimport { connect } from \"react-redux\";\r\nimport * as RootNavigation from \"../root_navigation\";\r\nimport { SetItem, GetItem } from \"../../actions/updateAsyncAction\";\r\nimport { SubmitLog, ScanPackBugReport } from \"../../actions/saveLogAction\";\r\nimport LogoutIcon from \"../../../assets/logout_icon.png\";\r\nimport SupportIcon from \"../../../assets/support_icon.png\";\r\nimport CloseDrawerIcon from \"../../../assets/close_drawer.png\";\r\nimport ExIcon from \"../../../assets/G_Ex_icon.png\";\r\nimport BugIcon from \"../../../assets/bug_icon.png\";\r\nimport ScannerIcon from \"../../../assets/scanner_icon.png\";\r\nimport { fontFamily } from \"../../helpers/fontFamily\";\r\nimport { LinearGradient } from \"expo-linear-gradient\";\r\nimport Constants from \"expo-constants\";\r\n\r\nconst windowHeight = Dimensions.get(\"window\").height;\r\n\r\nlet localLogCheck = false;\r\nlet updateLogLocal = false;\r\nlet reportBug = false;\r\nlet reportLogSuccess = false;\r\n\r\nclass Drawer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      userInfo: \"\",\r\n      localLogPopUp: false,\r\n      reportBugPopUp: false,\r\n      logTime: \"\",\r\n      feedbackField: \"\",\r\n      feedbackFieldError: false,\r\n      spinner: false,\r\n      windowWidth: Dimensions.get(\"window\").width,\r\n    };\r\n  }\r\n  updateDimensions = () => {\r\n    this.setState({\r\n      windowWidth: window.innerWidth,\r\n    });\r\n  };\r\n  componentDidMount() {\r\n    window.addEventListener(\"resize\", this.updateDimensions);\r\n    this.getUserInfo();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"resize\", this.updateDimensions);\r\n  }\r\n\r\n  getUserInfo = async () => {\r\n    let info = await AsyncStorage.getItem(\"userInfo\");\r\n    if (info) {\r\n      let userInfo = info && JSON.parse(info);\r\n      this.setState({ userInfo });\r\n    }\r\n  };\r\n\r\n  redirect(page) {\r\n    RootNavigation.reset(page);\r\n    this.props.closeDrawer();\r\n  }\r\n\r\n  logout = async () => {\r\n    try {\r\n      // await AsyncStorage.removeItem(\"access_token\")\r\n      await AsyncStorage.clear();\r\n      this.redirect(\"SignIn\");\r\n    } catch (e) {}\r\n  };\r\n\r\n  componentDidUpdate() {\r\n    if (\r\n      localLogCheck &&\r\n      this.props &&\r\n      this.props.localLog &&\r\n      this.props.localLog.retriveData &&\r\n      this.props.localLog.retriveData !== this.state.localData\r\n    ) {\r\n      localLogCheck = false;\r\n      let tempLocal = this.props.localLog && this.props.localLog.retriveData;\r\n      if (tempLocal !== \" \") {\r\n        let tempConvert = tempLocal !== \" \" && JSON.parse(tempLocal);\r\n        if (tempConvert && tempConvert.length > 0) {\r\n          this.setState({ localLogPopUp: true });\r\n        }\r\n        this.setState({ localData: tempLocal });\r\n      }\r\n      // else{\r\n      //     this.discardChanges()\r\n      // }\r\n    } else {\r\n      if (\r\n        localLogCheck &&\r\n        this.props &&\r\n        this.props.localLog &&\r\n        this.props.localLog.retriveData === false\r\n      ) {\r\n        localLogCheck = false;\r\n        this.discardChanges();\r\n      }\r\n    }\r\n\r\n    if (updateLogLocal && this.props.updateLog.time !== this.state.logTime) {\r\n      if (\r\n        this.props.updateLog &&\r\n        this.props.updateLog.logs &&\r\n        this.props.updateLog.logs.status === \"OK\" &&\r\n        this.props.updateLog.updateLog &&\r\n        this.props.updateLog.time\r\n      ) {\r\n        updateLogLocal = false;\r\n        this.setState({ logTime: this.props.updateLog.time });\r\n        RootNavigation.reset(\"ScanPack\", \"refreshButton\");\r\n        this.props.closeDrawer();\r\n      }\r\n    }\r\n\r\n    if (this.props && this.props.updateReportLog && reportLogSuccess) {\r\n      reportLogSuccess = false;\r\n      this.setState({\r\n        reportBugPopUp: false,\r\n        feedbackField: \"\",\r\n        spinner: false,\r\n      });\r\n      RootNavigation.reset(\"ScanPack\", \"refreshButton\");\r\n      this.props.closeDrawer();\r\n    }\r\n  }\r\n\r\n  clearStore = () => {\r\n    localLogCheck = true;\r\n    this.props.GetItem(\"logsArray\");\r\n  };\r\n\r\n  dismissPopUp = () => {\r\n    this.setState({ localLogPopUp: false, reportBugPopUp: false });\r\n    RootNavigation.reset(\"ScanPack\");\r\n    this.props.closeDrawer();\r\n  };\r\n\r\n  discardChanges = async () => {\r\n    await AsyncStorage.removeItem(\"logsArray\");\r\n    await AsyncStorage.removeItem(\"storeOrder\");\r\n    // await AsyncStorage.multiRemove([\"logsArray\"] , [\"storeOrder\"])\r\n    RootNavigation.reset(\"ScanPack\", \"refreshButton\");\r\n    this.props.closeDrawer();\r\n  };\r\n\r\n  saveChanges = async () => {\r\n    updateLogLocal = true;\r\n    localLogCheck = true;\r\n    let getItem = await AsyncStorage.getItem(\"logsArray\");\r\n    let convert = getItem && JSON.parse(getItem);\r\n    this.props.SubmitLog(convert);\r\n  };\r\n\r\n  reportBug() {\r\n    this.setState({ reportBugPopUp: true });\r\n  }\r\n\r\n  validation = () => {\r\n    let feedback =\r\n      this.state.feedbackField && this.state.feedbackField.trim(\" \");\r\n    if (feedback === \"\") {\r\n      this.setState({ feedbackFieldError: true });\r\n    } else {\r\n      return true;\r\n    }\r\n  };\r\n\r\n  submitBugReport = async () => {\r\n    let logging = await AsyncStorage.getItem(\"Logging\");\r\n    let LoggingArray = JSON.parse(logging);\r\n    let bugObject = {\r\n      feedback: this.state.feedbackField,\r\n      logs: LoggingArray,\r\n    };\r\n    if (this.validation() === true) {\r\n      this.setState({ spinner: true });\r\n      this.props.ScanPackBugReport(bugObject);\r\n      reportLogSuccess = true;\r\n    }\r\n  };\r\n\r\n  cancelBugReport() {\r\n    this.props.closeDrawer();\r\n  }\r\n\r\n  render() {\r\n    const { navigation } = this.props;\r\n    return (\r\n      <React.Fragment>\r\n        {this.state.reportBugPopUp === true ? (\r\n          <SafeAreaView\r\n            style={[stylesAlert.alertContainer, { height: \"100%\" }]}\r\n          >\r\n            {this.state.spinner ? (\r\n              <View style={{ flex: 1, justifyContent: \"center\" }}>\r\n                <ActivityIndicator size=\"large\" color=\"#fff\" />\r\n              </View>\r\n            ) : (\r\n              <View style={stylesAlert.alertBox}>\r\n                <View style={globalStyles.flexDirectionRow}>\r\n                  <Text style={stylesAlert.alertText}></Text>\r\n                  <TouchableOpacity onPress={() => this.dismissPopUp()}>\r\n                    <Text style={stylesAlert.alertClose}>X</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n                <Text\r\n                  style={{\r\n                    textAlign: \"center\",\r\n                    fontWeight: \"bold\",\r\n                    fontSize: 20,\r\n                  }}\r\n                >\r\n                  Feedback\r\n                </Text>\r\n                <View style={{ marginTop: 20 }}>\r\n                  {this.state.feedbackFieldError && (\r\n                    <Text style={{ color: \"#d40b0b\", padding: 10 }}>\r\n                      Field is required to submit\r\n                    </Text>\r\n                  )}\r\n                  <TextInput\r\n                    placeholder=\"Type your feedback message\"\r\n                    name=\"feedbackField\"\r\n                    autoFocus={true}\r\n                    onChangeText={(text) => {\r\n                      this.setState({\r\n                        feedbackField: text,\r\n                        feedbackFieldError: false,\r\n                      });\r\n                    }}\r\n                    style={{\r\n                      backgroundColor: \"#fff\",\r\n                      padding: 10,\r\n                      borderRadius: 20,\r\n                    }}\r\n                    autoCapitalize=\"none\"\r\n                    onSubmitEditing={() => this.submitBugReport()}\r\n                  />\r\n                </View>\r\n                <View\r\n                  style={{\r\n                    flexDirection: \"row\",\r\n                    justifyContent: \"center\",\r\n                    margin: 50,\r\n                  }}\r\n                >\r\n                  <TouchableOpacity\r\n                    style={[\r\n                      stylesAlert.alertSubmitBox,\r\n                      { marginRight: 5, marginLeft: 5 },\r\n                    ]}\r\n                    onPress={() => this.submitBugReport()}\r\n                  >\r\n                    <Text style={stylesAlert.alertSubmitBtn}>\r\n                      Submit Report\r\n                    </Text>\r\n                  </TouchableOpacity>\r\n\r\n                  <TouchableOpacity\r\n                    style={[\r\n                      stylesAlert.alertSubmitBox,\r\n                      { marginRight: 5, marginLeft: 5 },\r\n                    ]}\r\n                    onPress={() => this.cancelBugReport()}\r\n                  >\r\n                    <Text style={stylesAlert.alertSubmitBtn}>Cancel</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            )}\r\n          </SafeAreaView>\r\n        ) : (\r\n          <React.Fragment>\r\n            {this.state.localLogPopUp ? (\r\n              <SafeAreaView\r\n                style={[stylesAlert.alertContainer, { height: windowHeight }]}\r\n              >\r\n                <View style={stylesAlert.alertBox}>\r\n                  <View style={globalStyles.flexDirectionRow}>\r\n                    <Text style={stylesAlert.alertText}></Text>\r\n                    <TouchableOpacity onPress={() => this.dismissPopUp()}>\r\n                      <Text style={stylesAlert.alertClose}>X</Text>\r\n                    </TouchableOpacity>\r\n                  </View>\r\n                  <Text\r\n                    style={{\r\n                      textAlign: \"center\",\r\n                      fontWeight: \"bold\",\r\n                      fontSize: 20,\r\n                    }}\r\n                  >\r\n                    Are you want to save changes ?\r\n                  </Text>\r\n                  <View\r\n                    style={{\r\n                      flexDirection: \"row\",\r\n                      justifyContent: \"center\",\r\n                      margin: 50,\r\n                    }}\r\n                  >\r\n                    <TouchableOpacity\r\n                      style={[\r\n                        stylesAlert.alertSubmitBox,\r\n                        { marginRight: 5, marginLeft: 5 },\r\n                      ]}\r\n                      onPress={() => this.saveChanges()}\r\n                    >\r\n                      <Text style={stylesAlert.alertSubmitBtn}>\r\n                        Save Changes\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n\r\n                    <TouchableOpacity\r\n                      style={[\r\n                        stylesAlert.alertSubmitBox,\r\n                        { marginRight: 5, marginLeft: 5 },\r\n                      ]}\r\n                      onPress={() => this.discardChanges()}\r\n                    >\r\n                      <Text style={stylesAlert.alertSubmitBtn}>\r\n                        Discard Changes\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n                  </View>\r\n                </View>\r\n              </SafeAreaView>\r\n            ) : (\r\n              <SafeAreaView\r\n                style={[styles.drawerBackView, globalStyles.positionFixed]}\r\n              >\r\n                <View style={[styles.drawerMainView, { position: \"relative\" }]}>\r\n                  <View\r\n                    style={{\r\n                      flexDirection: \"row\",\r\n                      justifyContent: \"space-between\",\r\n                      paddingHorizontal: 10,\r\n                    }}\r\n                  >\r\n                    <TouchableOpacity style={{ alignItems: \"center\" }}>\r\n                      <Text\r\n                        style={{\r\n                          color: \"#778fa5\",\r\n                          fontFamily: fontFamily.font600,\r\n                          fontSize: 14,\r\n                        }}\r\n                      >\r\n                        Log Out\r\n                      </Text>\r\n                      <View style={{ width: 30, height: 30 }}>\r\n                        <Image\r\n                          source={LogoutIcon}\r\n                          style={{ width: \"100%\", height: \"100%\" }}\r\n                          resizeMode=\"contain\"\r\n                        />\r\n                      </View>\r\n                    </TouchableOpacity>\r\n                    <View style={{ alignItems: \"center\" }}>\r\n                      <View\r\n                        style={{\r\n                          width: 80,\r\n                          height: 80,\r\n                          borderWidth: 2,\r\n                          borderColor: \"#778fa5\",\r\n                          borderRadius: 10,\r\n                          justifyContent: \"center\",\r\n                          alignItems: \"center\",\r\n                        }}\r\n                      >\r\n                        {this.state.userInfo.current_tenant && (\r\n                          <Text\r\n                            style={{\r\n                              color: \"#778fa5\",\r\n                              fontFamily: fontFamily.font700,\r\n                              fontSize: 70,\r\n                              textTransform: \"uppercase\",\r\n                            }}\r\n                          >\r\n                            {this.state.userInfo.current_tenant[0]}\r\n                          </Text>\r\n                        )}\r\n                      </View>\r\n                      <Text\r\n                        style={{\r\n                          color: \"#778fa5\",\r\n                          fontFamily: fontFamily.font400,\r\n                          fontSize: 16,\r\n                        }}\r\n                      >\r\n                        {this.state.userInfo.current_tenant}\r\n                      </Text>\r\n                      <Text\r\n                        style={{\r\n                          color: \"#778fa5\",\r\n                          fontFamily: fontFamily.font700,\r\n                          fontSize: 16,\r\n                        }}\r\n                      >\r\n                        {this.state.userInfo.username}\r\n                      </Text>\r\n                    </View>\r\n                    <View>\r\n                      <TouchableOpacity\r\n                        onPress={() => this.dismissPopUp()}\r\n                        style={{ width: 30, height: 30 }}\r\n                      >\r\n                        <Image\r\n                          source={CloseDrawerIcon}\r\n                          style={{ width: \"100%\", height: \"100%\" }}\r\n                          resizeMode=\"contain\"\r\n                        />\r\n                      </TouchableOpacity>\r\n                    </View>\r\n                    {/* brand */}\r\n                  </View>\r\n                  <LinearGradient\r\n                    start={{ x: 0, y: 1 }}\r\n                    end={{ x: 0, y: 0 }}\r\n                    locations={[0, 1]}\r\n                    colors={[\"#577189\", \"#526c84\"]}\r\n                    style={{\r\n                      height: 1,\r\n                      width: \"70%\",\r\n                      backgroundColor: \"#778fa5\",\r\n                      marginTop: 50,\r\n                    }}\r\n                  />\r\n                  <TouchableOpacity\r\n                    onPress={() => this.redirect(\"ScanPack\")}\r\n                    style={{\r\n                      marginTop: 50,\r\n                      paddingHorizontal: 10,\r\n                      flexDirection: \"row\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <View style={{ width: 30, height: 30 }}>\r\n                      <Image\r\n                        source={ScannerIcon}\r\n                        style={{ width: \"100%\", height: \"100%\" }}\r\n                        resizeMode=\"contain\"\r\n                      />\r\n                    </View>\r\n                    <Text\r\n                      style={{\r\n                        color: \"#778fa5\",\r\n                        fontFamily: fontFamily.font700,\r\n                        fontSize: 16,\r\n                        marginLeft: 5,\r\n                      }}\r\n                    >\r\n                      Scan & Verify\r\n                    </Text>\r\n                  </TouchableOpacity>\r\n                  <TouchableOpacity\r\n                    style={{\r\n                      marginTop: 50,\r\n                      paddingHorizontal: 10,\r\n                      flexDirection: \"row\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                    onPress={() => {\r\n                      this.redirect(\"OrderList\");\r\n                    }}\r\n                  >\r\n                    <Text style={styles.textStyle}>Order List</Text>\r\n                  </TouchableOpacity>\r\n                  <LinearGradient\r\n                    start={{ x: 0, y: 1 }}\r\n                    end={{ x: 0, y: 0 }}\r\n                    locations={[0, 1]}\r\n                    colors={[\"#577189\", \"#526c84\"]}\r\n                    style={{\r\n                      height: 1,\r\n                      width: \"70%\",\r\n                      backgroundColor: \"#778fa5\",\r\n                      marginTop: 100,\r\n                    }}\r\n                  />\r\n                  <TouchableOpacity\r\n                    style={{\r\n                      marginTop: 20,\r\n                      paddingHorizontal: 10,\r\n                      flexDirection: \"row\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <View style={{ width: 30, height: 30 }}>\r\n                      <Image\r\n                        source={SupportIcon}\r\n                        style={{ width: \"100%\", height: \"100%\" }}\r\n                        resizeMode=\"contain\"\r\n                      />\r\n                    </View>\r\n                    <Text\r\n                      style={{\r\n                        color: \"#778fa5\",\r\n                        fontFamily: fontFamily.font700,\r\n                        fontSize: 16,\r\n                        marginLeft: 5,\r\n                      }}\r\n                    >\r\n                      Get Support\r\n                    </Text>\r\n                  </TouchableOpacity>\r\n                  <TouchableOpacity\r\n                    onPress={this.reportBug.bind(this)}\r\n                    style={{\r\n                      marginTop: 10,\r\n                      paddingHorizontal: 10,\r\n                      flexDirection: \"row\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <View style={{ width: 30, height: 30 }}>\r\n                      <Image\r\n                        source={BugIcon}\r\n                        style={{ width: \"100%\", height: \"100%\" }}\r\n                        resizeMode=\"contain\"\r\n                      />\r\n                    </View>\r\n                    <Text\r\n                      style={{\r\n                        color: \"#778fa5\",\r\n                        fontFamily: fontFamily.font700,\r\n                        fontSize: 16,\r\n                        marginLeft: 5,\r\n                      }}\r\n                    >\r\n                      Report a bug\r\n                    </Text>\r\n                  </TouchableOpacity>\r\n                  <View style={{ position: \"absolute\", bottom: 20, left: 10 }}>\r\n                    <View\r\n                      style={{ flexDirection: \"row\", alignItems: \"flex-end\" }}\r\n                    >\r\n                      <View style={{ width: 100, height: 100 }}>\r\n                        <Image\r\n                          source={ExIcon}\r\n                          style={{ width: \"100%\", height: \"100%\" }}\r\n                          resizeMode=\"contain\"\r\n                        />\r\n                      </View>\r\n                      <View style={{ marginBottom: 10, marginLeft: 5 }}>\r\n                        <Text\r\n                          style={{\r\n                            color: \"#778fa5\",\r\n                            fontFamily: fontFamily.font500,\r\n                            fontSize: 14,\r\n                          }}\r\n                        >\r\n                          GroovePacker EX\r\n                        </Text>\r\n                        <Text\r\n                          style={{\r\n                            color: \"#778fa5\",\r\n                            fontFamily: fontFamily.font500,\r\n                            fontSize: 14,\r\n                          }}\r\n                        >\r\n                          Expo v {Constants.expoVersion}\r\n                        </Text>\r\n                      </View>\r\n                    </View>\r\n                  </View>\r\n                </View>\r\n              </SafeAreaView>\r\n            )}\r\n          </React.Fragment>\r\n        )}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    localLog: state.updateAsync,\r\n    updateLog: state.saveLog,\r\n    updateReportLog: state.saveLog.updateReportLog,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  SetItem,\r\n  GetItem,\r\n  SubmitLog,\r\n  ScanPackBugReport,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Drawer);\r\n"]},"metadata":{},"sourceType":"module"}
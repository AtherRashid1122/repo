{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\DELL PC\\\\Downloads\\\\GroovePacker\\\\src\\\\components\\\\main.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport AsyncStorage from \"react-native-web/dist/exports/AsyncStorage\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport SignIn from \"./login/signin\";\nimport OrderList from \"./orders/orderlist\";\nimport OrderDetail from \"./orders/orderdetail\";\nimport ItemsDetail from \"./orders/items_detail\";\nimport AddItemToOrder from \"./orders/add_item_to_order\";\nimport ScanPack from \"./scanpack/scanpack\";\nimport ScanPackItem from \"./scanpack/scanpack_item\";\nimport ProductEdit from \"./scanpack/product_edit\";\nimport ProductDetail from \"./products/product_detail\";\nimport PutWall from \"./putwall/put_wall\";\nimport Drawer from \"./drawer/drawer\";\nimport SyncButton from \"./actionButton/sync\";\nimport toggle from \"../../assets/toggle1.png\";\nimport { navigationRef } from \"./root_navigation\";\nimport Close from \"../../assets/closeicon.png\";\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { fontFamily } from \"../helpers/fontFamily\";\nimport * as RootNavigation from \"./root_navigation\";\nvar Stack = createStackNavigator();\nvar name = \"Next Item\";\nvar windowWidth = Dimensions.get('window').width;\nvar windowHeight = Dimensions.get('window').height;\nexport default function Main(_ref) {\n  var navigation = _ref.navigation;\n  console.log(\"Main\", navigation);\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      token = _useState2[0],\n      setToken = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      show = _useState4[0],\n      setShow = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      userInfo = _useState6[0],\n      setUserInfo = _useState6[1];\n\n  var _useState7 = useState(true),\n      _useState8 = _slicedToArray(_useState7, 2),\n      navShow = _useState8[0],\n      setNavShow = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      openDrawer = _useState10[0],\n      handelDrawer = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      restartFlag = _useState12[0],\n      restartHandel = _useState12[1];\n\n  var _useState13 = useState(false),\n      _useState14 = _slicedToArray(_useState13, 2),\n      alertShow = _useState14[0],\n      alertShowHandle = _useState14[1];\n\n  var restartButtonRef = React.createRef();\n  useEffect(function () {\n    var getUserInfo = function getUserInfo() {\n      var info, userInfo;\n      return _regeneratorRuntime.async(function getUserInfo$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"userInfo\"));\n\n            case 2:\n              info = _context.sent;\n              userInfo = info && JSON.parse(info);\n              setUserInfo(userInfo);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    getUserInfo();\n  }, []);\n  AsyncStorage.getItem('access_token').then(function (keyValue) {\n    setToken(keyValue);\n    setShow(true);\n    return keyValue;\n  });\n\n  function DrawerButton() {\n    return React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        handelDrawer(openDrawer = true);\n      },\n      style: {\n        flex: 1,\n        marginLeft: 20,\n        justifyContent: \"center\",\n        width: \"100%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }\n    }, React.createElement(Image, {\n      style: {\n        width: 39,\n        height: 31,\n        color: \"#fff\"\n      },\n      source: toggle ? toggle : \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  function closeDrawer() {\n    handelDrawer(openDrawer = false);\n  }\n\n  function navBarShow(position) {\n    setNavShow(navShow = position);\n  }\n\n  function restartButton() {\n    restartHandel(restartFlag = !restartFlag);\n  }\n\n  function restartButtonReset() {\n    restartHandel(restartFlag = false);\n  }\n\n  function nav() {\n    navigation.canGoBack;\n  }\n\n  function changeHeading(num) {\n    if (num === 0) {\n      name = \"Scanned Item\";\n    }\n\n    if (num === 1) {\n      name = \"Next Item\";\n    }\n\n    if (num === 2) {\n      name = \"Unscanned Item\";\n    }\n  }\n\n  function _syncButtonHandle() {\n    alertShowHandle(true);\n  }\n\n  return show && React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }\n  }, React.createElement(NavigationContainer, {\n    ref: navigationRef,\n    style: {\n      zIndex: -1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }\n  }, React.createElement(Stack.Navigator, {\n    initialRouteName: token ? \"ScanPack\" : \"SignIn\",\n    style: {\n      zIndex: -1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 11\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"SignIn\",\n    component: SignIn,\n    options: {\n      title: 'Sign In',\n      headerStyle: {\n        backgroundColor: '#336599'\n      },\n      headerTintColor: '#fff',\n      headerTitleStyle: {\n        fontWeight: 'bold',\n        textAlign: \"center\",\n        fontSize: 22\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"OrderList\",\n    component: OrderList,\n    path: \"/123\",\n    options: {\n      title: 'List',\n      headerStyle: {\n        backgroundColor: '#336599'\n      },\n      headerTintColor: '#fff',\n      headerTitleStyle: {\n        fontWeight: 'bold',\n        textAlign: \"center\",\n        fontSize: 22\n      },\n      headerLeft: null,\n      headerLeft: function headerLeft() {\n        return React.createElement(DrawerButton, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 36\n          }\n        });\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"OrderDetail\",\n    component: OrderDetail,\n    options: {\n      title: 'Order Detail',\n      headerStyle: {\n        backgroundColor: '#336599'\n      },\n      headerTintColor: '#fff',\n      headerTitleStyle: {\n        fontWeight: 'bold',\n        textAlign: \"center\",\n        fontSize: 22\n      },\n      headerLeft: null\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 13\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"ScanPack\",\n    component: ScanPack,\n    options: {\n      title: 'ScanPack',\n      headerStyle: {\n        backgroundColor: '#336599'\n      },\n      headerTintColor: '#fff',\n      headerTitleStyle: {\n        fontWeight: 'bold',\n        textAlign: \"center\",\n        fontSize: 22\n      },\n      headerLeft: null,\n      headerLeft: function headerLeft() {\n        return React.createElement(DrawerButton, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 36\n          }\n        });\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 13\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"ScanPackItem\",\n    component: ScanPackItem,\n    initialParams: {\n      item: navBarShow,\n      restart: restartFlag,\n      restartButton: restartButton,\n      changeHeading: changeHeading\n    },\n    options: {\n      title: alertShow === false ? React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return RootNavigation.navigate(\"ScanPack\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 46\n        }\n      }, React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 116\n        }\n      }, \"Scan & Verify\")) : React.createElement(LinearGradient, {\n        colors: ['#5bbc31', '#479523', '#3f851d'],\n        style: {\n          position: \"fixed\",\n          height: 40,\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          top: 0,\n          left: 0,\n          right: 0,\n          marginLeft: \"auto\",\n          marginRight: \"auto\",\n          padding: 4,\n          marginTop: 12,\n          shadowOffset: {\n            width: 0,\n            height: 0\n          },\n          shadowRadius: 3.84,\n          shadowColor: '#000',\n          shadowOpacity: 0.9,\n          zIndex: 9,\n          width: \"80%\",\n          borderRadius: 5\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 19\n        }\n      }, React.createElement(Text, {\n        style: windowWidth > 1024 ? {\n          fontSize: 16\n        } : {\n          fontSize: 13\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 21\n        }\n      }, \"Changes Successfully Saved\"), React.createElement(TouchableOpacity, {\n        onClick: function onClick() {\n          return alertShowHandle(false);\n        },\n        style: {\n          position: \"absolute\",\n          right: 11\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 21\n        }\n      }, React.createElement(Image, {\n        style: windowWidth > 1024 ? {\n          width: 22,\n          height: 22\n        } : {\n          width: 18,\n          height: 18\n        },\n        source: Close ? Close : \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 23\n        }\n      }))),\n      headerTitleStyle: {\n        fontFamily: fontFamily.font700,\n        color: \"#fff\",\n        textAlign: \"center\",\n        fontSize: 22\n      },\n      headerBackground: function headerBackground() {\n        return React.createElement(LinearGradient, {\n          start: {\n            x: 0,\n            y: 1\n          },\n          end: {\n            x: 0,\n            y: 0\n          },\n          colors: [\"#142130\", \"#304454\"],\n          style: {\n            backgroundColor: \"#707070\",\n            width: \"100%\",\n            height: \"100%\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 19\n          }\n        });\n      },\n      headerLeft: function headerLeft() {\n        return React.createElement(View, {\n          style: {\n            flexDirection: \"row\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 19\n          }\n        }, React.createElement(DrawerButton, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 21\n          }\n        }), windowWidth >= 900 && React.createElement(View, {\n          style: {\n            marginLeft: 10\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 23\n          }\n        }, React.createElement(Text, {\n          style: {\n            fontFamily: fontFamily.font500,\n            color: \"#fff\",\n            fontSize: 16,\n            textTransform: \"uppercase\",\n            lineHeight: 15,\n            marginTop: 4\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 25\n          }\n        }, userInfo.name), React.createElement(Text, {\n          style: {\n            fontFamily: fontFamily.font700,\n            color: \"#fff\",\n            fontSize: 16,\n            textTransform: \"uppercase\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 25\n          }\n        }, userInfo.current_tenant)));\n      },\n      headerRight: function headerRight() {\n        return React.createElement(SyncButton, {\n          syncButtonHandle: function syncButtonHandle() {\n            return _syncButtonHandle();\n          },\n          alertShow: alertShow,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 37\n          }\n        });\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 13\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"ProductEdit\",\n    component: ProductEdit,\n    options: {\n      title: 'Edit Product',\n      headerStyle: {\n        backgroundColor: '#336599'\n      },\n      headerTintColor: '#fff',\n      headerTitleStyle: {\n        fontWeight: 'bold',\n        textAlign: \"center\",\n        fontSize: 22\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 13\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"ProductDetail\",\n    component: ProductDetail,\n    options: {\n      title: 'Product Detail',\n      headerStyle: {\n        backgroundColor: '#336599'\n      },\n      headerTintColor: '#fff',\n      headerTitleStyle: {\n        fontWeight: 'bold',\n        textAlign: \"center\",\n        fontSize: 22\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 13\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"ItemsDetail\",\n    component: ItemsDetail,\n    options: {\n      title: 'Items Detail',\n      headerStyle: {\n        backgroundColor: '#336599'\n      },\n      headerTintColor: '#fff',\n      headerTitleStyle: {\n        fontWeight: 'bold',\n        textAlign: \"center\",\n        fontSize: 22\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 13\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"PutWall\",\n    component: PutWall,\n    options: {\n      headerStyle: {\n        backgroundColor: '#336599'\n      },\n      headerTintColor: '#fff',\n      headerTitleStyle: {\n        fontWeight: 'bold',\n        textAlign: \"center\",\n        fontSize: 22\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 13\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Select Product to add to Order\",\n    component: AddItemToOrder,\n    options: {\n      headerStyle: {\n        backgroundColor: '#336599'\n      },\n      headerTintColor: '#fff',\n      headerTitleStyle: {\n        fontWeight: 'bold',\n        textAlign: \"center\",\n        fontSize: 22\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 13\n    }\n  }))), openDrawer && React.createElement(Drawer, {\n    closeDrawer: closeDrawer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 402,\n      columnNumber: 11\n    }\n  }));\n}","map":{"version":3,"sources":["C:/Users/DELL PC/Downloads/GroovePacker/src/components/main.js"],"names":["React","useEffect","useState","NavigationContainer","createStackNavigator","SignIn","OrderList","OrderDetail","ItemsDetail","AddItemToOrder","ScanPack","ScanPackItem","ProductEdit","ProductDetail","PutWall","Drawer","SyncButton","toggle","navigationRef","Close","LinearGradient","fontFamily","RootNavigation","Stack","name","windowWidth","Dimensions","get","width","windowHeight","height","Main","navigation","console","log","token","setToken","show","setShow","userInfo","setUserInfo","navShow","setNavShow","openDrawer","handelDrawer","restartFlag","restartHandel","alertShow","alertShowHandle","restartButtonRef","createRef","getUserInfo","AsyncStorage","getItem","info","JSON","parse","then","keyValue","DrawerButton","flex","marginLeft","justifyContent","color","closeDrawer","navBarShow","position","restartButton","restartButtonReset","nav","canGoBack","changeHeading","num","syncButtonHandle","zIndex","title","headerStyle","backgroundColor","headerTintColor","headerTitleStyle","fontWeight","textAlign","fontSize","headerLeft","item","restart","navigate","display","alignItems","top","left","right","marginRight","padding","marginTop","shadowOffset","shadowRadius","shadowColor","shadowOpacity","borderRadius","font700","headerBackground","x","y","flexDirection","font500","textTransform","lineHeight","current_tenant","headerRight"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Text, View, Dimensions, Image, TouchableOpacity, AsyncStorage } from 'react-native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport SignIn from './login/signin';\nimport OrderList from './orders/orderlist';\nimport OrderDetail from './orders/orderdetail';\nimport ItemsDetail from './orders/items_detail';\nimport AddItemToOrder from './orders/add_item_to_order';\nimport ScanPack from './scanpack/scanpack';\nimport ScanPackItem from './scanpack/scanpack_item';\nimport ProductEdit from './scanpack/product_edit';\nimport ProductDetail from \"./products/product_detail\";\nimport PutWall from \"./putwall/put_wall\";\nimport Drawer from \"./drawer/drawer\";\nimport SyncButton from \"./actionButton/sync\";\nimport toggle from \"../../assets/toggle1.png\"\nimport { navigationRef } from './root_navigation';\nimport Close from \"../../assets/closeicon.png\";\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { fontFamily } from '../helpers/fontFamily';\nimport * as RootNavigation from './root_navigation';\n\nconst Stack = createStackNavigator();\nlet name = \"Next Item\"\nconst windowWidth = Dimensions.get('window').width;\nconst windowHeight = Dimensions.get('window').height;\n\n// const prefix = Linking.makeUrl('https://23a7badd6881.ngrok.io')\n\nexport default function Main({ navigation }) {\n  console.log(\"Main\",navigation)\n  const [token, setToken] = useState(\"\");\n  const [show, setShow] = useState(false)\n  const [userInfo, setUserInfo] = useState(null)\n  let [navShow, setNavShow] = useState(true)\n  let [openDrawer, handelDrawer] = useState(false)\n  let [restartFlag, restartHandel] = useState(false)\n  let [alertShow, alertShowHandle] = useState(false)\n  let restartButtonRef = React.createRef();\n\n  useEffect(() => {\n    /*RETRIVE THE USER INFO FROM LOCAL*/\n    const getUserInfo = async () => {\n      let info = await AsyncStorage.getItem(\"userInfo\")\n      let userInfo = info && JSON.parse(info)\n      setUserInfo(userInfo)\n    }\n\n    getUserInfo()\n  }, [])\n\n  AsyncStorage.getItem('access_token').then((keyValue) => {\n    setToken(keyValue)\n    setShow(true)\n    return keyValue\n  });\n  // const linking = {\n  //   prefixes: [prefix],\n  //    config: {\n  //     screens: {\n  //       OrderList: \"/OrderList\",\n  //       OrderDetail: \"/OrderDetail\",\n  //       ScanPack: \"/ScanPack\",\n  //       ScanPackItem: \"/ScanPackItem\",\n  //       ProductEdit: \"/ProductEdit\",\n  //       ProductDetail: \"/ProductDetail\",\n  //       ItemsDetail: \"/ItemsDetail\",\n  //       // PutWall: \"\",\n  //     }\n  //   }\n  // };\n\n\n\n  function DrawerButton() {\n    return (\n      <TouchableOpacity onPress={() => { handelDrawer(openDrawer = true) }}\n        style={{ flex: 1, marginLeft: 20, justifyContent: \"center\", width: \"100%\" }}\n      >\n        <Image\n          style={{ width: 39, height: 31, color: \"#fff\" }}\n          source={toggle ? toggle : \"\"}\n        />\n      </TouchableOpacity>\n    );\n  }\n\n  function closeDrawer() {\n    handelDrawer(openDrawer = false)\n  }\n\n  function navBarShow(position) {\n    setNavShow(navShow = position)\n  }\n\n  function restartButton() {\n    restartHandel(restartFlag = !restartFlag)\n  }\n\n  function restartButtonReset() {\n    restartHandel(restartFlag = false)\n  }\n\n  function nav() {\n    navigation.canGoBack\n  }\n\n  function changeHeading(num) {\n    if (num === 0) {\n      name = \"Scanned Item\"\n    }\n    if (num === 1) {\n      name = \"Next Item\"\n    }\n    if (num === 2) {\n      name = \"Unscanned Item\"\n    }\n  }\n\n  function syncButtonHandle() {\n    alertShowHandle(true)\n    // setTimeout(() => alertShowHandle(false) , 3000);\n  }\n\n  return (\n    show &&\n    (\n      <React.Fragment>\n        {/*<NavigationContainer linking={linking} ref={navigationRef}>*/}\n        <NavigationContainer ref={navigationRef} style={{ zIndex: -1 }}>\n          <Stack.Navigator initialRouteName={token ? \"ScanPack\" : \"SignIn\"} style={{ zIndex: -1 }}>\n            <Stack.Screen name=\"SignIn\"\n              component={SignIn}\n              options={{\n                title: 'Sign In',\n                headerStyle: {\n                  backgroundColor: '#336599',\n                },\n                headerTintColor: '#fff',\n                headerTitleStyle: {\n                  fontWeight: 'bold',\n                  textAlign: \"center\",\n                  fontSize: 22\n                },\n                // headerLeft: null,\n                // headerLeft: () => (<DrawerButton/>)\n              }}\n            />\n            <Stack.Screen name=\"OrderList\"\n              component={OrderList}\n              path=\"/123\"\n              options={{\n                title: 'List',\n                headerStyle: {\n                  backgroundColor: '#336599',\n                },\n                headerTintColor: '#fff',\n                headerTitleStyle: {\n                  fontWeight: 'bold',\n                  textAlign: \"center\",\n                  fontSize: 22\n                },\n                headerLeft: null,\n                headerLeft: () => (<DrawerButton />)\n              }}\n            />\n            <Stack.Screen name=\"OrderDetail\"\n              component={OrderDetail}\n              options={{\n                title: 'Order Detail',\n                headerStyle: {\n                  backgroundColor: '#336599',\n                },\n                headerTintColor: '#fff',\n                headerTitleStyle: {\n                  fontWeight: 'bold',\n                  textAlign: \"center\",\n                  fontSize: 22\n                },\n                headerLeft: null\n                // headerLeft: (navigation) => (<HeaderBackButton  onPress={() => nav(navigation) } />)\n              }}\n            />\n            <Stack.Screen name=\"ScanPack\"\n              component={ScanPack}\n              options={{\n                title: 'ScanPack',\n                headerStyle: {\n                  backgroundColor: '#336599',\n                },\n                headerTintColor: '#fff',\n                headerTitleStyle: {\n                  fontWeight: 'bold',\n                  textAlign: \"center\",\n                  fontSize: 22\n                },\n                headerLeft: null,\n                headerLeft: () => (<DrawerButton />)\n              }}\n            />\n            <Stack.Screen name=\"ScanPackItem\"\n              component={ScanPackItem}\n              initialParams={{ item: navBarShow, restart: restartFlag, restartButton: restartButton, changeHeading: changeHeading }}\n              options={{\n                title: alertShow === false ? <TouchableOpacity onPress={() => RootNavigation.navigate(\"ScanPack\")}><Text>Scan & Verify</Text></TouchableOpacity> : (\n                  <LinearGradient\n                    colors={['#5bbc31', '#479523', '#3f851d']}\n                    style={{\n                      position: \"fixed\",\n                      height: 40,\n                      display: \"flex\",\n                      alignItems: \"center\",\n                      justifyContent: \"center\",\n                      top: 0,\n                      left: 0,\n                      right: 0,\n                      marginLeft: \"auto\",\n                      marginRight: \"auto\",\n                      padding: 4,\n                      marginTop: 12,\n                      shadowOffset: { width: 0, height: 0, },\n                      shadowRadius: 3.84,\n                      shadowColor: '#000',\n                      shadowOpacity: 0.9,\n                      zIndex: 9,\n                      width: \"80%\",\n                      borderRadius: 5\n                    }}\n                  >\n                    <Text style={windowWidth > 1024 ? { fontSize: 16 } : { fontSize: 13 }}>Changes Successfully Saved</Text>\n                    <TouchableOpacity onClick={() => alertShowHandle(false)} style={{ position: \"absolute\", right: 11 }}>\n                      <Image style={windowWidth > 1024 ? { width: 22, height: 22 } : { width: 18, height: 18 }} source={Close ? Close : \"\"} />\n                    </TouchableOpacity>\n                  </LinearGradient>\n                ),\n\n                headerTitleStyle: {\n                  fontFamily: fontFamily.font700,\n                  color: \"#fff\",\n                  textAlign: \"center\",\n                  fontSize: 22\n                },\n                // headerTitle: props => <View style={{ width: 100, height: 100, backgroundColor: \"green\"}}/>,\n                headerBackground: () => (\n                  <LinearGradient\n                    start={{ x: 0, y: 1 }} end={{ x: 0, y: 0 }}\n                    colors={[\"#142130\", \"#304454\"]}\n                    style={{ backgroundColor: \"#707070\", width: \"100%\", height: \"100%\" }}\n                  />\n                ),\n                headerLeft: () => (\n                  <View style={{ flexDirection: \"row\" }}>\n                    <DrawerButton />\n                    {windowWidth >= 900 &&\n                      <View style={{ marginLeft: 10 }}>\n                        <Text style={{ fontFamily: fontFamily.font500, color: \"#fff\", fontSize: 16, textTransform: \"uppercase\", lineHeight: 15, marginTop: 4 }}>{userInfo.name}</Text>\n                        <Text style={{ fontFamily: fontFamily.font700, color: \"#fff\", fontSize: 16, textTransform: \"uppercase\" }}>{userInfo.current_tenant}</Text>\n                      </View>\n                    }\n                  </View>\n                ),\n                headerRight: () => (<SyncButton syncButtonHandle={() => syncButtonHandle()} alertShow={alertShow} />)\n              }}\n            // options={{header: () => (\n            //           <SafeAreaView>\n            //           {\n            //             Platform.OS === \"web\"\n            //               ?\n            //               <View style={{flexDirection: \"row\", alignItems: \"center\" , justifyContent: \"space-between\" ,backgroundColor: \"#336599\" , padding: 3 }}>\n            //                 <View style={{height: 50}}>\n            //                   {\n            //                     navShow === true &&\n            //                       <DrawerButton/>\n            //                   }\n            //                 </View>\n            //                 {/*<View style={{ flexDirection: \"row\", width: \"90%\" , display: \"flex\" , alignItems: \"center\" , justifyContent: \"space-around\" , marginLeft: 80}}>\n            //                   <TouchableOpacity style={{backgroundSize: \"contain\" , alignItems: \"center\" , marginRight: 15}} onPress={(e) => restartButton(e) }>\n            //                     <Image style={{ position: \"relative\" , width: 20 , height: 20 , marginBottom: 2}} source={restart} />\n            //                     <Text style={{fontSize: 10 , fontWeight: \"bold\" , color: \"#fff\"}}>Restart</Text>\n            //                   </TouchableOpacity>\n            //                   <TouchableOpacity style={{alignItems: \"center\"}}>\n            //                     <Image style={{ position: \"relative\" , width: 22 , height: 22}} source={note} />\n            //                     <Text style={{fontSize: 10 , fontWeight: \"bold\" , color: \"#fff\"}}>Note</Text>\n            //                   </TouchableOpacity>\n            //                 </View>*/}\n            //               </View>\n            //               :\n            //               <View style={{flexDirection: \"row\", alignItems: \"center\" , justifyContent: \"space-between\" ,backgroundColor: \"#1e5b60\" , padding: 3 }}>\n            //                 <View style={{height: 50}}>\n            //                   {\n            //                     navShow === true &&\n            //                       <DrawerButton/>\n            //                   }\n            //                 </View>\n            //                 <View style={{ flexDirection: \"row\", justifyContent: \"center\" , marginLeft: 80}}>\n            //                   <TouchableOpacity style={{backgroundSize: \"contain\" , alignItems: \"center\" , marginRight: 15}}>\n            //                     <Image style={{ position: \"relative\" , width: 20 , height: 20 , marginBottom: 2}} source={restart} />\n            //                     <Text style={{fontSize: 10 , color: \"#fff\"}}>Restart</Text>\n            //                   </TouchableOpacity>\n            //                   <TouchableOpacity style={{alignItems: \"center\"}}>\n            //                     <Image style={{ position: \"relative\" , width: 22 , height: 22}} source={note} />\n            //                     <Text style={{fontSize: 10 , color: \"#fff\"}}>Note</Text>\n            //                   </TouchableOpacity>\n            //                 </View>\n            //                 <View style={{textAlign: \"right\" , marginLeft: 10 , marginRight: 10}}>\n            //                   <Text style={{fontSize: 16 , color: \"#fff\" , fontWeight: \"bold\"}}>Scan & Pack</Text>\n            //                 </View>\n            //               </View>\n            //           }\n            //           </SafeAreaView>\n            //           )}\n            // }\n            />\n            <Stack.Screen name=\"ProductEdit\"\n              component={ProductEdit}\n              options={{\n                title: 'Edit Product',\n                headerStyle: {\n                  backgroundColor: '#336599',\n                },\n                headerTintColor: '#fff',\n                headerTitleStyle: {\n                  fontWeight: 'bold',\n                  textAlign: \"center\",\n                  fontSize: 22\n                },\n                // headerLeft: null,\n                // headerLeft: () => (<DrawerButton/>)\n              }}\n            />\n            <Stack.Screen name=\"ProductDetail\"\n              component={ProductDetail}\n              options={{\n                title: 'Product Detail',\n                headerStyle: {\n                  backgroundColor: '#336599',\n                },\n                headerTintColor: '#fff',\n                headerTitleStyle: {\n                  fontWeight: 'bold',\n                  textAlign: \"center\",\n                  fontSize: 22\n                },\n                // headerLeft: null,\n                // headerLeft: () => (<DrawerButton/>)\n              }}\n            />\n            <Stack.Screen name=\"ItemsDetail\"\n              component={ItemsDetail}\n              options={{\n                title: 'Items Detail',\n                headerStyle: {\n                  backgroundColor: '#336599',\n                },\n                headerTintColor: '#fff',\n                headerTitleStyle: {\n                  fontWeight: 'bold',\n                  textAlign: \"center\",\n                  fontSize: 22\n                },\n                // headerLeft: null,\n                // headerLeft: () => (<DrawerButton/>)\n              }}\n            />\n            <Stack.Screen name=\"PutWall\"\n              component={PutWall}\n              options={{\n                headerStyle: {\n                  backgroundColor: '#336599',\n                },\n                headerTintColor: '#fff',\n                headerTitleStyle: {\n                  fontWeight: 'bold',\n                  textAlign: \"center\",\n                  fontSize: 22\n                },\n                // headerLeft: null,\n                // headerLeft: () => (<DrawerButton/>)\n              }}\n            />\n            <Stack.Screen name=\"Select Product to add to Order\"\n              component={AddItemToOrder}\n              options={{\n                headerStyle: {\n                  backgroundColor: '#336599',\n                },\n                headerTintColor: '#fff',\n                headerTitleStyle: {\n                  fontWeight: 'bold',\n                  textAlign: \"center\",\n                  fontSize: 22\n                },\n                // headerLeft: null,\n                // headerLeft: () => (<DrawerButton/>)\n              }}\n            />\n          </Stack.Navigator>\n        </NavigationContainer>\n        {\n          openDrawer &&\n          <Drawer closeDrawer={closeDrawer} />\n        }\n      </React.Fragment>\n    )\n  );\n}\n"]},"metadata":{},"sourceType":"module"}
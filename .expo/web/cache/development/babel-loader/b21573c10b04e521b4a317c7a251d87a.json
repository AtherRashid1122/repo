{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\DELL PC\\\\Downloads\\\\GroovePacker\\\\src\\\\components\\\\scanpack\\\\scanpack.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport GestureRecognizer, { swipeDirections } from 'react-native-swipe-gestures';\nimport { connect } from 'react-redux';\nimport NetInfo from \"@react-native-community/netinfo\";\nimport { GetOrderList, SearchOrder } from \"../../actions/orderActions\";\nimport { SearchScanpackOrder } from \"../../actions/scanpackAction\";\nimport { SetItem, GetItem } from \"../../actions/updateAsyncAction\";\nimport { GetGeneralSetting, GetScanPackSetting, UserInfo } from \"../../actions/userAction\";\nimport globalStyles from \"../../style/global\";\nimport styles from \"../../style/scanpack\";\nimport PopUpModel from \"./pop_up_model\";\nimport AntDesign from \"@expo/vector-icons/AntDesign\";\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { fontFamily } from \"../../helpers/fontFamily\";\nvar height = Dimensions.get('window').height;\nvar orderListSuccess = false;\nvar searchOrderSuccess = false;\nvar validateUser = false;\nvar messageShow = false;\n\nvar ScanPack = function (_Component) {\n  _inherits(ScanPack, _Component);\n\n  var _super = _createSuper(ScanPack);\n\n  function ScanPack(props) {\n    var _this;\n\n    _classCallCheck(this, ScanPack);\n\n    _this = _super.call(this, props);\n\n    _this.getOrder = function () {\n      if (Platform.OS === \"ios\" || Platform.OS === \"android\") {\n        _this.checkConnection(\"apiCall\");\n      } else {\n        _this.apiCall();\n      }\n    };\n\n    _this.alertBox = function (message, skip, messageTypeSuccess) {\n      if (messageTypeSuccess === true) {\n        _this.setState({\n          popUpModelShow: true,\n          message: message,\n          messageTypeSuccess: true\n        });\n      } else {\n        _this.setState({\n          popUpModelShow: true,\n          message: message\n        });\n      }\n\n      setTimeout(function () {\n        this.setState({\n          popUpModelShow: false,\n          message: \"\",\n          messageTypeSuccess: false\n        });\n      }.bind(_assertThisInitialized(_this)), 4000);\n    };\n\n    _this.checkConnection = function _callee(type, input) {\n      var connectionInfo;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(NetInfo.fetch());\n\n            case 2:\n              connectionInfo = _context.sent;\n\n              if (connectionInfo.isConnected) {\n                type === \"callShipmentOrder\" ? _this.callShipmentOrder(input) : _this.apiCall();\n              } else {\n                _this.setState({\n                  rfoTitle: \"Please check your internet connection\"\n                });\n              }\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.apiCall = function () {\n      _this.props.GetOrderList(_this.state.dataList);\n\n      orderListSuccess = true;\n    };\n\n    _this.closeAlert = function () {\n      _this.setState({\n        popUpModelShow: false\n      });\n    };\n\n    _this.redirect = function _callee2() {\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(AsyncStorage.clear());\n\n            case 2:\n              _this.props.navigation.navigate(\"SignIn\", {\n                status: \"Inactive\",\n                time: new Date()\n              });\n\n              _this.setState({\n                userInfo: _this.props.userInfo\n              });\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.statusFunction = function (message) {\n      var data = _this.state.data;\n      data[\"input\"] = \"\";\n\n      _this.setState({\n        rfoTitle: message,\n        data: data\n      });\n    };\n\n    _this.orderDetails = function (order) {\n      if (order && order.scan_hash && order.scan_hash.data) {\n        _this.props.navigation.navigate(\"ScanPackItem\", {\n          data: order.scan_hash.data\n        });\n\n        messageShow = false;\n      }\n    };\n\n    _this.searchOrder = function (input) {\n      _this.setState({\n        loading: true,\n        loaderTitle: \"Loading...\"\n      });\n\n      if (input !== \"\") {\n        if (Platform.OS === \"ios\" || Platform.OS === \"android\") {\n          _this.checkConnection(\"callShipmentOrder\", input);\n        } else {\n          _this.callShipmentOrder(input);\n        }\n      }\n    };\n\n    _this.callShipmentOrder = function (input) {\n      var shipmentOrder = _this.state.data;\n      shipmentOrder[\"input\"] = input;\n\n      if (input !== \"\") {\n        shipmentOrder.input = input;\n\n        _this.props.SearchScanpackOrder(shipmentOrder);\n\n        searchOrderSuccess = true;\n        var apiCallTime = new Date();\n\n        _this.setState({\n          apiCallTime: apiCallTime\n        });\n      }\n    };\n\n    _this.handleChange = function (name, value) {\n      var order = _this.state.data;\n\n      if (name === \"searchOrder\") {\n        order[\"input\"] = value;\n      }\n\n      _this.setState({\n        order: order\n      });\n    };\n\n    _this.state = {\n      data: {\n        \"input\": \"\",\n        \"state\": \"scanpack.rfo\",\n        \"id\": null,\n        \"box_id\": null,\n        \"store_order_id\": null,\n        \"app\": \"app\"\n      },\n      popUpModelShow: false,\n      dataList: {\n        \"filter\": \"\",\n        \"order\": \"DESC\",\n        \"limit\": \"1\",\n        \"offset\": \"0\",\n        \"app\": \"app\",\n        \"count\": 0\n      },\n      orderDetail: null,\n      rfoTitle: \"Scan the Packing Slip of an Order you'd like to Pack.\",\n      time: new Date(),\n      loading: false,\n      loaderTitle: \"\",\n      userInfo: \"\",\n      scan_pack_settings: null\n    };\n    _this.inputFocus = React.createRef();\n    _this.searchOrder = _this.searchOrder.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(ScanPack, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.UserInfo();\n      this.setState({\n        loading: true,\n        loaderTitle: \"Loading...\"\n      });\n      this.getOrder();\n      validateUser = true;\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      if (orderListSuccess === true && this.props && this.props.ordersList && this.props.ordersList !== this.state.list) {\n        orderListSuccess = false;\n        var list = this.props.ordersList;\n        var orderShow = list.orders.length === 0 ? true : false;\n        this.setState({\n          scan_pack_settings: list.scan_pack_settings,\n          general_settings: list.general_settings,\n          rfoTitle: list.orders.length > 0 ? list && list.orders[0] && list.orders[0].ordernum : \"No orders were found in the awaiting orders list.\",\n          orderDetail: list && list.orders && list.orders[0],\n          loading: false,\n          list: this.props.ordersList,\n          unClick: orderShow\n        });\n      }\n\n      if (messageShow === false && this.props && this.props.route && this.props.route.params && this.props.route.params.showScannedMessage) {\n        this.alertBox(\"The order has already been scanned.\", true, true);\n        this.setState({\n          loading: true,\n          loaderTitle: \"Loading...\"\n        });\n        this.getOrder();\n        messageShow = true;\n      }\n\n      if (searchOrderSuccess === true && this.props && this.props.searchOrder && this.props.searchOrder.time > this.state.apiCallTime && this.props.searchOrder !== this.state.oldOne) {\n        var searchResult = this.props.searchOrder && this.props.searchOrder.searchOrder;\n        var order = searchResult && searchResult.data.order && searchResult.data.order[0];\n\n        if (searchResult) {\n          if (searchResult.matched) {\n            if (searchResult.data) {\n              this.orderDetails(order);\n              searchOrderSuccess = false;\n            } else {\n              if (searchResult.data.status === \"scanned\") {\n                var message = \"Order \" + searchResult.data.order_num + \" has already been scanned.\";\n                this.statusFunction(message);\n                this.setState({\n                  unClick: true\n                });\n              }\n            }\n          } else {\n            this.statusFunction(searchResult.error_messages);\n            this.setState({\n              unClick: true\n            });\n            searchOrderSuccess = false;\n          }\n\n          this.setFocus();\n          var data = this.state.data;\n          data[\"input\"] = \"\";\n          this.setState({\n            oldOne: this.props.searchOrder,\n            data: data,\n            loading: false\n          });\n        }\n      }\n\n      if (validateUser && this.props && this.props.userInfo && this.props.userInfo !== this.state.userInfo) {\n        if (this.props.userInfo.is_active === false) {\n          validateUser = false;\n          this.props.UserInfo(false);\n          this.redirect();\n        }\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.props.GetOrderList(this.state.dataList, false);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(SafeAreaView, {\n        style: globalStyles.flex1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: globalStyles.flexDirectionRow,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 9\n        }\n      }), React.createElement(ImageBackground, {\n        source: require(\"././../../../assets/background.png\"),\n        style: {\n          flex: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 9\n        }\n      }, React.createElement(ImageBackground, {\n        style: {\n          height: 345,\n          marginTop: 20\n        },\n        source: require(\"././../../../assets/scaning.png\"),\n        resizeMode: 'contain',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 11\n        }\n      }, React.createElement(View, {\n        style: {\n          height: height / 2,\n          justifyContent: 'center',\n          alignContent: 'center',\n          alignItems: 'center',\n          margin: 200\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 50,\n          color: '#728ba1',\n          fontFamily: 'Poppins',\n          marginTop: 30\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 15\n        }\n      }, \"Scan\"), React.createElement(View, {\n        style: {\n          marginTop: 25\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 15\n        }\n      }, React.createElement(TextInput, {\n        style: {\n          backgroundColor: 'black',\n          borderWidth: 2,\n          borderColor: '#7a92a8',\n          height: 35,\n          width: 280,\n          borderRadius: 5,\n          color: 'white'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 17\n        }\n      })), React.createElement(Text, {\n        style: {\n          color: '#728ba1',\n          fontSize: 20,\n          marginTop: 20,\n          fontFamily: 'Poppins'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 15\n        }\n      }, \"Scan a Packing slip to display an order.\"), React.createElement(View, {\n        style: {\n          flexDirection: 'row',\n          justifyContent: 'space-between'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 15\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: {\n          borderWidth: 1,\n          backgroundColor: '#869eb3',\n          marginTop: 30,\n          width: 300,\n          height: 40,\n          borderRadius: 5,\n          justifyContent: 'center',\n          alignContent: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        style: {\n          flexDirection: 'row',\n          justifyContent: 'space-between'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 19\n        }\n      }, React.createElement(View, {\n        style: {\n          justifyContent: 'center',\n          alignContent: 'center',\n          alignItems: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: {\n          marginLeft: 30,\n          color: 'white',\n          fontFamily: 'Poppins'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 23\n        }\n      }, \"Quick Scan\"), React.createElement(Text, {\n        style: {\n          marginLeft: 30,\n          color: 'white',\n          fontFamily: 'Poppins'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 23\n        }\n      }, \"111997723455-854578 \")), React.createElement(Image, {\n        source: require(\"././../../../assets/arroe.png\"),\n        style: {\n          marginRight: 10,\n          height: 20,\n          width: 20,\n          justifyContent: 'center',\n          alignContent: 'center',\n          alignSelf: 'center',\n          alignItems: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 21\n        }\n      }))), React.createElement(TouchableOpacity, {\n        style: {\n          height: 50,\n          justifyContent: 'center',\n          alignItems: 'center',\n          alignSelf: 'center',\n          marginTop: 30,\n          marginLeft: 5\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 17\n        }\n      }, React.createElement(Image, {\n        source: require(\"././../../../assets/notificationicon.png\"),\n        style: {\n          marginRight: 10,\n          height: 15,\n          width: 15,\n          justifyContent: 'center',\n          alignContent: 'center',\n          alignSelf: 'center',\n          alignItems: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 19\n        }\n      }))), React.createElement(Text, {\n        style: {\n          color: '#5a6a77',\n          marginTop: 60,\n          fontFamily: 'Poppins',\n          marginBottom: 5\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 15\n        }\n      }, \"Import is in Progress. ETA5 min\"), React.createElement(TouchableOpacity, {\n        style: {\n          height: 30,\n          backgroundColor: '#869eb3',\n          borderWidth: 1,\n          width: 150,\n          marginTop: 15,\n          justifyContent: 'center',\n          alignContent: 'center',\n          alignSelf: 'center',\n          alignItems: 'center',\n          borderRadius: 5,\n          marginTop: -1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: 'white',\n          fontFamily: 'Poppins'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 19\n        }\n      }, \"Refresh\"))))));\n    }\n  }]);\n\n  return ScanPack;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    ordersList: state.order.list,\n    searchOrder: state.scanpack,\n    userInfo: state.user.userInfo\n  };\n};\n\nvar mapDispatchToProps = {\n  GetOrderList: GetOrderList,\n  SearchScanpackOrder: SearchScanpackOrder,\n  UserInfo: UserInfo\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(ScanPack);","map":{"version":3,"sources":["C:/Users/DELL PC/Downloads/GroovePacker/src/components/scanpack/scanpack.js"],"names":["React","Component","AsyncStorage","GestureRecognizer","swipeDirections","connect","NetInfo","GetOrderList","SearchOrder","SearchScanpackOrder","SetItem","GetItem","GetGeneralSetting","GetScanPackSetting","UserInfo","globalStyles","styles","PopUpModel","AntDesign","LinearGradient","fontFamily","height","Dimensions","get","orderListSuccess","searchOrderSuccess","validateUser","messageShow","ScanPack","props","getOrder","Platform","OS","checkConnection","apiCall","alertBox","message","skip","messageTypeSuccess","setState","popUpModelShow","setTimeout","bind","type","input","fetch","connectionInfo","isConnected","callShipmentOrder","rfoTitle","state","dataList","closeAlert","redirect","clear","navigation","navigate","status","time","Date","userInfo","statusFunction","data","orderDetails","order","scan_hash","searchOrder","loading","loaderTitle","shipmentOrder","apiCallTime","handleChange","name","value","orderDetail","scan_pack_settings","inputFocus","createRef","ordersList","list","orderShow","orders","length","general_settings","ordernum","unClick","route","params","showScannedMessage","oldOne","searchResult","matched","order_num","error_messages","setFocus","is_active","flex1","flexDirectionRow","require","flex","marginTop","justifyContent","alignContent","alignItems","margin","fontSize","color","backgroundColor","borderWidth","borderColor","width","borderRadius","flexDirection","marginLeft","marginRight","alignSelf","marginBottom","mapStateToProps","scanpack","user","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { SafeAreaView, View, Text, TextInput, ActivityIndicator, TouchableOpacity, Platform, ImageBackground, Dimensions, Image } from 'react-native';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport GestureRecognizer, { swipeDirections } from 'react-native-swipe-gestures';\r\nimport { connect } from 'react-redux';\r\nimport NetInfo from \"@react-native-community/netinfo\";\r\nimport { GetOrderList, SearchOrder } from \"../../actions/orderActions\";\r\nimport { SearchScanpackOrder } from \"../../actions/scanpackAction\";\r\nimport { SetItem, GetItem } from \"../../actions/updateAsyncAction\";\r\nimport { GetGeneralSetting, GetScanPackSetting, UserInfo } from \"../../actions/userAction\";\r\nimport globalStyles from '../../style/global';\r\nimport styles from '../../style/scanpack';\r\nimport PopUpModel from \"./pop_up_model\";\r\nimport AntDesign from 'react-native-vector-icons/AntDesign'\r\nimport { LinearGradient } from 'expo-linear-gradient';\r\nimport { fontFamily } from '../../helpers/fontFamily';\r\n\r\n\r\nconst height = Dimensions.get('window').height\r\n\r\nlet orderListSuccess = false;\r\nlet searchOrderSuccess = false;\r\nlet validateUser = false\r\nlet messageShow = false\r\n\r\nclass ScanPack extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: {\r\n        \"input\": \"\",\r\n        \"state\": \"scanpack.rfo\",\r\n        \"id\": null,\r\n        \"box_id\": null,\r\n        \"store_order_id\": null,\r\n        \"app\": \"app\"\r\n      },\r\n      popUpModelShow: false,\r\n      dataList: {\r\n        \"filter\": \"\",\r\n        \"order\": \"DESC\",\r\n        \"limit\": \"1\",\r\n        \"offset\": \"0\",\r\n        \"app\": \"app\",\r\n        \"count\": 0\r\n      },\r\n      orderDetail: null,\r\n      rfoTitle: \"Scan the Packing Slip of an Order you'd like to Pack.\",\r\n      time: new Date(),\r\n      loading: false,\r\n      loaderTitle: \"\",\r\n      userInfo: \"\",\r\n      scan_pack_settings: null\r\n    };\r\n    this.inputFocus = React.createRef();\r\n    this.searchOrder = this.searchOrder.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.UserInfo()\r\n    this.setState({ loading: true, loaderTitle: \"Loading...\" })\r\n    this.getOrder()\r\n    validateUser = true\r\n  }\r\n\r\n  //According to the platform call the function\r\n  getOrder = () => {\r\n    if (Platform.OS === \"ios\" || Platform.OS === \"android\") {\r\n      this.checkConnection(\"apiCall\")\r\n    } else {\r\n      this.apiCall()\r\n    }\r\n  }\r\n\r\n  alertBox = (message, skip, messageTypeSuccess) => {\r\n    if (messageTypeSuccess === true) {\r\n      this.setState({ popUpModelShow: true, message: message, messageTypeSuccess: true })\r\n    } else {\r\n      this.setState({ popUpModelShow: true, message: message })\r\n    }\r\n    setTimeout(function () {\r\n      this.setState({ popUpModelShow: false, message: \"\", messageTypeSuccess: false });\r\n    }.bind(this), 4000);\r\n    // try {\r\n    //   this.barcode.current.focus()\r\n    // } catch (error) {\r\n    // }\r\n  }\r\n\r\n  //Check the connection for the ios and android\r\n  checkConnection = async (type, input) => {\r\n    const connectionInfo = await NetInfo.fetch();\r\n    if (connectionInfo.isConnected) {\r\n      type === \"callShipmentOrder\" ? this.callShipmentOrder(input) : this.apiCall()\r\n    } else {\r\n      this.setState({ rfoTitle: \"Please check your internet connection\" })\r\n    }\r\n  }\r\n\r\n  //Call the api to fetch the data from backend\r\n  apiCall = () => {\r\n    this.props.GetOrderList(this.state.dataList);\r\n    orderListSuccess = true\r\n  }\r\n\r\n\r\n  componentDidUpdate() {\r\n\r\n    //OrderList + scanpacksetting + general setting\r\n    if (orderListSuccess === true && this.props && this.props.ordersList && this.props.ordersList !== this.state.list) {\r\n      orderListSuccess = false\r\n      let list = this.props.ordersList\r\n      let orderShow = list.orders.length === 0 ? true : false\r\n      this.setState({\r\n        scan_pack_settings: list.scan_pack_settings,\r\n        general_settings: list.general_settings,\r\n        rfoTitle: list.orders.length > 0 ? list && list.orders[0] && list.orders[0].ordernum : \"No orders were found in the awaiting orders list.\",\r\n        //rfoTitle: list.orders.length > 0 ? list && list.orders[0] && list.orders[0].ordernum : \"Please scan an order to continue.\" ,\r\n        orderDetail: list && list.orders && list.orders[0],\r\n        loading: false,\r\n        list: this.props.ordersList,\r\n        unClick: orderShow\r\n      })\r\n    }\r\n\r\n\r\n\r\n    if (messageShow === false && this.props && this.props.route && this.props.route.params && this.props.route.params.showScannedMessage) {\r\n      this.alertBox(`The order has already been scanned.`, true, true)\r\n      this.setState({ loading: true, loaderTitle: \"Loading...\" })\r\n      this.getOrder()\r\n      messageShow = true\r\n    }\r\n\r\n    //Search Order Data\r\n    if (searchOrderSuccess === true && this.props &&\r\n      this.props.searchOrder && this.props.searchOrder.time > this.state.apiCallTime &&\r\n      this.props.searchOrder !== this.state.oldOne) {\r\n      let searchResult = this.props.searchOrder && this.props.searchOrder.searchOrder\r\n      let order = searchResult && searchResult.data.order && searchResult.data.order[0]\r\n      if (searchResult) {\r\n        if (searchResult.matched) {\r\n          if (searchResult.data) {\r\n            this.orderDetails(order)\r\n            searchOrderSuccess = false\r\n          } else {\r\n            if (searchResult.data.status === \"scanned\") {\r\n              let message = `Order ${searchResult.data.order_num} has already been scanned.`\r\n              this.statusFunction(message)\r\n              this.setState({ unClick: true })\r\n            }\r\n          }\r\n        } else {\r\n          this.statusFunction(searchResult.error_messages)\r\n          this.setState({ unClick: true })\r\n          searchOrderSuccess = false\r\n        }\r\n        this.setFocus()\r\n        let data = this.state.data\r\n        data[\"input\"] = \"\"\r\n        this.setState({ oldOne: this.props.searchOrder, data, loading: false })\r\n      }\r\n    }\r\n\r\n    if (validateUser && this.props && this.props.userInfo && this.props.userInfo !== this.state.userInfo) {\r\n      if (this.props.userInfo.is_active === false) {\r\n        validateUser = false\r\n        this.props.UserInfo(false)\r\n        this.redirect()\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  closeAlert = () => {\r\n    this.setState({ popUpModelShow: false })\r\n  }\r\n\r\n  redirect = async () => {\r\n    // await AsyncStorage.removeItem(\"access_token\")\r\n    await AsyncStorage.clear();\r\n    this.props.navigation.navigate(\"SignIn\", { status: \"Inactive\", time: new Date() })\r\n    this.setState({ userInfo: this.props.userInfo })\r\n  }\r\n\r\n  //After the apis call update the status (scanned , order  not present)\r\n  statusFunction = (message) => {\r\n    let data = this.state.data\r\n    data[\"input\"] = \"\"\r\n    this.setState({ rfoTitle: message, data })\r\n  }\r\n\r\n  //To set the focus\r\n  // setFocus = () => {\r\n  //   this.inputFocus.current.focus();\r\n  // }\r\n\r\n  //Redirect to the scanpackItem page with order details \r\n  orderDetails = (order) => {\r\n    if (order && order.scan_hash && order.scan_hash.data) {\r\n      this.props.navigation.navigate(\"ScanPackItem\", { data: order.scan_hash.data })\r\n      messageShow = false\r\n    }\r\n  }\r\n\r\n  //Check the connection for mobile device before call the api\r\n  searchOrder = (input) => {\r\n    this.setState({ loading: true, loaderTitle: \"Loading...\" })\r\n    if (input !== \"\") {\r\n      if (Platform.OS === \"ios\" || Platform.OS === \"android\") {\r\n        this.checkConnection(\"callShipmentOrder\", input)\r\n      } else {\r\n        this.callShipmentOrder(input)\r\n      }\r\n    }\r\n  }\r\n\r\n  //Api to call the search order\r\n  callShipmentOrder = (input) => {\r\n    let shipmentOrder = this.state.data\r\n    shipmentOrder[\"input\"] = input\r\n    if (input !== \"\") {\r\n      shipmentOrder.input = input\r\n      this.props.SearchScanpackOrder(shipmentOrder)\r\n      searchOrderSuccess = true\r\n      let apiCallTime = new Date()\r\n      this.setState({ apiCallTime })\r\n    }\r\n  }\r\n\r\n  //Handle the search field input\r\n  handleChange = (name, value) => {\r\n    let order = this.state.data;\r\n    if (name === \"searchOrder\") {\r\n      order[\"input\"] = value\r\n    }\r\n    this.setState({ order })\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.props.GetOrderList(this.state.dataList, false)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <SafeAreaView style={globalStyles.flex1}>\r\n        <View style={globalStyles.flexDirectionRow}>\r\n        </View>\r\n\r\n\r\n        <ImageBackground source={require('././../../../assets/background.png')} style={{ flex: 1 }}>\r\n          <ImageBackground style={{ height: 345, marginTop: 20 }} source={require('././../../../assets/scaning.png')} resizeMode={'contain'}>\r\n\r\n            <View style={{ height: height / 2, justifyContent: 'center', alignContent: 'center', alignItems: 'center', margin: 200 }}>\r\n              <Text style={{ fontSize: 50, color: '#728ba1', fontFamily: 'Poppins', marginTop: 30 }}>\r\n                Scan\r\n              </Text>\r\n              <View style={{ marginTop: 25 }}>\r\n                <TextInput style={{ backgroundColor: 'black', borderWidth: 2, borderColor: '#7a92a8', height: 35, width: 280, borderRadius: 5, color: 'white', }}></TextInput>\r\n              </View>\r\n              <Text style={{ color: '#728ba1', fontSize: 20, marginTop: 20, fontFamily: 'Poppins' }}>\r\n                Scan a Packing slip to display an order.\r\n              </Text>\r\n              <View style={{ flexDirection: 'row', justifyContent: 'space-between' }}>\r\n                <TouchableOpacity style={{ borderWidth: 1, backgroundColor: '#869eb3', marginTop: 30, width: 300, height: 40, borderRadius: 5, justifyContent: 'center', alignContent: 'center' }}>\r\n                  <View style={{ flexDirection: 'row', justifyContent: 'space-between' }}>\r\n                    <View style={{ justifyContent: 'center', alignContent: 'center', alignItems: 'center' }}>\r\n                      <Text style={{ marginLeft: 30, color: 'white', fontFamily: 'Poppins' }}>\r\n                        Quick Scan\r\n                      </Text>\r\n                      <Text style={{ marginLeft: 30, color: 'white', fontFamily: 'Poppins' }}>\r\n                        111997723455-854578 </Text>\r\n                    </View>\r\n                    {/* <AntDesign color=\"white\" style={{marginRight:10,justifyContent:'center',alignItems:'center',alignSelf:'center',alignContent:'center'}} name=\"forward\" size={24} /> */}\r\n                    <Image source={require('././../../../assets/arroe.png')} style={{ marginRight: 10, height: 20, width: 20, justifyContent: 'center', alignContent: 'center', alignSelf: 'center', alignItems: 'center', }} ></Image>\r\n                  </View>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity style={{ height: 50, justifyContent: 'center', alignItems: 'center', alignSelf: 'center', marginTop: 30, marginLeft: 5 }}>\r\n                  <Image source={require('././../../../assets/notificationicon.png')} style={{ marginRight: 10, height: 15, width: 15, justifyContent: 'center', alignContent: 'center', alignSelf: 'center', alignItems: 'center', }} ></Image>\r\n                </TouchableOpacity>\r\n              </View>\r\n              <Text style={{ color: '#5a6a77', marginTop: 60, fontFamily: 'Poppins',marginBottom:5 }}>\r\n                Import is in Progress. ETA5 min\r\n              </Text>\r\n                <TouchableOpacity style={{ height: 30, backgroundColor: '#869eb3', borderWidth: 1, width: 150, marginTop: 15, justifyContent: 'center', alignContent: 'center', alignSelf: 'center', alignItems: 'center', borderRadius: 5,marginTop:-1 }}>\r\n                  <Text style={{ color: 'white', fontFamily: 'Poppins' }}>\r\n                    Refresh\r\n                  </Text>\r\n\r\n\r\n                </TouchableOpacity>\r\n            \r\n            </View>\r\n\r\n          </ImageBackground>\r\n\r\n        \r\n\r\n        </ImageBackground>\r\n\r\n      </SafeAreaView>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    ordersList: state.order.list,\r\n    searchOrder: state.scanpack,\r\n    userInfo: state.user.userInfo\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  GetOrderList,\r\n  SearchScanpackOrder,\r\n  UserInfo\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ScanPack)\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\DELL PC\\\\Downloads\\\\GroovePacker\\\\src\\\\components\\\\drawer\\\\drawer.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport AsyncStorage from \"react-native-web/dist/exports/AsyncStorage\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport styles from \"../../style/drawer\";\nimport stylesAlert from \"../../style/scanpack\";\nimport globalStyles from \"../../style/global\";\nimport { connect } from 'react-redux';\nimport * as RootNavigation from \"../root_navigation\";\nimport { SetItem, GetItem } from \"../../actions/updateAsyncAction\";\nimport { SubmitLog, ScanPackBugReport } from \"../../actions/saveLogAction\";\nvar windowWidth = Dimensions.get('window').width;\nvar windowHeight = Dimensions.get('window').height;\nvar localLogCheck = false;\nvar updateLogLocal = false;\nvar reportBug = false;\nvar reportLogSuccess = false;\n\nvar Drawer = function (_Component) {\n  _inherits(Drawer, _Component);\n\n  var _super = _createSuper(Drawer);\n\n  function Drawer(props) {\n    var _this;\n\n    _classCallCheck(this, Drawer);\n\n    _this = _super.call(this, props);\n\n    _this.getUserInfo = function _callee() {\n      var info, userInfo;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"userInfo\"));\n\n            case 2:\n              info = _context.sent;\n\n              if (info) {\n                userInfo = info && JSON.parse(info);\n\n                _this.setState({\n                  userInfo: userInfo\n                });\n              }\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.logout = function _callee2() {\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return _regeneratorRuntime.awrap(AsyncStorage.clear());\n\n            case 3:\n              _this.redirect('SignIn');\n\n              _context2.next = 8;\n              break;\n\n            case 6:\n              _context2.prev = 6;\n              _context2.t0 = _context2[\"catch\"](0);\n\n            case 8:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, [[0, 6]], Promise);\n    };\n\n    _this.clearStore = function () {\n      localLogCheck = true;\n\n      _this.props.GetItem(\"logsArray\");\n    };\n\n    _this.dismissPopUp = function () {\n      _this.setState({\n        localLogPopUp: false,\n        reportBugPopUp: false\n      });\n\n      RootNavigation.reset(\"ScanPack\");\n\n      _this.props.closeDrawer();\n    };\n\n    _this.discardChanges = function _callee3() {\n      return _regeneratorRuntime.async(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return _regeneratorRuntime.awrap(AsyncStorage.removeItem(\"logsArray\"));\n\n            case 2:\n              _context3.next = 4;\n              return _regeneratorRuntime.awrap(AsyncStorage.removeItem(\"storeOrder\"));\n\n            case 4:\n              RootNavigation.reset(\"ScanPack\", \"refreshButton\");\n\n              _this.props.closeDrawer();\n\n            case 6:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.saveChanges = function _callee4() {\n      var getItem, convert;\n      return _regeneratorRuntime.async(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              updateLogLocal = true;\n              localLogCheck = true;\n              _context4.next = 4;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"logsArray\"));\n\n            case 4:\n              getItem = _context4.sent;\n              convert = getItem && JSON.parse(getItem);\n\n              _this.props.SubmitLog(convert);\n\n            case 7:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.validation = function () {\n      var feedback = _this.state.feedbackField && _this.state.feedbackField.trim(\" \");\n\n      if (feedback === \"\") {\n        _this.setState({\n          feedbackFieldError: true\n        });\n      } else {\n        return true;\n      }\n    };\n\n    _this.submitBugReport = function _callee5() {\n      var logging, LoggingArray, bugObject;\n      return _regeneratorRuntime.async(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.next = 2;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"Logging\"));\n\n            case 2:\n              logging = _context5.sent;\n              LoggingArray = JSON.parse(logging);\n              bugObject = {\n                feedback: _this.state.feedbackField,\n                logs: LoggingArray\n              };\n\n              if (_this.validation() === true) {\n                _this.setState({\n                  spinner: true\n                });\n\n                _this.props.ScanPackBugReport(bugObject);\n\n                reportLogSuccess = true;\n              }\n\n            case 6:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.state = {\n      userInfo: \"\",\n      localLogPopUp: false,\n      reportBugPopUp: false,\n      logTime: \"\",\n      feedbackField: \"\",\n      feedbackFieldError: false,\n      spinner: false\n    };\n    return _this;\n  }\n\n  _createClass(Drawer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getUserInfo();\n    }\n  }, {\n    key: \"redirect\",\n    value: function redirect(page) {\n      RootNavigation.reset(page);\n      this.props.closeDrawer();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      if (localLogCheck && this.props && this.props.localLog && this.props.localLog.retriveData && this.props.localLog.retriveData !== this.state.localData) {\n        localLogCheck = false;\n        var tempLocal = this.props.localLog && this.props.localLog.retriveData;\n\n        if (tempLocal !== \" \") {\n          var tempConvert = tempLocal !== \" \" && JSON.parse(tempLocal);\n\n          if (tempConvert && tempConvert.length > 0) {\n            this.setState({\n              localLogPopUp: true\n            });\n          }\n\n          this.setState({\n            localData: tempLocal\n          });\n        }\n      } else {\n        if (localLogCheck && this.props && this.props.localLog && this.props.localLog.retriveData === false) {\n          localLogCheck = false;\n          this.discardChanges();\n        }\n      }\n\n      if (updateLogLocal && this.props.updateLog.time !== this.state.logTime) {\n        if (this.props.updateLog && this.props.updateLog.logs && this.props.updateLog.logs.status === \"OK\" && this.props.updateLog.updateLog && this.props.updateLog.time) {\n          updateLogLocal = false;\n          this.setState({\n            logTime: this.props.updateLog.time\n          });\n          RootNavigation.reset(\"ScanPack\", \"refreshButton\");\n          this.props.closeDrawer();\n        }\n      }\n\n      if (this.props && this.props.updateReportLog && reportLogSuccess) {\n        reportLogSuccess = false;\n        this.setState({\n          reportBugPopUp: false,\n          feedbackField: \"\",\n          spinner: false\n        });\n        RootNavigation.reset(\"ScanPack\", \"refreshButton\");\n        this.props.closeDrawer();\n      }\n    }\n  }, {\n    key: \"reportBug\",\n    value: function reportBug() {\n      this.setState({\n        reportBugPopUp: true\n      });\n    }\n  }, {\n    key: \"cancelBugReport\",\n    value: function cancelBugReport() {\n      this.props.closeDrawer();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var navigation = this.props.navigation;\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 7\n        }\n      }, this.state.reportBugPopUp === true ? React.createElement(SafeAreaView, {\n        style: [stylesAlert.alertContainer, {\n          height: \"100%\"\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }\n      }, this.state.spinner ? React.createElement(View, {\n        style: {\n          flex: 1,\n          justifyContent: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 15\n        }\n      }, React.createElement(ActivityIndicator, {\n        size: \"large\",\n        color: \"#fff\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 17\n        }\n      })) : React.createElement(View, {\n        style: stylesAlert.alertBox,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 15\n        }\n      }, React.createElement(View, {\n        style: globalStyles.flexDirectionRow,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: stylesAlert.alertText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 19\n        }\n      }), React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return _this2.dismissPopUp();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 19\n        }\n      }, React.createElement(Text, {\n        style: stylesAlert.alertClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 21\n        }\n      }, \"X\"))), React.createElement(Text, {\n        style: {\n          textAlign: \"center\",\n          fontWeight: \"bold\",\n          fontSize: 20\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 17\n        }\n      }, \"Feedback\"), React.createElement(View, {\n        style: {\n          marginTop: 20\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 17\n        }\n      }, this.state.feedbackFieldError && React.createElement(Text, {\n        style: {\n          color: \"#d40b0b\",\n          padding: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 23\n        }\n      }, \"Field is required to submit\"), React.createElement(TextInput, {\n        placeholder: \"Type your feedback message\",\n        name: \"feedbackField\",\n        autoFocus: true,\n        onChangeText: function onChangeText(text) {\n          _this2.setState({\n            feedbackField: text,\n            feedbackFieldError: false\n          });\n        },\n        style: {\n          backgroundColor: \"#fff\",\n          padding: 10,\n          borderRadius: 20\n        },\n        autoCapitalize: \"none\",\n        onSubmitEditing: function onSubmitEditing() {\n          return _this2.submitBugReport();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 19\n        }\n      })), React.createElement(View, {\n        style: {\n          flexDirection: \"row\",\n          justifyContent: \"center\",\n          margin: 50\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 17\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: [stylesAlert.alertSubmitBox, {\n          marginRight: 5,\n          marginLeft: 5\n        }],\n        onPress: function onPress() {\n          return _this2.submitBugReport();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 19\n        }\n      }, React.createElement(Text, {\n        style: stylesAlert.alertSubmitBtn,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 21\n        }\n      }, \"Submit Report\")), React.createElement(TouchableOpacity, {\n        style: [stylesAlert.alertSubmitBox, {\n          marginRight: 5,\n          marginLeft: 5\n        }],\n        onPress: function onPress() {\n          return _this2.cancelBugReport();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 19\n        }\n      }, React.createElement(Text, {\n        style: stylesAlert.alertSubmitBtn,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 21\n        }\n      }, \"Cancel\"))))) : React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }\n      }, this.state.localLogPopUp ? React.createElement(SafeAreaView, {\n        style: [stylesAlert.alertContainer, {\n          height: windowHeight\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        style: stylesAlert.alertBox,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 19\n        }\n      }, React.createElement(View, {\n        style: globalStyles.flexDirectionRow,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: stylesAlert.alertText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 23\n        }\n      }), React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return _this2.dismissPopUp();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 23\n        }\n      }, React.createElement(Text, {\n        style: stylesAlert.alertClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 25\n        }\n      }, \"X\"))), React.createElement(Text, {\n        style: {\n          textAlign: \"center\",\n          fontWeight: \"bold\",\n          fontSize: 20\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 21\n        }\n      }, \"Are you want to save changes ?\"), React.createElement(View, {\n        style: {\n          flexDirection: \"row\",\n          justifyContent: \"center\",\n          margin: 50\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 21\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: [stylesAlert.alertSubmitBox, {\n          marginRight: 5,\n          marginLeft: 5\n        }],\n        onPress: function onPress() {\n          return _this2.saveChanges();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 23\n        }\n      }, React.createElement(Text, {\n        style: stylesAlert.alertSubmitBtn,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 25\n        }\n      }, \"Save Changes\")), React.createElement(TouchableOpacity, {\n        style: [stylesAlert.alertSubmitBox, {\n          marginRight: 5,\n          marginLeft: 5\n        }],\n        onPress: function onPress() {\n          return _this2.discardChanges();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 23\n        }\n      }, React.createElement(Text, {\n        style: stylesAlert.alertSubmitBtn,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 25\n        }\n      }, \"Discard Changes\"))))) : React.createElement(SafeAreaView, {\n        style: [styles.drawerBackView, globalStyles.positionFixed],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        style: styles.drawerMainView,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 19\n        }\n      }, React.createElement(View, {\n        style: styles.closeButtonContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: [globalStyles.flex9, {\n          color: \"#fff\",\n          fontWeight: \"bold\",\n          fontSize: 25,\n          textAlign: \"center\"\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 23\n        }\n      }, this.state.userInfo && this.state.userInfo !== \"\" && React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 27\n        }\n      }, this.state.userInfo.username + \" - \", this.state.userInfo.current_tenant)), React.createElement(View, {\n        style: globalStyles.flex1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 23\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: this.props.closeDrawer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 25\n        }\n      }, React.createElement(Text, {\n        style: styles.closeButton,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 27\n        }\n      }, \"X\")))), React.createElement(ScrollView, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 21\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          _this2.redirect('OrderList');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 23\n        }\n      }, React.createElement(Text, {\n        style: styles.textStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 25\n        }\n      }, \"Order List\")), React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          _this2.redirect('ScanPack');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 23\n        }\n      }, React.createElement(Text, {\n        style: styles.textStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 25\n        }\n      }, \"Scan Pack\")), React.createElement(TouchableOpacity, {\n        onPress: this.reportBug.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 23\n        }\n      }, React.createElement(Text, {\n        style: styles.textStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 25\n        }\n      }, \"Report Bug\")), React.createElement(TouchableOpacity, {\n        onPress: this.logout.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 23\n        }\n      }, React.createElement(Text, {\n        style: styles.textStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 25\n        }\n      }, \"Logout\"))), React.createElement(View, {\n        style: styles.refreshButton,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 21\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return _this2.clearStore();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 23\n        }\n      }, React.createElement(Text, {\n        style: styles.textStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 25\n        }\n      }, \"Refresh Orders\")))))));\n    }\n  }]);\n\n  return Drawer;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    localLog: state.updateAsync,\n    updateLog: state.saveLog,\n    updateReportLog: state.saveLog.updateReportLog\n  };\n};\n\nvar mapDispatchToProps = {\n  SetItem: SetItem,\n  GetItem: GetItem,\n  SubmitLog: SubmitLog,\n  ScanPackBugReport: ScanPackBugReport\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Drawer);","map":{"version":3,"sources":["C:/Users/DELL PC/Downloads/GroovePacker/src/components/drawer/drawer.js"],"names":["React","Component","styles","stylesAlert","globalStyles","connect","RootNavigation","SetItem","GetItem","SubmitLog","ScanPackBugReport","windowWidth","Dimensions","get","width","windowHeight","height","localLogCheck","updateLogLocal","reportBug","reportLogSuccess","Drawer","props","getUserInfo","AsyncStorage","getItem","info","userInfo","JSON","parse","setState","logout","clear","redirect","clearStore","dismissPopUp","localLogPopUp","reportBugPopUp","reset","closeDrawer","discardChanges","removeItem","saveChanges","convert","validation","feedback","state","feedbackField","trim","feedbackFieldError","submitBugReport","logging","LoggingArray","bugObject","logs","spinner","logTime","page","localLog","retriveData","localData","tempLocal","tempConvert","length","updateLog","time","status","updateReportLog","navigation","alertContainer","flex","justifyContent","alertBox","flexDirectionRow","alertText","alertClose","textAlign","fontWeight","fontSize","marginTop","color","padding","text","backgroundColor","borderRadius","flexDirection","margin","alertSubmitBox","marginRight","marginLeft","alertSubmitBtn","cancelBugReport","drawerBackView","positionFixed","drawerMainView","closeButtonContainer","flex9","username","current_tenant","flex1","closeButton","textStyle","bind","refreshButton","mapStateToProps","updateAsync","saveLog","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { View, SafeAreaView,Text, TextInput,ActivityIndicator , AsyncStorage, Dimensions, TouchableOpacity , ScrollView, Platform } from 'react-native';\nimport styles from '../../style/drawer';\nimport stylesAlert from '../../style/scanpack';\nimport globalStyles from '../../style/global';\nimport { connect } from 'react-redux';\nimport * as RootNavigation from '../root_navigation';\nimport { SetItem , GetItem } from \"../../actions/updateAsyncAction\";\nimport { SubmitLog , ScanPackBugReport } from \"../../actions/saveLogAction\";\nconst windowWidth = Dimensions.get('window').width;\nconst windowHeight = Dimensions.get('window').height;\n\nlet localLogCheck = false\nlet updateLogLocal = false\nlet reportBug = false\nlet reportLogSuccess = false\n\nclass Drawer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userInfo: \"\",\n      localLogPopUp: false,\n      reportBugPopUp: false,\n      logTime: \"\",\n      feedbackField: \"\",\n      feedbackFieldError: false,\n      spinner: false\n    };\n  }\n\n  componentDidMount(){\n    this.getUserInfo()\n  }\n\n  getUserInfo = async() => {\n    let info = await AsyncStorage.getItem(\"userInfo\")\n    if(info){\n      let userInfo  = info && JSON.parse(info)\n      this.setState({userInfo})\n    }\n  }\n\n  redirect(page){\n    RootNavigation.reset(page)\n    this.props.closeDrawer();\n  }\n\n  logout = async() =>{\n    try{\n      // await AsyncStorage.removeItem(\"access_token\")\n      await AsyncStorage.clear();\n      this.redirect('SignIn');\n    } catch(e){\n    }\n  }\n\n  componentDidUpdate(){\n\n    if(localLogCheck && this.props && this.props.localLog && this.props.localLog.retriveData && this.props.localLog.retriveData !== this.state.localData ){\n      localLogCheck = false\n      let tempLocal = this.props.localLog && this.props.localLog.retriveData\n      if(tempLocal !== \" \"){\n        let tempConvert = tempLocal !== \" \" && JSON.parse(tempLocal)\n        if(tempConvert && tempConvert.length > 0){\n          this.setState({localLogPopUp: true})\n        }\n        this.setState({localData: tempLocal})\n      }\n      // else{\n      //     this.discardChanges() \n      // }\n    }else{\n      if(localLogCheck && this.props && this.props.localLog && this.props.localLog.retriveData === false){\n        localLogCheck = false\n        this.discardChanges()\n      } \n    }\n\n    if(updateLogLocal && this.props.updateLog.time !== this.state.logTime){\n      if(this.props.updateLog && this.props.updateLog.logs && this.props.updateLog.logs.status === \"OK\" && this.props.updateLog.updateLog && this.props.updateLog.time){\n        updateLogLocal = false\n        this.setState({logTime: this.props.updateLog.time})\n        RootNavigation.reset(\"ScanPack\" , \"refreshButton\")\n        this.props.closeDrawer(); \n      }\n    }\n\n    if(this.props && this.props.updateReportLog && reportLogSuccess){\n      reportLogSuccess = false\n      this.setState({reportBugPopUp: false , feedbackField: \"\" , spinner: false})\n      RootNavigation.reset(\"ScanPack\" , \"refreshButton\")\n      this.props.closeDrawer(); \n    }\n\n  }\n\n  clearStore = () => {\n    localLogCheck = true\n    this.props.GetItem(\"logsArray\")\n  }\n\n  dismissPopUp = () => {\n    this.setState({localLogPopUp: false , reportBugPopUp: false})\n    RootNavigation.reset(\"ScanPack\")\n    this.props.closeDrawer();\n  }\n\n  discardChanges = async() => {\n    await AsyncStorage.removeItem(\"logsArray\")\n    await AsyncStorage.removeItem(\"storeOrder\")\n    // await AsyncStorage.multiRemove([\"logsArray\"] , [\"storeOrder\"])\n    RootNavigation.reset(\"ScanPack\" , \"refreshButton\")\n    this.props.closeDrawer();\n  }\n\n  saveChanges = async() => {\n    updateLogLocal = true\n    localLogCheck = true\n    let getItem = await AsyncStorage.getItem(\"logsArray\")\n    let convert = getItem && JSON.parse(getItem)\n    this.props.SubmitLog(convert)\n  }\n\n  reportBug(){\n    this.setState({reportBugPopUp: true})\n  }\n\n  validation = () => {\n    let feedback = this.state.feedbackField && this.state.feedbackField.trim(\" \")\n    if(feedback === \"\")\n    {\n      this.setState({feedbackFieldError: true})\n    }\n    else{\n      return true;\n    }\n  }\n\n  submitBugReport = async() =>{\n    let logging = await AsyncStorage.getItem(\"Logging\")\n    let LoggingArray = JSON.parse(logging)\n    let bugObject = {\n      feedback: this.state.feedbackField,\n      logs: LoggingArray\n    }\n    if(this.validation() === true){\n      this.setState({spinner: true})\n      this.props.ScanPackBugReport(bugObject)\n      reportLogSuccess = true\n    }\n  }\n\n  cancelBugReport(){\n    this.props.closeDrawer();\n  }\n\n  render() {\n    const { navigation } = this.props;\n    return (\n      <React.Fragment>\n      {\n        this.state.reportBugPopUp === true\n          ?\n          <SafeAreaView style={[stylesAlert.alertContainer , {height: \"100%\"} ]}>\n            {\n              this.state.spinner\n              ?\n              <View style={{flex: 1 , justifyContent: \"center\"}}>\n                <ActivityIndicator size=\"large\" color=\"#fff\"/>\n              </View>\n              :\n              <View style={stylesAlert.alertBox}>\n                <View style={globalStyles.flexDirectionRow}>\n                  <Text style={stylesAlert.alertText}>\n                  </Text>\n                  <TouchableOpacity onPress={() => this.dismissPopUp()}>\n                    <Text style={stylesAlert.alertClose}>\n                      X\n                    </Text>\n                  </TouchableOpacity>\n                </View>\n                <Text style={{textAlign: \"center\" , fontWeight: \"bold\" , fontSize: 20}}>\n                  Feedback\n                </Text>\n                <View style={{marginTop: 20}}>\n                  {\n                    this.state.feedbackFieldError &&\n                      <Text style={{color: \"#d40b0b\" , padding: 10}}>Field is required to submit</Text>\n                  }\n                  <TextInput placeholder=\"Type your feedback message\"\n                             name=\"feedbackField\"\n                             autoFocus={true}\n                             onChangeText={(text) => {this.setState({feedbackField: text , feedbackFieldError: false}) }}\n                             style={{backgroundColor: \"#fff\", padding: 10 , borderRadius: 20 }}\n                             autoCapitalize = 'none'\n                             onSubmitEditing={() => this.submitBugReport() }\n                             />\n                </View>             \n                <View style={{flexDirection: \"row\" , justifyContent: \"center\" , margin: 50}}>\n                  <TouchableOpacity \n                    style={[stylesAlert.alertSubmitBox , {marginRight: 5 , marginLeft: 5 }]}\n                    onPress={() => this.submitBugReport()}\n                  >\n                    <Text style={stylesAlert.alertSubmitBtn}>\n                      Submit Report\n                    </Text>\n                  </TouchableOpacity>\n   \n                  <TouchableOpacity \n                    style={[stylesAlert.alertSubmitBox , {marginRight: 5 , marginLeft: 5 }]}\n                    onPress={() => this.cancelBugReport()}\n                  >\n                    <Text style={stylesAlert.alertSubmitBtn}>\n                      Cancel\n                    </Text>\n                  </TouchableOpacity>\n                </View>  \n              </View>\n            }  \n          </SafeAreaView>\n          :\n          <React.Fragment>\n            {\n              this.state.localLogPopUp \n              ?\n                <SafeAreaView style={[stylesAlert.alertContainer , {height: windowHeight} ]}>\n                  <View style={stylesAlert.alertBox}>\n                    <View style={globalStyles.flexDirectionRow}>\n                      <Text style={stylesAlert.alertText}>\n                      </Text>\n                      <TouchableOpacity onPress={() => this.dismissPopUp()}>\n                        <Text style={stylesAlert.alertClose}>\n                          X\n                        </Text>\n                      </TouchableOpacity>\n                    </View>\n                    <Text style={{textAlign: \"center\" , fontWeight: \"bold\" , fontSize: 20}}>\n                      Are you want to save changes ?\n                    </Text>\n                    <View style={{flexDirection: \"row\" , justifyContent: \"center\" , margin: 50}}>\n                      <TouchableOpacity \n                        style={[stylesAlert.alertSubmitBox , {marginRight: 5 , marginLeft: 5 }]}\n                        onPress={() => this.saveChanges()}\n                      >\n                        <Text style={stylesAlert.alertSubmitBtn}>\n                          Save Changes\n                        </Text>\n                      </TouchableOpacity>\n       \n                      <TouchableOpacity \n                        style={[stylesAlert.alertSubmitBox , {marginRight: 5 , marginLeft: 5 }]}\n                        onPress={() => this.discardChanges()}\n                      >\n                        <Text style={stylesAlert.alertSubmitBtn}>\n                          Discard Changes\n                        </Text>\n                      </TouchableOpacity>\n                    </View>  \n                  </View>\n                </SafeAreaView>\n              :\n                <SafeAreaView style={[styles.drawerBackView , globalStyles.positionFixed]}>\n                  <View style={styles.drawerMainView}>\n                    <View style={styles.closeButtonContainer}>\n                      <Text style={[globalStyles.flex9, {color: \"#fff\" , fontWeight: \"bold\" , fontSize: 25 , textAlign: \"center\"}]}>\n                        {\n                          this.state.userInfo && this.state.userInfo !== \"\" &&\n                          <Text>{`${this.state.userInfo.username} - `}{this.state.userInfo.current_tenant}</Text>\n                        }\n                      </Text>\n                      <View style={globalStyles.flex1}>\n                        <TouchableOpacity onPress={this.props.closeDrawer}>\n                          <Text style={styles.closeButton}>\n                            X\n                          </Text>\n                        </TouchableOpacity>\n                      </View>\n                    </View>\n                    <ScrollView>\n                      <TouchableOpacity onPress={() => {this.redirect('OrderList')}}>\n                        <Text style={styles.textStyle}>\n                          Order List\n                        </Text>\n                      </TouchableOpacity>\n                      <TouchableOpacity onPress={() => {this.redirect('ScanPack')}}>\n                        <Text style={styles.textStyle}>\n                          Scan Pack\n                        </Text>\n                      </TouchableOpacity>\n                      <TouchableOpacity onPress={this.reportBug.bind(this)}>\n                        <Text style={styles.textStyle}>\n                          Report Bug\n                        </Text>\n                      </TouchableOpacity>\n                      <TouchableOpacity onPress={this.logout.bind(this)}>\n                        <Text style={styles.textStyle}>\n                          Logout\n                        </Text>\n                      </TouchableOpacity>\n                    </ScrollView>\n                    <View style={styles.refreshButton}>\n                      <TouchableOpacity onPress={() =>  this.clearStore()}>\n                        <Text style={styles.textStyle}>\n                          Refresh Orders\n                        </Text>\n                      </TouchableOpacity>\n                    </View>\n                  </View>\n                </SafeAreaView>\n            }\n          </React.Fragment>\n      }\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    localLog : state.updateAsync,\n    updateLog: state.saveLog,\n    updateReportLog: state.saveLog.updateReportLog\n  }\n};\n\nconst mapDispatchToProps = {\n  SetItem,\n  GetItem,\n  SubmitLog,\n  ScanPackBugReport\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Drawer)\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\DELL PC\\\\Downloads\\\\GroovePacker\\\\src\\\\components\\\\orders\\\\orderlist.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component, useRef } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ListView from \"react-native-web/dist/exports/ListView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport AsyncStorage from \"react-native-web/dist/exports/AsyncStorage\";\nimport { connect } from 'react-redux';\nimport { SearchScanpackOrder } from \"../../actions/scanpackAction\";\nimport NetInfo from \"@react-native-community/netinfo\";\nimport { GetOrderList, SearchOrder } from \"../../actions/orderActions\";\nimport { SetItem, GetItem } from \"../../actions/updateAsyncAction\";\nimport { GetGeneralSetting } from \"../../actions/userAction\";\nimport globalStyles from \"../../style/global\";\nimport styles from \"../../style/orderlist\";\nvar ordersListSuccess = true;\nvar searchOrderSuccess = false;\nvar searchOrderCheck = false;\nvar generalSettingsCheck = false;\nvar saveData = false;\nvar updateComponent = true;\n\nvar OrderList = function (_Component) {\n  _inherits(OrderList, _Component);\n\n  var _super = _createSuper(OrderList);\n\n  function OrderList(props) {\n    var _this;\n\n    _classCallCheck(this, OrderList);\n\n    _this = _super.call(this, props);\n\n    _this.componentDidMount = function _callee() {\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _this.setState({\n                loading: true\n              });\n\n              _this.hitApi();\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.hitApi = function () {\n      if (Platform.OS === \"ios\" || Platform.OS === \"android\") {\n        _this.CheckConnection();\n      } else {\n        _this.apiCall();\n      }\n    };\n\n    _this.CheckConnection = function _callee2() {\n      var connectionInfo;\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(NetInfo.fetch());\n\n            case 2:\n              connectionInfo = _context2.sent;\n\n              if (connectionInfo.isConnected) {\n                _this.apiCall();\n              } else {\n                _this.setState({\n                  errorMessage: \"Please check your internet connection\"\n                });\n              }\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.apiCall = function () {\n      _this.props.GetOrderList(_this.state.data);\n\n      ordersListSuccess = false;\n    };\n\n    _this.setFocusField = function () {\n      _this.state.loading === false && _this.searchField.current.focus();\n    };\n\n    _this.logout = function _callee3() {\n      return _regeneratorRuntime.async(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              _context3.next = 3;\n              return _regeneratorRuntime.awrap(AsyncStorage.removeItem(\"access_token\"));\n\n            case 3:\n              _this.props.navigation.reset({\n                index: 0,\n                routes: [{\n                  name: 'SignIn'\n                }]\n              });\n\n              _context3.next = 9;\n              break;\n\n            case 6:\n              _context3.prev = 6;\n              _context3.t0 = _context3[\"catch\"](0);\n              alert('Failed to clear the async storage.');\n\n            case 9:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, [[0, 6]], Promise);\n    };\n\n    _this.handleChange = function (name, value) {\n      var scanpack = _this.state.scanpack;\n\n      if (name === \"searchOrder\") {\n        scanpack[\"input\"] = value;\n      }\n\n      _this.setState({\n        scanpack: scanpack\n      });\n    };\n\n    _this.searchProduct = function (item) {\n      if (item.scan_hash !== null) {\n        updateComponent = true;\n\n        _this.props.navigation.navigate(\"ScanPackItem\", {\n          data: item.scan_hash.data\n        });\n      }\n    };\n\n    _this.searchOrder = function () {\n      var scanpack = _this.state.scanpack;\n\n      _this.props.SearchScanpackOrder(scanpack);\n\n      searchOrderSuccess = false;\n    };\n\n    _this.state = {\n      data: {\n        \"filter\": \"awaiting\",\n        \"order\": \"DESC\",\n        \"limit\": \"1\",\n        \"offset\": \"0\",\n        \"app\": \"app\",\n        \"count\": 0\n      },\n      scanpack: {\n        \"input\": \"\",\n        \"state\": \"scanpack.rfo\",\n        \"id\": null,\n        \"box_id\": null,\n        \"store_order_id\": null,\n        \"app\": \"app\"\n      },\n      connection_Status: \"\",\n      updateData: [],\n      searchOrdersCheck: [],\n      errorMessage: \"No Record Found\",\n      loading: false,\n      loaderTitle: \"Loading...\"\n    };\n    _this.searchField = React.createRef();\n    return _this;\n  }\n\n  _createClass(OrderList, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      var nextProps = this.props;\n      var scanpack = this.state.scanpack;\n      var searchOrder = this.props.SearchScanPackOrder;\n      var searchData = searchOrder && searchOrder.data;\n      var upList = false;\n\n      if (this.props && this.props.ordersList && this.state.searchOrdersCheck !== this.props.ordersList) {\n        ordersListSuccess = true;\n        scanpack[\"input\"] = \"\";\n        upList = true;\n        this.setState({\n          searchOrdersCheck: nextProps.ordersList,\n          orders: nextProps.ordersList.orders,\n          scanpack: scanpack,\n          loading: false\n        });\n        this.setFocusField();\n      }\n\n      if (updateComponent === true && this.props && this.props.SearchScanPackOrder && this.props.SearchScanPackOrder !== this.state.searchOrder) {\n        searchOrderSuccess = true;\n        updateComponent = false;\n        scanpack[\"input\"] = \"\";\n        this.setState({\n          orders: nextProps.SearchScanPackOrder.data.order,\n          scanpack: scanpack,\n          seaarchOrder: this.props.SearchScanPackOrder\n        });\n        this.setFocusField();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      ordersListSuccess = false;\n      searchOrderSuccess = false;\n      saveData = false;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(SafeAreaView, {\n        style: globalStyles.flex1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 7\n        }\n      }, this.state.loading ? React.createElement(View, {\n        style: {\n          flex: 1,\n          justifyContent: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 13\n        }\n      }, React.createElement(ActivityIndicator, {\n        size: \"large\",\n        color: \"#336599\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 15\n        }\n      }), React.createElement(Text, {\n        style: {\n          fontSize: 13,\n          fontWeight: 500,\n          textAlign: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 15\n        }\n      }, this.state.loaderTitle)) : React.createElement(React.Fragment, null, React.createElement(View, {\n        style: globalStyles.flexDirectionRow,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 15\n        }\n      }, React.createElement(View, {\n        style: [globalStyles.flexDirectionRow, globalStyles.flex7],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 17\n        }\n      }, React.createElement(TextInput, {\n        placeholder: \"Type order to search\",\n        name: \"searchOrder\",\n        autoFocus: true,\n        ref: this.searchField,\n        value: this.state.scanpack.input,\n        onChangeText: function onChangeText(text) {\n          _this2.handleChange(\"searchOrder\", text);\n        },\n        onSubmitEditing: this.searchOrder.bind(this),\n        style: styles.inputBox,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 19\n        }\n      }))), this.props.ordersList && this.state.orders && React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 16\n        }\n      }, this.state.orders.length > 0 ? React.createElement(ScrollView, {\n        style: styles.listContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 19\n        }\n      }, this.state.orders && this.state.orders.map(function (item, index) {\n        return React.createElement(TouchableOpacity, {\n          key: index,\n          onLongPress: _this2.searchProduct.bind(_this2, item),\n          delayLongPress: 1000,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 27\n          }\n        }, React.createElement(View, {\n          style: styles.orderRow,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 29\n          }\n        }, React.createElement(View, {\n          style: [globalStyles.flex2, styles.orderColumn],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 31\n          }\n        }, React.createElement(Text, {\n          style: styles.text,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 33\n          }\n        }, \"S.No.\"), React.createElement(Text, {\n          style: styles.text,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 33\n          }\n        }, index + 1)), React.createElement(View, {\n          style: [globalStyles.flex3, styles.orderColumn],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 31\n          }\n        }, React.createElement(Text, {\n          style: styles.text,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 33\n          }\n        }, \"Order #\"), React.createElement(Text, {\n          style: styles.text,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 35\n          }\n        }, item.order_info.ordernum)), React.createElement(View, {\n          style: [globalStyles.flex3, styles.orderColumn],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 31\n          }\n        }, React.createElement(Text, {\n          style: styles.text,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 33\n          }\n        }, \"Store\"), React.createElement(Text, {\n          style: styles.text,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 33\n          }\n        }, item.order_info.store_name)), React.createElement(View, {\n          style: [globalStyles.flex2, styles.orderColumn],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 31\n          }\n        }, React.createElement(Text, {\n          style: styles.text,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 33\n          }\n        }, \"Item\"), React.createElement(Text, {\n          style: styles.text,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 33\n          }\n        }, item.order_info.itemslength)), React.createElement(View, {\n          style: [globalStyles.flex3, styles.orderColumn],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 31\n          }\n        }, React.createElement(Text, {\n          style: styles.text,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 33\n          }\n        }, \"Status\"), React.createElement(Text, {\n          style: styles.text,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 33\n          }\n        }, item.order_info.status))));\n      })) : React.createElement(View, {\n        style: {\n          alignItems: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 19\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 16,\n          fontWeight: 500\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 14\n        }\n      }, this.state.errorMessage))), React.createElement(View, {\n        style: styles.buttonContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 15\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return _this2.hitApi();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: [styles.button],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 19\n        }\n      }, \"All Orders\")), React.createElement(TouchableOpacity, {\n        onPress: this.logout.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: [styles.button, globalStyles.m_10],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 19\n        }\n      }, \"Logout\")))));\n    }\n  }]);\n\n  return OrderList;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    ordersList: state.order.list,\n    searchOrder: state.order.searchResult,\n    SearchScanPackOrder: state.scanpack.searchOrder,\n    generalSettings: state.user.settings,\n    saveData: state.updateAsync.retriveData\n  };\n};\n\nvar mapDispatchToProps = {\n  GetOrderList: GetOrderList,\n  SearchOrder: SearchOrder,\n  SearchScanpackOrder: SearchScanpackOrder,\n  GetGeneralSetting: GetGeneralSetting,\n  SetItem: SetItem,\n  GetItem: GetItem\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(OrderList);","map":{"version":3,"sources":["C:/Users/DELL PC/Downloads/GroovePacker/src/components/orders/orderlist.js"],"names":["React","Component","useRef","connect","SearchScanpackOrder","NetInfo","GetOrderList","SearchOrder","SetItem","GetItem","GetGeneralSetting","globalStyles","styles","ordersListSuccess","searchOrderSuccess","searchOrderCheck","generalSettingsCheck","saveData","updateComponent","OrderList","props","componentDidMount","setState","loading","hitApi","Platform","OS","CheckConnection","apiCall","fetch","connectionInfo","isConnected","errorMessage","state","data","setFocusField","searchField","current","focus","logout","AsyncStorage","removeItem","navigation","reset","index","routes","name","alert","handleChange","value","scanpack","searchProduct","item","scan_hash","navigate","searchOrder","connection_Status","updateData","searchOrdersCheck","loaderTitle","createRef","nextProps","SearchScanPackOrder","searchData","upList","ordersList","orders","order","seaarchOrder","flex1","flex","justifyContent","fontSize","fontWeight","textAlign","flexDirectionRow","flex7","input","text","bind","inputBox","length","listContainer","map","orderRow","flex2","orderColumn","flex3","order_info","ordernum","store_name","itemslength","status","alignItems","buttonContainer","button","m_10","mapStateToProps","list","searchResult","generalSettings","user","settings","updateAsync","retriveData","mapDispatchToProps"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA6BC,MAA7B,QAA0C,OAA1C;;;;;;;;;;;;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,mBAAT;AACA,OAAOC,OAAP,MAAoB,iCAApB;AACA,SAASC,YAAT,EAAwBC,WAAxB;AACA,SAASC,OAAT,EAAmBC,OAAnB;AACA,SAASC,iBAAT;AACA,OAAOC,YAAP;AACA,OAAOC,MAAP;AAGA,IAAIC,iBAAiB,GAAG,IAAxB;AACA,IAAIC,kBAAkB,GAAG,KAAzB;AACA,IAAIC,gBAAgB,GAAG,KAAvB;AACA,IAAIC,oBAAoB,GAAG,KAA3B;AACA,IAAIC,QAAQ,GAAG,KAAf;AACA,IAAIC,eAAe,GAAG,IAAtB;;IAEMC,S;;;;;AACJ,qBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;;AADiB,UA8BnBC,iBA9BmB,GA8BC;AAAA;AAAA;AAAA;AAAA;AAClB,oBAAKC,QAAL,CAAc;AAACC,gBAAAA,OAAO,EAAE;AAAV,eAAd;;AACA,oBAAKC,MAAL;;AAFkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KA9BD;;AAAA,UAoCnBA,MApCmB,GAoCV,YAAM;AACb,UAAGC,QAAQ,CAACC,EAAT,KAAgB,KAAhB,IAAyBD,QAAQ,CAACC,EAAT,KAAgB,SAA5C,EAAsD;AACpD,cAAKC,eAAL;AACD,OAFD,MAEK;AACH,cAAKC,OAAL;AACD;AACF,KA1CkB;;AAAA,UA6CnBD,eA7CmB,GA6CD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACatB,OAAO,CAACwB,KAAR,EADb;;AAAA;AACVC,cAAAA,cADU;;AAEhB,kBAAGA,cAAc,CAACC,WAAlB,EAA8B;AAC5B,sBAAKH,OAAL;AACD,eAFD,MAEK;AACH,sBAAKN,QAAL,CAAc;AAACU,kBAAAA,YAAY,EAAE;AAAf,iBAAd;AACD;;AANe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KA7CC;;AAAA,UAuDnBJ,OAvDmB,GAuDT,YAAM;AACd,YAAKR,KAAL,CAAWd,YAAX,CAAwB,MAAK2B,KAAL,CAAWC,IAAnC;;AACArB,MAAAA,iBAAiB,GAAG,KAApB;AACD,KA1DkB;;AAAA,UA6DnBsB,aA7DmB,GA6DH,YAAM;AACpB,YAAKF,KAAL,CAAWV,OAAX,KAAuB,KAAvB,IAAiC,MAAKa,WAAL,CAAiBC,OAAjB,CAAyBC,KAAzB,EAAjC;AACD,KA/DkB;;AAAA,UAkEnBC,MAlEmB,GAkEV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAECC,YAAY,CAACC,UAAb,CAAwB,cAAxB,CAFD;;AAAA;AAGL,oBAAKrB,KAAL,CAAWsB,UAAX,CAAsBC,KAAtB,CAA4B;AAACC,gBAAAA,KAAK,EAAE,CAAR;AAAWC,gBAAAA,MAAM,EAAE,CAAC;AAAEC,kBAAAA,IAAI,EAAE;AAAR,iBAAD;AAAnB,eAA5B;;AAHK;AAAA;;AAAA;AAAA;AAAA;AAKLC,cAAAA,KAAK,CAAC,oCAAD,CAAL;;AALK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAlEU;;AAAA,UA4EnBC,YA5EmB,GA4EJ,UAACF,IAAD,EAAQG,KAAR,EAAkB;AAC/B,UAAIC,QAAQ,GAAI,MAAKjB,KAAL,CAAWiB,QAA3B;;AACA,UAAGJ,IAAI,KAAK,aAAZ,EACA;AACEI,QAAAA,QAAQ,CAAC,OAAD,CAAR,GAAoBD,KAApB;AACD;;AACD,YAAK3B,QAAL,CAAc;AAAC4B,QAAAA,QAAQ,EAARA;AAAD,OAAd;AACD,KAnFkB;;AAAA,UAqHnBC,aArHmB,GAqHH,UAACC,IAAD,EAAS;AACvB,UAAGA,IAAI,CAACC,SAAL,KAAmB,IAAtB,EAA2B;AACzBnC,QAAAA,eAAe,GAAG,IAAlB;;AACA,cAAKE,KAAL,CAAWsB,UAAX,CAAsBY,QAAtB,CAA+B,cAA/B,EAAgD;AAACpB,UAAAA,IAAI,EAAEkB,IAAI,CAACC,SAAL,CAAenB;AAAtB,SAAhD;AACD;AACF,KA1HkB;;AAAA,UA6HnBqB,WA7HmB,GA6HL,YAAM;AAClB,UAAIL,QAAQ,GAAG,MAAKjB,KAAL,CAAWiB,QAA1B;;AACA,YAAK9B,KAAL,CAAWhB,mBAAX,CAA+B8C,QAA/B;;AACApC,MAAAA,kBAAkB,GAAG,KAArB;AACD,KAjIkB;;AAEjB,UAAKmB,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAC;AACH,kBAAU,UADP;AAEH,iBAAS,MAFN;AAGH,iBAAS,GAHN;AAIH,kBAAU,GAJP;AAKH,eAAO,KALJ;AAMH,iBAAS;AANN,OADM;AASXgB,MAAAA,QAAQ,EAAC;AACP,iBAAS,EADF;AAEP,iBAAS,cAFF;AAGP,cAAM,IAHC;AAIP,kBAAU,IAJH;AAKP,0BAAkB,IALX;AAMP,eAAO;AANA,OATE;AAiBXM,MAAAA,iBAAiB,EAAG,EAjBT;AAkBXC,MAAAA,UAAU,EAAE,EAlBD;AAmBXC,MAAAA,iBAAiB,EAAE,EAnBR;AAoBX1B,MAAAA,YAAY,EAAE,iBApBH;AAqBXT,MAAAA,OAAO,EAAE,KArBE;AAsBXoC,MAAAA,WAAW,EAAE;AAtBF,KAAb;AAyBA,UAAKvB,WAAL,GAAmBpC,KAAK,CAAC4D,SAAN,EAAnB;AA3BiB;AA4BlB;;;;WAyDD,8BAAqB;AACnB,UAAIC,SAAS,GAAG,KAAKzC,KAArB;AACA,UAAI8B,QAAQ,GAAG,KAAKjB,KAAL,CAAWiB,QAA1B;AACA,UAAIK,WAAW,GAAI,KAAKnC,KAAL,CAAW0C,mBAA9B;AACA,UAAIC,UAAU,GAAGR,WAAW,IAAIA,WAAW,CAACrB,IAA5C;AACA,UAAI8B,MAAM,GAAI,KAAd;;AAGA,UAAG,KAAK5C,KAAL,IAAc,KAAKA,KAAL,CAAW6C,UAAzB,IAAuC,KAAKhC,KAAL,CAAWyB,iBAAX,KAAiC,KAAKtC,KAAL,CAAW6C,UAAtF,EAAiG;AAC/FpD,QAAAA,iBAAiB,GAAG,IAApB;AACAqC,QAAAA,QAAQ,CAAC,OAAD,CAAR,GAAoB,EAApB;AACAc,QAAAA,MAAM,GAAG,IAAT;AACA,aAAK1C,QAAL,CAAc;AAAEoC,UAAAA,iBAAiB,EAAEG,SAAS,CAACI,UAA/B;AACEC,UAAAA,MAAM,EAAEL,SAAS,CAACI,UAAV,CAAqBC,MAD/B;AAEEhB,UAAAA,QAAQ,EAARA,QAFF;AAGE3B,UAAAA,OAAO,EAAE;AAHX,SAAd;AAKA,aAAKY,aAAL;AACD;;AAGD,UAAGjB,eAAe,KAAK,IAApB,IAA4B,KAAKE,KAAjC,IAA0C,KAAKA,KAAL,CAAW0C,mBAArD,IAA4E,KAAK1C,KAAL,CAAW0C,mBAAX,KAAmC,KAAK7B,KAAL,CAAWsB,WAA7H,EAAyI;AACvIzC,QAAAA,kBAAkB,GAAG,IAArB;AACAI,QAAAA,eAAe,GAAG,KAAlB;AACAgC,QAAAA,QAAQ,CAAC,OAAD,CAAR,GAAoB,EAApB;AACA,aAAK5B,QAAL,CAAc;AAAC4C,UAAAA,MAAM,EAAEL,SAAS,CAACC,mBAAV,CAA8B5B,IAA9B,CAAmCiC,KAA5C;AAAoDjB,UAAAA,QAAQ,EAARA,QAApD;AAA+DkB,UAAAA,YAAY,EAAE,KAAKhD,KAAL,CAAW0C;AAAxF,SAAd;AACA,aAAK3B,aAAL;AACD;AAEF;;;WAwBD,gCAAsB;AACpBtB,MAAAA,iBAAiB,GAAG,KAApB;AACAC,MAAAA,kBAAkB,GAAG,KAArB;AACAG,MAAAA,QAAQ,GAAG,KAAX;AACD;;;WAED,kBAAS;AAAA;;AACP,aACE,oBAAC,YAAD;AAAc,QAAA,KAAK,EAAEN,YAAY,CAAC0D,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEI,KAAKpC,KAAL,CAAWV,OAAX,GAEE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAC+C,UAAAA,IAAI,EAAE,CAAP;AAAWC,UAAAA,cAAc,EAAE;AAA3B,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,iBAAD;AAAmB,QAAA,IAAI,EAAC,OAAxB;AAAgC,QAAA,KAAK,EAAC,SAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACC,UAAAA,QAAQ,EAAE,EAAX;AAAgBC,UAAAA,UAAU,EAAE,GAA5B;AAAkCC,UAAAA,SAAS,EAAE;AAA7C,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAsE,KAAKzC,KAAL,CAAW0B,WAAjF,CAFF,CAFF,GAOE,0CACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEhD,YAAY,CAACgE,gBAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE,CAAChE,YAAY,CAACgE,gBAAd,EAAgChE,YAAY,CAACiE,KAA7C,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AAAW,QAAA,WAAW,EAAC,sBAAvB;AACW,QAAA,IAAI,EAAC,aADhB;AAEW,QAAA,SAAS,EAAE,IAFtB;AAGW,QAAA,GAAG,EAAE,KAAKxC,WAHrB;AAIW,QAAA,KAAK,EAAE,KAAKH,KAAL,CAAWiB,QAAX,CAAoB2B,KAJtC;AAKW,QAAA,YAAY,EAAE,sBAACC,IAAD,EAAU;AAAC,UAAA,MAAI,CAAC9B,YAAL,CAAkB,aAAlB,EAAiC8B,IAAjC;AAAuC,SAL3E;AAMW,QAAA,eAAe,EAAE,KAAKvB,WAAL,CAAiBwB,IAAjB,CAAsB,IAAtB,CAN5B;AAOW,QAAA,KAAK,EAAEnE,MAAM,CAACoE,QAPzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,CADF,EAcG,KAAK5D,KAAL,CAAW6C,UAAX,IAAyB,KAAKhC,KAAL,CAAWiC,MAApC,IACA,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE,KAAKjC,KAAL,CAAWiC,MAAX,CAAkBe,MAAlB,GAA2B,CAA3B,GAEC,oBAAC,UAAD;AAAY,QAAA,KAAK,EAAErE,MAAM,CAACsE,aAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEI,KAAKjD,KAAL,CAAWiC,MAAX,IAAqB,KAAKjC,KAAL,CAAWiC,MAAX,CAAkBiB,GAAlB,CAAsB,UAAC/B,IAAD,EAAOR,KAAP,EAAiB;AAC1D,eACE,oBAAC,gBAAD;AAAkB,UAAA,GAAG,EAAEA,KAAvB;AAEkB,UAAA,WAAW,EAAE,MAAI,CAACO,aAAL,CAAmB4B,IAAnB,CAAwB,MAAxB,EAA8B3B,IAA9B,CAF/B;AAGkB,UAAA,cAAc,EAAE,IAHlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAKE,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAExC,MAAM,CAACwE,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAE,CAACzE,YAAY,CAAC0E,KAAd,EAAqBzE,MAAM,CAAC0E,WAA5B,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAE1E,MAAM,CAACkE,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAEE,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAElE,MAAM,CAACkE,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA2BlC,KAAK,GAAC,CAAjC,CAFF,CADF,EAKE,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAE,CAACjC,YAAY,CAAC4E,KAAd,EAAqB3E,MAAM,CAAC0E,WAA5B,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAE1E,MAAM,CAACkE,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEI,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAElE,MAAM,CAACkE,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA2B1B,IAAI,CAACoC,UAAL,CAAgBC,QAA3C,CAFJ,CALF,EASE,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAE,CAAC9E,YAAY,CAAC4E,KAAd,EAAqB3E,MAAM,CAAC0E,WAA5B,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAE1E,MAAM,CAACkE,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAEE,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAElE,MAAM,CAACkE,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA2B1B,IAAI,CAACoC,UAAL,CAAgBE,UAA3C,CAFF,CATF,EAaE,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAE,CAAC/E,YAAY,CAAC0E,KAAd,EAAqBzE,MAAM,CAAC0E,WAA5B,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAE1E,MAAM,CAACkE,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAElE,MAAM,CAACkE,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA2B1B,IAAI,CAACoC,UAAL,CAAgBG,WAA3C,CAFF,CAbF,EAiBE,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAE,CAAChF,YAAY,CAAC4E,KAAd,EAAqB3E,MAAM,CAAC0E,WAA5B,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAE1E,MAAM,CAACkE,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAElE,MAAM,CAACkE,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA2B1B,IAAI,CAACoC,UAAL,CAAgBI,MAA3C,CAFF,CAjBF,CALF,CADF;AA8BD,OA/BoB,CAFzB,CAFD,GAuCC,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACC,UAAAA,UAAU,EAAE;AAAb,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACL,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAErB,UAAAA,QAAQ,EAAE,EAAZ;AAAiBC,UAAAA,UAAU,EAAE;AAA7B,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAkD,KAAKxC,KAAL,CAAWD,YAA7D,CADK,CAzCH,CAfH,EA8DE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEpB,MAAM,CAACkF,eAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,gBAAD;AAAkB,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACtE,MAAL,EAAN;AAAA,SAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE,CAACZ,MAAM,CAACmF,MAAR,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,CADF,EAME,oBAAC,gBAAD;AAAkB,QAAA,OAAO,EAAE,KAAKxD,MAAL,CAAYwC,IAAZ,CAAiB,IAAjB,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE,CAACnE,MAAM,CAACmF,MAAR,EAAgBpF,YAAY,CAACqF,IAA7B,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,CANF,CA9DF,CATN,CADF;AAwFD;;;;EA1OqB/F,S;;AA6OxB,IAAMgG,eAAe,GAAG,SAAlBA,eAAkB,CAAChE,KAAD,EAAW;AACjC,SAAO;AACLgC,IAAAA,UAAU,EAAEhC,KAAK,CAACkC,KAAN,CAAY+B,IADnB;AAEL3C,IAAAA,WAAW,EAAEtB,KAAK,CAACkC,KAAN,CAAYgC,YAFpB;AAGLrC,IAAAA,mBAAmB,EAAE7B,KAAK,CAACiB,QAAN,CAAeK,WAH/B;AAIL6C,IAAAA,eAAe,EAAEnE,KAAK,CAACoE,IAAN,CAAWC,QAJvB;AAKLrF,IAAAA,QAAQ,EAAEgB,KAAK,CAACsE,WAAN,CAAkBC;AALvB,GAAP;AAOD,CARD;;AAUA,IAAMC,kBAAkB,GAAG;AACzBnG,EAAAA,YAAY,EAAZA,YADyB;AAEzBC,EAAAA,WAAW,EAAXA,WAFyB;AAGzBH,EAAAA,mBAAmB,EAAnBA,mBAHyB;AAIzBM,EAAAA,iBAAiB,EAAjBA,iBAJyB;AAKzBF,EAAAA,OAAO,EAAPA,OALyB;AAMzBC,EAAAA,OAAO,EAAPA;AANyB,CAA3B;AASA,eAAeN,OAAO,CAAC8F,eAAD,EAAkBQ,kBAAlB,CAAP,CAA6CtF,SAA7C,CAAf","sourcesContent":["import React, { Component  , useRef} from 'react';\nimport { View, SafeAreaView , Text, ActivityIndicator, TextInput , TouchableOpacity , ScrollView, Alert ,ListView , Platform , AsyncStorage} from 'react-native';\nimport { connect } from 'react-redux';\nimport { SearchScanpackOrder } from \"../../actions/scanpackAction\";\nimport NetInfo from \"@react-native-community/netinfo\";\nimport { GetOrderList , SearchOrder } from \"../../actions/orderActions\";\nimport { SetItem , GetItem } from \"../../actions/updateAsyncAction\";\nimport { GetGeneralSetting } from \"../../actions/userAction\";\nimport globalStyles from '../../style/global';\nimport styles from '../../style/orderlist';\n// import jsondata from \"../../../data.json\"\n\nlet ordersListSuccess = true ;\nlet searchOrderSuccess = false;\nlet searchOrderCheck = false;\nlet generalSettingsCheck = false;\nlet saveData = false;\nlet updateComponent = true;\n\nclass OrderList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data:{\n        \"filter\": \"awaiting\",\n        \"order\": \"DESC\",\n        \"limit\": \"1\",\n        \"offset\": \"0\",\n        \"app\": \"app\",\n        \"count\": 0\n      },\n      scanpack:{\n        \"input\": \"\",\n        \"state\": \"scanpack.rfo\",\n        \"id\": null,\n        \"box_id\": null,\n        \"store_order_id\": null,\n        \"app\": \"app\"\n      },\n      connection_Status : \"\",\n      updateData: [],\n      searchOrdersCheck: [],\n      errorMessage: \"No Record Found\",\n      loading: false,\n      loaderTitle: \"Loading...\"\n\n    };\n    this.searchField = React.createRef();\n  }\n\n  componentDidMount = async() => {\n    this.setState({loading: true})\n    this.hitApi()\n  }\n\n  //According to platform call the function\n  hitApi = () => {\n    if(Platform.OS === \"ios\" || Platform.OS === \"android\"){\n      this.CheckConnection()\n    }else{\n      this.apiCall()\n    }\n  }\n\n  //Check the connection for the ios and android\n  CheckConnection = async() => {\n    const connectionInfo = await NetInfo.fetch();\n    if(connectionInfo.isConnected){\n      this.apiCall();\n    }else{\n      this.setState({errorMessage: \"Please check your internet connection\"})\n    }\n  }\n\n  //Call the api to fetch the data from backend\n  apiCall = () => {\n    this.props.GetOrderList(this.state.data);\n    ordersListSuccess = false\n  }\n\n  //Set focus on the field\n  setFocusField = () => {\n    this.state.loading === false &&  this.searchField.current.focus();\n  }\n\n  //Logout function\n  logout = async() =>{\n    try {\n      await AsyncStorage.removeItem(\"access_token\")\n      this.props.navigation.reset({index: 0, routes: [{ name: 'SignIn' }] })\n    } catch (e) {\n      alert('Failed to clear the async storage.')\n    }\n  }\n\n  //Handle the input for the search order field\n  handleChange = (name , value) => {\n    let scanpack =  this.state.scanpack;\n    if(name === \"searchOrder\")\n    {\n      scanpack[\"input\"] = value\n    }\n    this.setState({scanpack})\n  }\n\n  componentDidUpdate (){\n    let nextProps = this.props\n    let scanpack = this.state.scanpack\n    let searchOrder =  this.props.SearchScanPackOrder;\n    let searchData = searchOrder && searchOrder.data\n    let upList =  false\n    \n    // Update the order list  \n    if(this.props && this.props.ordersList && this.state.searchOrdersCheck !== this.props.ordersList){\n      ordersListSuccess = true\n      scanpack[\"input\"] = \"\"\n      upList = true\n      this.setState({ searchOrdersCheck: nextProps.ordersList ,\n                      orders: nextProps.ordersList.orders ,\n                      scanpack,\n                      loading: false\n                    })\n      this.setFocusField()\n    }\n\n    //update the search order in state\n    if(updateComponent === true && this.props && this.props.SearchScanPackOrder && this.props.SearchScanPackOrder !== this.state.searchOrder){\n      searchOrderSuccess = true\n      updateComponent = false\n      scanpack[\"input\"] = \"\"\n      this.setState({orders: nextProps.SearchScanPackOrder.data.order , scanpack , seaarchOrder: this.props.SearchScanPackOrder})\n      this.setFocusField()\n    }\n\n  }\n\n  //Redirect ot the scanpack Item page \n  searchProduct = (item) =>{\n    if(item.scan_hash !== null){\n      updateComponent = true\n      this.props.navigation.navigate(\"ScanPackItem\" , {data: item.scan_hash.data})\n    }\n  }\n\n  //Search the order when useer hit the enter on the field\n  searchOrder = () => {\n    let scanpack = this.state.scanpack\n    this.props.SearchScanpackOrder(scanpack)\n    searchOrderSuccess = false\n  }\n\n  \n  // itemDetail = (item) => {\n  //   if(item){\n  //     this.props.navigation.navigate(\"OrderDetail\" , {item})\n  //   }\n  // }\n\n  componentWillUnmount(){\n    ordersListSuccess = false;\n    searchOrderSuccess = false;\n    saveData = false;\n  }\n\n  render() {\n    return (\n      <SafeAreaView style={globalStyles.flex1}>\n        {\n          this.state.loading\n            ?\n            <View style={{flex: 1 , justifyContent: \"center\"}}>\n              <ActivityIndicator size=\"large\" color=\"#336599\"/>\n              <Text style={{fontSize: 13 , fontWeight: 500 , textAlign: \"center\"}}>{this.state.loaderTitle}</Text>\n            </View>\n            :\n            <>        \n              <View style={globalStyles.flexDirectionRow}>\n                <View style={[globalStyles.flexDirectionRow, globalStyles.flex7]}>\n                  <TextInput placeholder=\"Type order to search\"\n                             name=\"searchOrder\"\n                             autoFocus={true}\n                             ref={this.searchField}\n                             value={this.state.scanpack.input}\n                             onChangeText={(text) => {this.handleChange(\"searchOrder\", text)}}\n                             onSubmitEditing={this.searchOrder.bind(this)}\n                             style={styles.inputBox}/>\n                </View>\n              </View>\n              { \n              \tthis.props.ordersList && this.state.orders &&\n              \t<View>\n      \t\t        {\n      \t\t        \tthis.state.orders.length > 0\n      \t\t        \t?\n      \t\t\t\t        <ScrollView style={styles.listContainer}>\n      \t\t\t\t          {\n      \t\t\t\t            this.state.orders && this.state.orders.map((item, index) => {\n      \t\t\t\t              return(\n      \t\t\t\t                <TouchableOpacity key={index}\n      \t\t\t\t                                  /*onPress={this.itemDetail.bind(this, item)}*/\n      \t\t\t\t                                  onLongPress={this.searchProduct.bind(this, item)}\n      \t\t\t\t                                  delayLongPress={1000}\n      \t\t\t\t                                >\n      \t\t\t\t                  <View style={styles.orderRow}>\n      \t\t\t\t                    <View style={[globalStyles.flex2, styles.orderColumn]}>\n      \t\t\t\t                      <Text style={styles.text}>S.No.</Text>\n      \t\t\t\t                      <Text style={styles.text}>{index+1}</Text>\n      \t\t\t\t                    </View>\n      \t\t\t\t                    <View style={[globalStyles.flex3, styles.orderColumn]}>\n      \t\t\t\t                      <Text style={styles.text}>Order #</Text>\n      \t\t\t\t                        <Text style={styles.text}>{item.order_info.ordernum}</Text>\n      \t\t\t\t                    </View>\n      \t\t\t\t                    <View style={[globalStyles.flex3, styles.orderColumn]}>\n      \t\t\t\t                      <Text style={styles.text}>Store</Text>\n      \t\t\t\t                      <Text style={styles.text}>{item.order_info.store_name}</Text>\n      \t\t\t\t                    </View>\n      \t\t\t\t                    <View style={[globalStyles.flex2, styles.orderColumn]}>\n      \t\t\t\t                      <Text style={styles.text}>Item</Text>\n      \t\t\t\t                      <Text style={styles.text}>{item.order_info.itemslength}</Text>\n      \t\t\t\t                    </View>\n      \t\t\t\t                    <View style={[globalStyles.flex3, styles.orderColumn]}>\n      \t\t\t\t                      <Text style={styles.text}>Status</Text>\n      \t\t\t\t                      <Text style={styles.text}>{item.order_info.status}</Text>\n      \t\t\t\t                    </View>\n      \t\t\t\t                  </View>\n      \t\t\t\t                </TouchableOpacity>\n      \t\t\t\t              )\n      \t\t\t\t            })\n      \t\t\t\t          }\n      \t\t\t\t        </ScrollView>\n      \t\t\t\t    :\n      \t\t        \t\t<View style={{alignItems: \"center\"}}>\n      \t\t\t\t\t\t\t<Text style={{ fontSize: 16 , fontWeight: 500 }}>{this.state.errorMessage}</Text>\n      \t\t\t\t\t\t</View>\n      \t\t        }\n          \t\t    </View>\n          \t\t}\n              <View style={styles.buttonContainer}>\n                <TouchableOpacity onPress={() => this.hitApi()}>\n                  <Text style={[styles.button]}>\n                    All Orders\n                  </Text>\n                </TouchableOpacity>\n                <TouchableOpacity onPress={this.logout.bind(this)}>\n                  <Text style={[styles.button, globalStyles.m_10]}>\n                    Logout\n                  </Text>\n                </TouchableOpacity>\n              </View>\n            </>\n        }      \n      </SafeAreaView>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    ordersList: state.order.list,\n    searchOrder: state.order.searchResult,\n    SearchScanPackOrder: state.scanpack.searchOrder,\n    generalSettings: state.user.settings,\n    saveData: state.updateAsync.retriveData\n  }\n};\n\nconst mapDispatchToProps = {\n  GetOrderList,\n  SearchOrder,\n  SearchScanpackOrder,\n  GetGeneralSetting,\n  SetItem,\n  GetItem\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OrderList)\n"]},"metadata":{},"sourceType":"module"}
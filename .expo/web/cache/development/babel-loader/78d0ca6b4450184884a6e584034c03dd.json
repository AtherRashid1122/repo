{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\DELL PC\\\\Downloads\\\\GroovePacker\\\\src\\\\components\\\\orders\\\\items_detail.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport styles from \"../../style/orderdetail\";\nimport { connect } from \"react-redux\";\nimport { UpdateOrderQuantity } from \"../../actions/orderActions\";\nimport restart from \"../../../assets/1024x1024.png\";\nimport { FlatGrid, SectionGrid } from \"react-native-super-grid\";\nimport { Entypo } from \"@expo/vector-icons\";\nimport { Poppins_300Light } from \"@expo-google-fonts/poppins\";\nimport { isLoaded } from \"expo-font\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nvar windowWidth = Dimensions.get(\"window\").width;\n\nvar ItemsDetail = function (_Component) {\n  _inherits(ItemsDetail, _Component);\n\n  var _super = _createSuper(ItemsDetail);\n\n  function ItemsDetail(props) {\n    var _this;\n\n    _classCallCheck(this, ItemsDetail);\n\n    _this = _super.call(this, props);\n\n    _this.changeEdit = function () {\n      _this.setState({\n        editable: !_this.state.editable\n      });\n    };\n\n    _this.state = {\n      items: [],\n      unTouch: true,\n      loading: true,\n      editable: false,\n      instruction: false\n    };\n    return _this;\n  }\n\n  _createClass(ItemsDetail, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props$items, _this$props$items2, _this$props$items2$it;\n\n      if (this.state.items.length == 0) {\n        this.setState({\n          loading: false\n        });\n      }\n\n      if (this.props.items && (_this$props$items = this.props.items) != null && _this$props$items.items && (_this$props$items2 = this.props.items) != null && (_this$props$items2$it = _this$props$items2.items) != null && _this$props$items2$it.length) {\n        console.log(\"*********************\");\n        console.log(\"this.props.items.items\", this.props.items.items);\n        console.log(\"*********************\");\n        this.setState({\n          items: this.props.items.items\n        });\n        this.setState({\n          loading: false\n        });\n      }\n    }\n  }, {\n    key: \"Capitalize\",\n    value: function Capitalize(str) {\n      return str.charAt(0).toUpperCase() + str.slice(1);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var content = this.props.items && this.props.items.items;\n      return React.createElement(ScrollView, {\n        style: styles.itemDetailContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 7\n        }\n      }, Platform.OS === \"web\" ? React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }\n      }, React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: {\n          backgroundColor: \"#000\",\n          height: 20,\n          width: \"100%\",\n          shadowColor: \"#000\",\n          shadowOffset: {\n            width: 1,\n            height: 10\n          },\n          shadowOpacity: 3,\n          shadowRadius: 10,\n          elevation: 5\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 15\n        }\n      }), React.createElement(View, {\n        style: {},\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 15\n        }\n      }, this.state.loading == false && this.state.items && this.state.items.length ? React.createElement(Text, {\n        style: {\n          color: \"#67869B\",\n          fontSize: 22,\n          fontWeight: \"bold\",\n          paddingHorizontal: 15,\n          fontFamily: \"Poppins_700Bold\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 19\n        }\n      }, \"Order # \", this.state.items[0].iteminfo.order_id) : React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 19\n        }\n      }, \"no id\")), React.createElement(View, {\n        style: {\n          paddingHorizontal: 15,\n          backgroundColor: \"rgba(104, 135, 156, 0.4)\",\n          borderRadius: 10,\n          marginHorizontal: 25,\n          marginTop: 20,\n          marginBottom: 10,\n          shadowColor: \"#50708b\",\n          shadowOffset: {\n            width: 1,\n            height: 1\n          },\n          shadowRadius: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 15\n        }\n      }, React.createElement(View, {\n        style: {\n          alignSelf: \"flex-end\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          flexDirection: \"row\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 17\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: {\n          flexDirection: \"row\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          paddingRight: 30\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 19\n        }\n      }, React.createElement(Image, {\n        style: {\n          width: 70,\n          height: 70,\n          resizeMode: \"cover\"\n        },\n        source: require(\"../../../assets/plus.png\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 21\n        }\n      }), React.createElement(Text, {\n        style: {\n          fontFamily: \"Poppins_800ExtraBold\",\n          color: \"white\",\n          fontSize: 16,\n          textShadowColor: \"#000\",\n          textShadowOffset: {\n            width: 1,\n            height: 1\n          },\n          textShadowRadius: 5,\n          elevation: 5\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 21\n        }\n      }, \"Add Items\")), React.createElement(TouchableOpacity, {\n        style: {\n          marginRight: 10,\n          borderWidth: 1,\n          borderStyle: \"solid\",\n          borderColor: \"#fff\",\n          borderRadius: 30,\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          height: 30,\n          shadowColor: \"#2bfac3\",\n          shadowOffset: {\n            width: 0,\n            height: 0.5\n          },\n          shadowRadius: 8,\n          elevation: 5,\n          shadowOpacity: 0.5\n        },\n        onPress: function onPress() {\n          return _this2.props.updateBasicInfo();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 19\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: \"white\",\n          paddingHorizontal: 10,\n          fontWeight: \"bold\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 21\n        }\n      }, \"Save & Close\")), React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return _this2.props.updateBasicInfo();\n        },\n        style: {\n          marginRight: 10,\n          borderWidth: 1,\n          borderStyle: \"solid\",\n          borderColor: \"#fff\",\n          borderRadius: 30,\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          height: 30,\n          shadowColor: \"#e853fa\",\n          shadowOffset: {\n            width: 0,\n            height: 0.5\n          },\n          shadowRadius: 8,\n          elevation: 5,\n          shadowOpacity: 0.5\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 19\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: \"white\",\n          paddingHorizontal: 10,\n          fontWeight: \"bold\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 21\n        }\n      }, \"Cancel\"))), React.createElement(View, {\n        horizontal: true,\n        style: {\n          backgroundColor: 'red',\n          flex: 1,\n          borderRadius: 15,\n          marginBottom: 50\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        style: [styles.itemContainer],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 19\n        }\n      }, React.createElement(View, {\n        style: {\n          flexDirection: \"row\",\n          paddingBottom: 10,\n          width: '100%',\n          justifyContent: \"space-around\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 21\n        }\n      }, React.createElement(View, {\n        style: [styles.itemView, {\n          backgroundColor: 'orange'\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 23\n        }\n      }, React.createElement(Text, {\n        style: [styles.gridHeader],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 25\n        }\n      }, \"Product Name\")), React.createElement(View, {\n        style: [styles.itemView],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 23\n        }\n      }, React.createElement(Text, {\n        style: [styles.gridHeader],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 25\n        }\n      }, \"SKU\")), React.createElement(View, {\n        style: [styles.itemView],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 23\n        }\n      }, React.createElement(Text, {\n        style: [styles.gridHeader],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 25\n        }\n      }, \"Status\")), React.createElement(View, {\n        style: [styles.itemView],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 23\n        }\n      }, React.createElement(Text, {\n        style: [styles.gridHeader],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 25\n        }\n      }, \"Barcode\")), React.createElement(View, {\n        style: [styles.itemView],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 23\n        }\n      }, React.createElement(Text, {\n        style: [styles.gridHeader],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 25\n        }\n      }, \"QTY Ordered\")), React.createElement(View, {\n        style: [styles.itemView],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 23\n        }\n      }, React.createElement(Text, {\n        style: [styles.gridHeader],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 25\n        }\n      }, \"Location l\")), React.createElement(View, {\n        style: [styles.itemView, {\n          width: 100\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 23\n        }\n      }, React.createElement(Text, {\n        style: styles.gridHeader,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 25\n        }\n      }, \"QOH\")), this.state.instruction ? React.createElement(View, {\n        style: [styles.itemView],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 25\n        }\n      }, React.createElement(Text, {\n        style: styles.gridHeader,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 27\n        }\n      }, \"Available INV\")) : React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 25\n        }\n      }))))))) : React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 498,\n          columnNumber: 11\n        }\n      }, React.createElement(View, {\n        style: {\n          flex: 1,\n          flexDirection: \"row\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 499,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: {\n          flex: 2,\n          flexDirection: \"row\",\n          justifyContent: \"flex-start\",\n          margin: 5,\n          marginLeft: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 500,\n          columnNumber: 15\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return _this2.props.addOrderItem(items);\n        },\n        style: {\n          borderWidth: 1,\n          borderStyle: \"solid\",\n          borderColor: \"#336597\",\n          backgroundColor: \"#336599\",\n          justifyContent: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 509,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: \"white\",\n          padding: 4,\n          fontSize: 13,\n          fontWeight: \"bold\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 519,\n          columnNumber: 19\n        }\n      }, \"Add Item\")), React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return _this2.props.removeItems();\n        },\n        style: this.props.removeIds && this.props.removeIds.length > 0 ? {\n          marginRight: 2,\n          borderWidth: 1,\n          borderStyle: \"solid\",\n          borderColor: \"#336597\",\n          backgroundColor: \"#961F1F\",\n          justifyContent: \"center\"\n        } : {\n          marginRight: 2,\n          borderWidth: 1,\n          borderStyle: \"solid\",\n          borderColor: \"#336597\",\n          backgroundColor: \"#c48787\",\n          justifyContent: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 530,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: \"white\",\n          padding: 4,\n          fontSize: 13,\n          fontWeight: \"bold\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 552,\n          columnNumber: 19\n        }\n      }, \"Remove selected\"))), React.createElement(View, {\n        style: {\n          flex: 2,\n          flexDirection: \"row\",\n          justifyContent: \"flex-end\",\n          margin: 5\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 564,\n          columnNumber: 15\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return _this2.props.updateBasicInfo();\n        },\n        style: {\n          borderWidth: 1,\n          borderStyle: \"solid\",\n          borderColor: \"#336597\",\n          backgroundColor: \"#494848\",\n          justifyContent: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 572,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: \"white\",\n          padding: 4,\n          fontSize: 13,\n          fontWeight: \"bold\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 582,\n          columnNumber: 19\n        }\n      }, \"Cancel\")), React.createElement(TouchableOpacity, {\n        style: {\n          marginRight: 10,\n          borderWidth: 1,\n          borderStyle: \"solid\",\n          borderColor: \"#336597\",\n          backgroundColor: \"#336599\",\n          justifyContent: \"center\"\n        },\n        onPress: function onPress() {\n          return _this2.props.updateBasicInfo();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 593,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: \"white\",\n          padding: 4,\n          fontSize: 13,\n          fontWeight: \"bold\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 604,\n          columnNumber: 19\n        }\n      }, \"Save & Close\")))), items && items.length > 0 && items.map(function (item, index) {\n        return React.createElement(View, {\n          key: index,\n          style: _this2.props.removeIds.includes(item.iteminfo.id) && {\n            backgroundColor: \"#799cbf\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 621,\n            columnNumber: 19\n          }\n        }, React.createElement(View, {\n          style: {\n            flex: 1,\n            flexDirection: \"row\",\n            borderWidth: 1,\n            borderColor: \"#000\",\n            borderRadius: 10,\n            width: \"96%\",\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n            padding: 5\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 629,\n            columnNumber: 21\n          }\n        }, React.createElement(View, {\n          style: {\n            width: \"20%\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 642,\n            columnNumber: 23\n          }\n        }, React.createElement(TouchableOpacity, {\n          onPress: function onPress() {\n            return _this2.props.removeOrderItem(item);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 643,\n            columnNumber: 25\n          }\n        }, React.createElement(Image, {\n          style: {\n            position: \"relative\",\n            width: \"100%\",\n            height: \"100%\",\n            resizeMode: \"contain\",\n            marginBottom: 2\n          },\n          source: {\n            uri: item.image !== null ? item.image : \"\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 646,\n            columnNumber: 27\n          }\n        }))), React.createElement(View, {\n          style: {\n            width: \"80%\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 660,\n            columnNumber: 23\n          }\n        }, React.createElement(View, {\n          style: {\n            flex: 1,\n            flexDirection: \"row\",\n            alignItem: \"center\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 661,\n            columnNumber: 25\n          }\n        }, React.createElement(View, {\n          style: {\n            flex: 2,\n            flexDirection: \"row\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 668,\n            columnNumber: 27\n          }\n        }, React.createElement(Text, {\n          style: {\n            padding: 5\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 669,\n            columnNumber: 29\n          }\n        }, \"QTY\"), React.createElement(TextInput, {\n          keyboardType: \"numeric\",\n          style: {\n            borderWidth: 1,\n            borderRadius: 10,\n            width: 50,\n            paddingLeft: 10,\n            paddingRight: 5\n          },\n          value: item.iteminfo.qty && JSON.stringify(item.iteminfo.qty),\n          onChangeText: function onChangeText(text) {\n            return _this2.props.handleChange(text, item);\n          },\n          onBlur: function onBlur() {\n            return _this2.props.updateQuantity(item);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 670,\n            columnNumber: 29\n          }\n        })), React.createElement(View, {\n          style: {\n            flex: 4,\n            justifyContent: \"center\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 689,\n            columnNumber: 27\n          }\n        }, React.createElement(TouchableOpacity, {\n          style: styles.value,\n          onPress: function onPress() {\n            return _this2.props.removeOrderItem(item);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 690,\n            columnNumber: 29\n          }\n        }, React.createElement(Text, {\n          numberOfLines: 1,\n          ellipsizeMode: \"tail\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 694,\n            columnNumber: 31\n          }\n        }, \" \", item.productinfo.name, \" \")))), React.createElement(TouchableOpacity, {\n          onPress: function onPress() {\n            return _this2.props.removeOrderItem(item);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 702,\n            columnNumber: 25\n          }\n        }, React.createElement(View, {\n          style: {\n            flex: 1,\n            flexDirection: \"row\",\n            alignItem: \"center\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 705,\n            columnNumber: 27\n          }\n        }, React.createElement(View, {\n          style: {\n            flex: 2,\n            flexDirection: \"row\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 712,\n            columnNumber: 29\n          }\n        }, React.createElement(Text, {\n          numberOfLines: 1,\n          ellipsizeMode: \"tail\",\n          style: {\n            padding: 5\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 713,\n            columnNumber: 31\n          }\n        }, item.sku)), React.createElement(View, {\n          style: {\n            flex: 2,\n            flexDirection: \"row\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 721,\n            columnNumber: 29\n          }\n        }, item.productinfo.custom_product_1 !== \"\" && React.createElement(Text, {\n          numberOfLines: 1,\n          ellipsizeMode: \"tail\",\n          style: {\n            padding: 5\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 723,\n            columnNumber: 33\n          }\n        }, \"C1: \", item.productinfo.custom_product_1)), React.createElement(View, {\n          style: {\n            flex: 4,\n            justifyContent: \"center\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 732,\n            columnNumber: 29\n          }\n        }, React.createElement(Text, {\n          numberOfLines: 1,\n          ellipsizeMode: \"tail\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 733,\n            columnNumber: 31\n          }\n        }, \" \", item.barcode, \" \")))))));\n      })));\n    }\n  }]);\n\n  return ItemsDetail;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {};\n};\n\nvar mapDispatchToProps = {\n  UpdateOrderQuantity: UpdateOrderQuantity\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(ItemsDetail);","map":{"version":3,"sources":["C:/Users/DELL PC/Downloads/GroovePacker/src/components/orders/items_detail.js"],"names":["React","Component","styles","connect","UpdateOrderQuantity","restart","FlatGrid","SectionGrid","Entypo","Poppins_300Light","isLoaded","LinearGradient","windowWidth","Dimensions","get","width","ItemsDetail","props","changeEdit","setState","editable","state","items","unTouch","loading","instruction","length","console","log","str","charAt","toUpperCase","slice","content","itemDetailContainer","Platform","OS","backgroundColor","height","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","color","fontSize","fontWeight","paddingHorizontal","fontFamily","iteminfo","order_id","borderRadius","marginHorizontal","marginTop","marginBottom","alignSelf","justifyContent","alignItems","flexDirection","paddingRight","resizeMode","require","textShadowColor","textShadowOffset","textShadowRadius","marginRight","borderWidth","borderStyle","borderColor","updateBasicInfo","flex","itemContainer","paddingBottom","itemView","gridHeader","margin","marginLeft","addOrderItem","padding","removeItems","removeIds","map","item","index","includes","id","removeOrderItem","position","uri","image","alignItem","paddingLeft","qty","JSON","stringify","text","handleChange","updateQuantity","value","productinfo","name","sku","custom_product_1","barcode","mapStateToProps","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  View,\n  Text,\n  TextInput,\n  Image,\n  TouchableOpacity,\n  Platform,\n  ScrollView,\n  Dimensions,\n  FlatList\n} from \"react-native\";\nimport styles from \"../../style/orderdetail\";\nimport { connect } from \"react-redux\";\nimport { UpdateOrderQuantity } from \"../../actions/orderActions\";\nimport restart from \"../../../assets/1024x1024.png\";\nimport { FlatGrid, SectionGrid } from \"react-native-super-grid\";\nimport { Entypo } from \"@expo/vector-icons\";\nimport { Poppins_300Light } from \"@expo-google-fonts/poppins\";\nimport { isLoaded } from \"expo-font\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nconst windowWidth = Dimensions.get(\"window\").width;\n// import ModalDropdown from 'react-native-modal-dropdown';\n\nclass ItemsDetail extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: [],\n      unTouch: true,\n      loading: true,\n      editable: false,\n      instruction: false,\n    };\n  }\n  componentDidMount() {\n    // console.log(\"item detail props\", this.props.items?.items[0]?.iteminfo?.order_id);\n\n    if (this.state.items.length == 0) {\n      this.setState({ loading: false });\n    }\n\n    if (\n      this.props.items &&\n      this.props.items?.items &&\n      this.props.items?.items?.length\n    ) {\n      console.log(\"*********************\");\n      console.log(\"this.props.items.items\", this.props.items.items);\n      console.log(\"*********************\");\n      this.setState({ items: this.props.items.items });\n      this.setState({ loading: false });\n      // setState(this.props.items.items);\n      // setLoad(true);\n    }\n  }\n\n  Capitalize(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n  }\n  changeEdit = () => {\n    this.setState({ editable: !this.state.editable });\n    // console.log(\"inside...\", this.state.items);\n  };\n\n  render() {\n    let content = this.props.items && this.props.items.items;\n\n\n    return (\n      <ScrollView style={styles.itemDetailContainer}>\n        {Platform.OS === \"web\" ? (\n\n\n          <React.Fragment>\n\n            <View>\n              <View\n                style={{\n                  backgroundColor: \"#000\",\n                  height: 20,\n                  width: \"100%\",\n                  shadowColor: \"#000\",\n                  shadowOffset: {\n                    width: 1,\n                    height: 10,\n                  },\n                  shadowOpacity: 3,\n                  shadowRadius: 10,\n\n                  elevation: 5,\n                }}\n              ></View>\n              <View style={{}}>\n                {this.state.loading == false &&\n                this.state.items &&\n                this.state.items.length ? (\n                  // this.state.items.map((i) => (\n                  //   <Text style={{ color: \"white\", fontSize: 100 }}>\n                  //     {i?.iteminfo?.order_id}\n                  //   </Text>\n                  // ))\n                  <Text\n                    style={{\n                      color: \"#67869B\",\n                      fontSize: 22,\n                      fontWeight: \"bold\",\n                      paddingHorizontal: 15,\n                      fontFamily: \"Poppins_700Bold\",\n                    }}\n                  >\n                    Order # {this.state.items[0].iteminfo.order_id}\n                  </Text>\n                ) : (\n                  <Text>no id</Text>\n                )}\n              </View>\n\n              <View\n                // colors={[\"#22292C\", \"#68879C\", \"#68879C\", \"#22292C\"]}\n                // start={[-0.3, 0.01]}\n                style={{\n                  // overflow: \"scroll\",\n                  paddingHorizontal: 15,\n                  backgroundColor: \"rgba(104, 135, 156, 0.4)\",\n                  borderRadius: 10,\n                  marginHorizontal: 25,\n                  marginTop: 20,\n                  marginBottom: 10,\n                  // borderWidth: 1,\n                  // borderColor: \"#50708b\",\n                  shadowColor: \"#50708b\",\n                  shadowOffset: { width: 1, height: 1 },\n                  shadowRadius: 10,\n                }}\n              >\n                <View\n                  style={{\n                    alignSelf: \"flex-end\",\n                    justifyContent: \"center\",\n                    alignItems: \"center\",\n\n                    flexDirection: \"row\",\n                    // borderWidth: 1\n                  }}\n                >\n                  <TouchableOpacity\n                    style={{\n                      flexDirection: \"row\",\n                      alignItems: \"center\",\n                      justifyContent: \"center\",\n                      paddingRight: 30,\n                      // borderWidth: 1\n                    }}\n                  >\n                    <Image\n                      style={{ width: 70, height: 70, resizeMode: \"cover\" }}\n                      source={require(\"../../../assets/plus.png\")}\n                    />\n                    <Text\n                      style={{\n                        fontFamily: \"Poppins_800ExtraBold\",\n                        // fontWeight: \"bold\",\n                        color: \"white\",\n                        fontSize: 16,\n                        textShadowColor: \"#000\",\n                        textShadowOffset: { width: 1, height: 1 },\n                        textShadowRadius: 5,\n\n                        elevation: 5,\n                      }}\n                    >\n                      Add Items\n                    </Text>\n                  </TouchableOpacity>\n                  <TouchableOpacity\n                    style={{\n                      marginRight: 10,\n                      borderWidth: 1,\n                      borderStyle: \"solid\",\n                      borderColor: \"#fff\",\n                      borderRadius: 30,\n                      justifyContent: \"center\",\n                      alignItems: \"center\",\n                      // backgroundColor: \"#336599\",\n                      height: 30,\n                      shadowColor: \"#2bfac3\",\n                      shadowOffset: { width: 0, height: 0.5 },\n                      shadowRadius: 8,\n                      elevation: 5,\n                      shadowOpacity: 0.5,\n                      // box-shadow: rgb(43 250 195) 0px 1px 3px;\n                    }}\n                    onPress={() => this.props.updateBasicInfo()}\n                  >\n                    <Text\n                      style={{\n                        color: \"white\",\n                        paddingHorizontal: 10,\n                        fontWeight: \"bold\",\n                      }}\n                    >\n                      Save & Close\n                    </Text>\n                  </TouchableOpacity>\n                  <TouchableOpacity\n                    onPress={() => this.props.updateBasicInfo()}\n                    style={{\n                      marginRight: 10,\n                      borderWidth: 1,\n                      borderStyle: \"solid\",\n                      borderColor: \"#fff\",\n                      borderRadius: 30,\n                      justifyContent: \"center\",\n                      alignItems: \"center\",\n                      // backgroundColor: \"#494848\",\n                      height: 30,\n                      shadowColor: \"#e853fa\",\n                      shadowOffset: { width: 0, height: 0.5 },\n                      shadowRadius: 8,\n                      elevation: 5,\n                      shadowOpacity: 0.5,\n                    }}\n                  >\n                    <Text\n                      style={{\n                        color: \"white\",\n                        paddingHorizontal: 10,\n                        fontWeight: \"bold\",\n                      }}\n                    >\n                      Cancel\n                    </Text>\n                  </TouchableOpacity>\n                </View>\n\n                <View\n                 horizontal={true}\n \n                  style={{\n                    // overflow: \"scroll\",\n                   backgroundColor:'red',\n                    flex: 1,\n                    // marginHorizontal: 10,\n                    // backgroundColor: \"rgba(15, 39, 58, 0.4)\",\n                    borderRadius: 15,\n                    marginBottom: 50,\n                    // opacity: 0.5\n                    // width: '100%'\n                  }}\n                >\n                  <View\n                    style={[styles.itemContainer]}\n                  >\n             \n                    <View\n                      style={{\n                        flexDirection: \"row\",\n                        paddingBottom: 10,\n                        // backgroundColor:'yellow',\n                        width:'100%',\n                       \n                        justifyContent: \"space-around\",\n                                    \n                         }}\n                    >\n                  \n                      <View style={[styles.itemView,{backgroundColor:'orange'}]}>\n                        <Text\n                          style={[\n                            styles.gridHeader,\n\n                          ]}\n                        >\n                          Product Name\n                        </Text>\n                      </View>\n                      <View style={[styles.itemView,]}>\n                        <Text\n                          style={[\n                            styles.gridHeader,\n\n                          ]}\n                        >\n                          SKU\n                        </Text>\n                      </View>\n                      <View style={[styles.itemView,]}>\n                        <Text\n                          style={[\n                            styles.gridHeader,\n                            // {\n                            //   fontWeight: \"bold\",\n                            //   fontSize: 22,\n                            //   color: \"#ABB6BC\",\n                            // },\n                          ]}\n                        >\n                          Status\n                        </Text>\n                      </View>\n                      <View style={[styles.itemView, ]}>\n                        <Text\n                          style={[\n                            styles.gridHeader,\n                            // {\n                            //   fontWeight: \"bold\",\n                            //   fontSize: 22,\n                            //   color: \"#ABB6BC\",\n                            // },\n                          ]}\n                        >\n                          Barcode\n                        </Text>\n                      </View>\n                      <View style={[styles.itemView, ]}>\n                        <Text\n                          style={[\n                            styles.gridHeader,\n                            // {\n                            //   fontWeight: \"bold\",\n                            //   fontSize: 22,\n                            //   color: \"#ABB6BC\",\n                            // },\n                          ]}\n                        >\n                          QTY Ordered\n                        </Text>\n                      </View>\n                      <View style={[styles.itemView, ]}>\n                        <Text\n                          style={[\n                            styles.gridHeader,\n                            // {\n                            //   fontWeight: \"bold\",\n                            //   fontSize: 22,\n                            //   color: \"#ABB6BC\",\n                            // },\n                          ]}\n                        >\n                          Location l\n                        </Text>\n                      </View>\n                      <View style={[styles.itemView, { width: 100 }]}>\n                        <Text style={styles.gridHeader}>QOH</Text>\n                      </View>\n                      {this.state.instruction ? (\n                        <View style={[styles.itemView,]}>\n                          <Text style={styles.gridHeader}>Available INV</Text>\n                        </View>\n                      ) : (\n                        <View></View>\n                      )}\n                    </View>\n                  </View>\n\n                  {/* <FlatList\n                    // itemDimension={windowWidth}\n                    // horizontal={true}\n                    data={this.state.items}\n                    style={styles.gridView}\n                    renderItem={({ item }) => (\n                      <View style={[styles.itemContainer]}>\n                        <TouchableOpacity\n                          onPress={() => {\n                            this.props.removeIds.includes(item.iteminfo.id);\n                          }}\n                          style={[\n                            styles.itemView,\n                            { width: 50, marginHorizontal: 15 },\n                          ]}\n                        >\n                          <Image\n                            style={{\n                              width: 70,\n                              height: 70,\n                              resizeMode: \"stretch\",\n                            }}\n                            source={require(\"../../../assets/cross.png\")}\n                          />\n                        </TouchableOpacity>\n                        <View\n                          style={{\n                            flexDirection: \"row\",\n                            borderBottomWidth: 0.7,\n                            borderColor: \"rgba(250, 250, 250, .4)\",\n                            paddingVertical: 10,\n                            width: \"95%\",\n                            justifyContent: \"space-around\",\n                          }}\n                        >\n                          <View\n                            style={[\n                              styles.itemView,\n                              { width: 70, marginRight: 15 },\n                            ]}\n                          >\n                            <Image\n                              style={{\n                                width: 70,\n                                height: 70,\n                                borderRadius: 5,\n                                resizeMode: \"contain\",\n                              }}\n                              source={{ uri: item.image }}\n                            />\n                          </View>\n                          <View style={[styles.itemView, { width: 400 }]}>\n                            <Text\n                              style={[styles.itemName, { color: \"#aad9fc\" }]}\n                            >\n                              {item.productinfo.name}\n                            </Text>\n                          </View>\n                          <View style={[styles.itemView, { width: 350 }]}>\n                            <Text style={styles.itemName}>{item.sku}</Text>\n                          </View>\n                          <View style={[styles.itemView, { width: 100 }]}>\n                            {item.productinfo.status === \"active\" ? (\n                              <Text style={styles.statusActive}>\n                                {this.Capitalize(item.productinfo.status)}\n                              </Text>\n                            ) : (\n                              <Text style={styles.statusNew}>\n                                {this.Capitalize(item.productinfo.status)}\n                              </Text>\n                            )}\n                          </View>\n                          <View style={[styles.itemView, { width: 350 }]}>\n                            <Text style={styles.itemName}>{item.barcode}</Text>\n                          </View>\n                          <View\n                            style={[\n                              styles.itemView,\n                              {\n                                width: 100,\n                                flexDirection: \"row\",\n                                justifyContent: \"center\",\n                                alignItems: \"center\",\n                              },\n                            ]}\n                          >\n                            {this.state.editable == true ? (\n                              <TextInput\n                                placeholder={item.iteminfo.qty}\n                                onChangeText={() => {}}\n                                style={{ width: 25, height: 25, fontSize: 19 }}\n                              />\n                            ) : (\n                              <Text style={styles.itemName}>\n                                {item.iteminfo.qty}\n                              </Text>\n                            )}\n                            <TouchableOpacity\n                              onPress={() => {\n                                this.changeEdit();\n                              }}\n                            >\n                              <Image\n                                style={{\n                                  width: 20,\n                                  height: 20,\n                                  resizeMode: \"contain\",\n                                }}\n                                source={require(\"../../../assets/edit.png\")}\n                              />\n                            </TouchableOpacity>\n                          </View>\n                          <View style={[styles.itemView, { width: 150 }]}>\n                            <Text style={styles.itemName}>\n                              {item.location_primary}\n                            </Text>\n                          </View>\n                          <View style={[styles.itemView, { width: 100 }]}>\n                            <Text style={styles.itemName}>\n                              {item.qty_on_hand}\n                            </Text>\n                          </View>\n                          {this.state.instruction ? (\n                            <View style={[styles.itemView, { width: 130 }]}>\n                              <Text style={styles.itemName}>\n                                {item.available_inv}\n                              </Text>\n                            </View>\n                          ) : (\n                            <View></View>\n                          )}\n                        </View>\n                      </View>\n                    )}\n                  /> */}\n                </View>\n              </View>\n              {/* </LinearGradient> */}\n            </View>\n          </React.Fragment>\n        ) : (\n          <React.Fragment>\n            <View style={{ flex: 1, flexDirection: \"row\" }}>\n              <View\n                style={{\n                  flex: 2,\n                  flexDirection: \"row\",\n                  justifyContent: \"flex-start\",\n                  margin: 5,\n                  marginLeft: 10,\n                }}\n              >\n                <TouchableOpacity\n                  onPress={() => this.props.addOrderItem(items)}\n                  style={{\n                    borderWidth: 1,\n                    borderStyle: \"solid\",\n                    borderColor: \"#336597\",\n                    backgroundColor: \"#336599\",\n                    justifyContent: \"center\",\n                  }}\n                >\n                  <Text\n                    style={{\n                      color: \"white\",\n                      padding: 4,\n                      fontSize: 13,\n                      fontWeight: \"bold\",\n                    }}\n                  >\n                    Add Item\n                  </Text>\n                </TouchableOpacity>\n                <TouchableOpacity\n                  onPress={() => this.props.removeItems()}\n                  style={\n                    this.props.removeIds && this.props.removeIds.length > 0\n                      ? {\n                          marginRight: 2,\n                          borderWidth: 1,\n                          borderStyle: \"solid\",\n                          borderColor: \"#336597\",\n                          backgroundColor: \"#961F1F\",\n                          justifyContent: \"center\",\n                        }\n                      : {\n                          marginRight: 2,\n                          borderWidth: 1,\n                          borderStyle: \"solid\",\n                          borderColor: \"#336597\",\n                          backgroundColor: \"#c48787\",\n                          justifyContent: \"center\",\n                        }\n                  }\n                >\n                  <Text\n                    style={{\n                      color: \"white\",\n                      padding: 4,\n                      fontSize: 13,\n                      fontWeight: \"bold\",\n                    }}\n                  >\n                    Remove selected\n                  </Text>\n                </TouchableOpacity>\n              </View>\n              <View\n                style={{\n                  flex: 2,\n                  flexDirection: \"row\",\n                  justifyContent: \"flex-end\",\n                  margin: 5,\n                }}\n              >\n                <TouchableOpacity\n                  onPress={() => this.props.updateBasicInfo()}\n                  style={{\n                    borderWidth: 1,\n                    borderStyle: \"solid\",\n                    borderColor: \"#336597\",\n                    backgroundColor: \"#494848\",\n                    justifyContent: \"center\",\n                  }}\n                >\n                  <Text\n                    style={{\n                      color: \"white\",\n                      padding: 4,\n                      fontSize: 13,\n                      fontWeight: \"bold\",\n                    }}\n                  >\n                    Cancel\n                  </Text>\n                </TouchableOpacity>\n                <TouchableOpacity\n                  style={{\n                    marginRight: 10,\n                    borderWidth: 1,\n                    borderStyle: \"solid\",\n                    borderColor: \"#336597\",\n                    backgroundColor: \"#336599\",\n                    justifyContent: \"center\",\n                  }}\n                  onPress={() => this.props.updateBasicInfo()}\n                >\n                  <Text\n                    style={{\n                      color: \"white\",\n                      padding: 4,\n                      fontSize: 13,\n                      fontWeight: \"bold\",\n                    }}\n                  >\n                    Save & Close\n                  </Text>\n                </TouchableOpacity>\n              </View>\n            </View>\n            {items &&\n              items.length > 0 &&\n              items.map((item, index) => {\n                return (\n                  <View\n                    key={index}\n                    style={\n                      this.props.removeIds.includes(item.iteminfo.id) && {\n                        backgroundColor: \"#799cbf\",\n                      }\n                    }\n                  >\n                    <View\n                      style={{\n                        flex: 1,\n                        flexDirection: \"row\",\n                        borderWidth: 1,\n                        borderColor: \"#000\",\n                        borderRadius: 10,\n                        width: \"96%\",\n                        marginLeft: \"auto\",\n                        marginRight: \"auto\",\n                        padding: 5,\n                      }}\n                    >\n                      <View style={{ width: \"20%\" }}>\n                        <TouchableOpacity\n                          onPress={() => this.props.removeOrderItem(item)}\n                        >\n                          <Image\n                            style={{\n                              position: \"relative\",\n                              width: \"100%\",\n                              height: \"100%\",\n                              resizeMode: \"contain\",\n                              marginBottom: 2,\n                            }}\n                            source={{\n                              uri: item.image !== null ? item.image : \"\",\n                            }}\n                          />\n                        </TouchableOpacity>\n                      </View>\n                      <View style={{ width: \"80%\" }}>\n                        <View\n                          style={{\n                            flex: 1,\n                            flexDirection: \"row\",\n                            alignItem: \"center\",\n                          }}\n                        >\n                          <View style={{ flex: 2, flexDirection: \"row\" }}>\n                            <Text style={{ padding: 5 }}>QTY</Text>\n                            <TextInput\n                              keyboardType=\"numeric\"\n                              style={{\n                                borderWidth: 1,\n                                borderRadius: 10,\n                                width: 50,\n                                paddingLeft: 10,\n                                paddingRight: 5,\n                              }}\n                              value={\n                                item.iteminfo.qty &&\n                                JSON.stringify(item.iteminfo.qty)\n                              }\n                              onChangeText={(text) =>\n                                this.props.handleChange(text, item)\n                              }\n                              onBlur={() => this.props.updateQuantity(item)}\n                            />\n                          </View>\n                          <View style={{ flex: 4, justifyContent: \"center\" }}>\n                            <TouchableOpacity\n                              style={styles.value}\n                              onPress={() => this.props.removeOrderItem(item)}\n                            >\n                              <Text numberOfLines={1} ellipsizeMode=\"tail\">\n                                {\" \"}\n                                {item.productinfo.name}{\" \"}\n                              </Text>\n                            </TouchableOpacity>\n                          </View>\n                        </View>\n\n                        <TouchableOpacity\n                          onPress={() => this.props.removeOrderItem(item)}\n                        >\n                          <View\n                            style={{\n                              flex: 1,\n                              flexDirection: \"row\",\n                              alignItem: \"center\",\n                            }}\n                          >\n                            <View style={{ flex: 2, flexDirection: \"row\" }}>\n                              <Text\n                                numberOfLines={1}\n                                ellipsizeMode=\"tail\"\n                                style={{ padding: 5 }}\n                              >\n                                {item.sku}\n                              </Text>\n                            </View>\n                            <View style={{ flex: 2, flexDirection: \"row\" }}>\n                              {item.productinfo.custom_product_1 !== \"\" && (\n                                <Text\n                                  numberOfLines={1}\n                                  ellipsizeMode=\"tail\"\n                                  style={{ padding: 5 }}\n                                >\n                                  C1: {item.productinfo.custom_product_1}\n                                </Text>\n                              )}\n                            </View>\n                            <View style={{ flex: 4, justifyContent: \"center\" }}>\n                              <Text numberOfLines={1} ellipsizeMode=\"tail\">\n                                {\" \"}\n                                {item.barcode}{\" \"}\n                              </Text>\n                            </View>\n                          </View>\n                        </TouchableOpacity>\n                      </View>\n                    </View>\n                  </View>\n                );\n              })}\n          </React.Fragment>\n        )}\n      </ScrollView>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {};\n};\n\nconst mapDispatchToProps = {\n  UpdateOrderQuantity,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ItemsDetail);\n"]},"metadata":{},"sourceType":"module"}
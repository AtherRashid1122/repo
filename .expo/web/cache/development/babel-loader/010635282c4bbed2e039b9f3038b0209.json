{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\DELL PC\\\\Downloads\\\\GroovePacker\\\\src\\\\components\\\\scanpack\\\\unscanned_items.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport styles from \"../../style/scanpack\";\nimport globalStyles from \"../../style/global\";\nimport restart from \"../../../assets/restart.png\";\nimport note from \"../../../assets/note.png\";\nimport deleteImage from \"../../../assets/delete.png\";\nimport toggle from \"../../../assets/dotToggle.png\";\nimport { LinearGradient } from 'expo-linear-gradient';\nimport backImage from \"../../../assets/bg_left.png\";\nimport upArrow from \"../../../assets/up_arrow.png\";\nimport downArrow from \"../../../assets/down_arrow.png\";\nimport placeholder from \"../../../assets/placeholder.png\";\nimport { fontFamily } from \"../../helpers/fontFamily\";\nimport moment from 'moment';\nvar count = 0;\n\nvar UnscannedItems = function (_Component) {\n  _inherits(UnscannedItems, _Component);\n\n  var _super = _createSuper(UnscannedItems);\n\n  function UnscannedItems(props) {\n    var _this;\n\n    _classCallCheck(this, UnscannedItems);\n\n    _this = _super.call(this, props);\n\n    _this.orderDetail = function (order) {\n      _this.props.navigation.navigate(\"OrderDetail\", {\n        data: order\n      });\n    };\n\n    _this.state = {\n      actionBarShow: false,\n      unscannedItemPerPage: 1,\n      scanPlaceHolderValue: \"Ready For Product Scan\"\n    };\n    _this.unscannedInputField = React.createRef();\n    return _this;\n  }\n\n  _createClass(UnscannedItems, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var props = this.props;\n      var Order = props.order.order;\n      var localCount = 0;\n      Order && Order.unscanned_items && Order.unscanned_items.length > 0 && Order.unscanned_items.map(function (item) {\n        if (item.child_items && item.child_items.length > 0 && item.product_type === \"individual\") {\n          item.child_items.map(function (childItem) {\n            localCount = localCount + childItem.qty_remaining;\n          });\n        } else {\n          localCount = localCount + item.qty_remaining;\n        }\n      });\n      count = localCount;\n      var windowWidth = Dimensions.get('window').width;\n      var windowHeight = Dimensions.get('window').height;\n      var perPage = this.state.unscannedItemPerPage * 10;\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 7\n        }\n      }, Order && React.createElement(View, {\n        style: Platform.OS === \"web\" ? styles.unscannedItemContainerWeb : {\n          width: \"100%\",\n          height: \"100%\",\n          backgroundColor: \"#666666\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }\n      }, Platform.OS === \"web\" ? React.createElement(View, {\n        style: {\n          flex: 1,\n          height: \"100%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }\n      }, windowWidth >= 900 ? React.createElement(ImageBackground, {\n        source: backImage,\n        style: {\n          height: \"100%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 23\n        }\n      }, React.createElement(Text, {\n        style: styles.unscannedItemTitleWeb,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 25\n        }\n      }, \" \", count, \" Unscanned Items\"), props.order && props.order.order && props.order.order.unscanned_items && props.order.order.unscanned_items.length > 0 ? props.order.order.unscanned_items && props.order.order.unscanned_items.slice(0, perPage).map(function (item, index) {\n        return React.createElement(View, {\n          style: {\n            margin: 1\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 33\n          }\n        }, item && item.product_type === \"single\" || item && item.product_type === \"depends\" ? React.createElement(View, {\n          key: index,\n          style: {\n            flexDirection: \"row\",\n            borderRadius: 20,\n            borderWidth: 3,\n            backgroundColor: \"#336598\",\n            borderColor: \"black\",\n            padding: 5\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 39\n          }\n        }, React.createElement(View, {\n          style: {\n            flex: 20\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 41\n          }\n        }, React.createElement(TouchableOpacity, {\n          onPress: function onPress() {\n            return _this2.props.redirectToItemDetail(item);\n          },\n          style: {\n            backgroundColor: \"#fff\",\n            paddingLeft: 5,\n            paddingRight: 5,\n            borderTopLeftRadius: 10,\n            borderTopRightRadius: 10\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 43\n          }\n        }, React.createElement(Text, {\n          numberOfLines: item.name && item.name.length <= 32 ? 1 : 2,\n          style: item.name && item.name.length <= 32 ? {\n            fontSize: 18,\n            maxWidth: \"75%\"\n          } : {\n            fontSize: 15,\n            maxWidth: \"75%\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 45\n          }\n        }, item.name)), React.createElement(Text, {\n          numberOfLines: 1,\n          ellipsizeMode: \"tail\",\n          style: {\n            color: \"#fff\",\n            fontSize: 18,\n            maxWidth: \"70%\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 43\n          }\n        }, item.sku), React.createElement(View, {\n          style: {\n            backgroundColor: \"#95b0e5\",\n            paddingLeft: 3,\n            paddingRight: 3\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 43\n          }\n        }, React.createElement(View, {\n          style: {\n            maxWidth: \"75%\",\n            flexDirection: \"row\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 45\n          }\n        }, item.location !== null && item.location !== \"\" && item.location !== undefined && React.createElement(View, {\n          style: {\n            flex: 1,\n            flexDirection: \"row\",\n            alignItems: \"baseline\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 49\n          }\n        }, React.createElement(Text, {\n          style: {\n            fontSize: 10\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 51\n          }\n        }, \"L1:\"), React.createElement(Text, {\n          numberOfLines: 1,\n          ellipsizeMode: \"tail\",\n          style: {\n            fontSize: 15,\n            fontWeight: \"bold\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 51\n          }\n        }, item.location)), item.custom_product_1 !== null && item.custom_product_1 !== \"\" && item.custom_product_1 !== undefined && React.createElement(View, {\n          style: {\n            flex: 1,\n            flexDirection: \"row\",\n            alignItems: \"baseline\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 49\n          }\n        }, React.createElement(Text, {\n          style: {\n            fontSize: 10\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 51\n          }\n        }, \"C1:\"), React.createElement(Text, {\n          numberOfLines: 1,\n          ellipsizeMode: \"tail\",\n          style: {\n            fontSize: 15,\n            fontWeight: \"bold\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 51\n          }\n        }, item.custom_product_1)))), React.createElement(View, {\n          style: {\n            backgroundColor: \"#d3def4\",\n            paddingLeft: 3,\n            paddingRight: 3,\n            borderBottomLeftRadius: 10,\n            borderBottomRightRadius: 10\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 43\n          }\n        }, React.createElement(Text, {\n          style: {\n            fontSize: 18,\n            maxWidth: \"75%\"\n          },\n          numberOfLines: 1,\n          ellipsizeMode: \"tail\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 45\n          }\n        }, item && item.barcodes.length > 0 && item.barcodes[0].barcode))), React.createElement(View, {\n          style: {\n            flex: 5,\n            borderBottomRightRadius: 10,\n            borderTopRightRadius: 10,\n            position: \"absolute\",\n            right: 4,\n            width: \"25%\",\n            height: \"100%\",\n            bottom: 0\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 41\n          }\n        }, React.createElement(View, {\n          style: {\n            backgroundColor: \"#fff\",\n            shadowColor: \"#000\",\n            shadowOffset: {\n              width: 0,\n              height: 0\n            },\n            shadowOpacity: 1,\n            shadowRadius: 10,\n            elevation: 3,\n            borderRadius: 10,\n            borderWidth: 4,\n            borderColor: \"#336598\",\n            height: \"100%\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 43\n          }\n        }, React.createElement(Text, {\n          style: {\n            position: \"absolute\",\n            textAlign: \"center\",\n            fontSize: 16,\n            fontWeight: \"600\",\n            backgroundColor: \"#fff\",\n            opacity: 0.7,\n            bottom: 0,\n            right: 0,\n            left: 0,\n            borderRadius: 10,\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n            zIndex: 999\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 45\n          }\n        }, item.scanned_qty, \"/\", item.qty_remaining + item.scanned_qty), React.createElement(Image, {\n          source: {\n            uri: item.images && item.images.length > 0 ? item.images[0].image : placeholder\n          },\n          style: {\n            height: \"100%\",\n            width: \"100%\",\n            resizeMode: 'contain',\n            borderRadius: 10\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 45\n          }\n        })))) : React.createElement(View, {\n          key: index,\n          style: {\n            borderRadius: 10,\n            borderWidth: 3,\n            borderColor: \"black\",\n            backgroundColor: \"#3f5163\",\n            padding: 5\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 39\n          }\n        }, React.createElement(View, {\n          style: {\n            flexDirection: \"row\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 41\n          }\n        }, React.createElement(View, {\n          style: {\n            height: 5,\n            flex: 8,\n            backgroundColor: \"#fff\",\n            borderRadius: 3,\n            position: \"relative\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 43\n          }\n        }, React.createElement(Text, {\n          style: {\n            fontSize: 18,\n            fontWeight: \"bold\",\n            position: \"absolute\",\n            left: \"50%\",\n            top: -5,\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n            backgroundColor: \"#3f5163\",\n            paddingLeft: 4,\n            paddingRight: 4,\n            color: \"#fff\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 45\n          }\n        }, \"KIT\")), React.createElement(View, {\n          style: {\n            flex: 2\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 43\n          }\n        }, React.createElement(Text, {\n          style: {\n            textAlign: \"center\",\n            color: \"#fff\",\n            fontSize: 18,\n            marginTop: -6,\n            fontWeight: \"bold\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 45\n          }\n        }, item.scanned_qty, \"/\", item.qty_remaining + item.scanned_qty))), React.createElement(View, {\n          style: {\n            flexDirection: \"row\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 41\n          }\n        }, React.createElement(View, {\n          style: {\n            flex: 8\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 43\n          }\n        }, React.createElement(TouchableOpacity, {\n          onPress: function onPress() {\n            return _this2.props.redirectToItemDetail(item);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 45\n          }\n        }, React.createElement(Text, {\n          numberOfLines: item.name && item.name.length <= 32 ? 1 : 2,\n          ellipsizeMode: \"tail\",\n          style: item.name && item.name.length <= 32 ? {\n            fontSize: 18,\n            color: \"#fff\",\n            fontWeight: \"600\",\n            paddingRight: 3,\n            paddingLeft: 3\n          } : {\n            fontSize: 15,\n            color: \"#fff\",\n            fontWeight: \"600\",\n            paddingRight: 3,\n            paddingLeft: 3\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 47\n          }\n        }, item.name)), React.createElement(TouchableOpacity, {\n          onPress: function onPress() {\n            return _this2.props.clickScan(Order.unscanned_items[0].child_items[0]);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 45\n          }\n        }, React.createElement(Text, {\n          numberOfLines: 1,\n          ellipsizeMode: \"tail\",\n          style: {\n            fontSize: 18,\n            color: \"#fff\",\n            paddingRight: 3,\n            paddingLeft: 3,\n            marginBottom: 2\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 47\n          }\n        }, item.sku))), item.images.length > 0 && item.images[0].image && React.createElement(View, {\n          style: {\n            flex: 2,\n            borderRadius: 10,\n            borderWidth: 10,\n            height: 80,\n            borderColor: \"#3f5163\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 45\n          }\n        }, React.createElement(Image, {\n          source: {\n            uri: item.images && item.images.length > 0 ? item.images[0].image : placeholder\n          },\n          style: {\n            height: \"100%\",\n            width: \"100%\",\n            resizeMode: 'contain',\n            borderRadius: 10\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 47\n          }\n        }))), item && item.child_items && item.child_items.length > 0 && item.child_items.map(function (childItem, index) {\n          return React.createElement(View, {\n            key: index,\n            style: {\n              flexDirection: \"row\",\n              marginBottom: 5,\n              backgroundColor: \"#fff\",\n              borderRadius: 10\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 47\n            }\n          }, React.createElement(View, {\n            style: {\n              flex: 20\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 49\n            }\n          }, React.createElement(View, {\n            style: {\n              backgroundColor: \"#fff\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 51\n            }\n          }), React.createElement(TouchableOpacity, {\n            onPress: function onPress() {\n              return _this2.props.redirectToItemDetail(childItem);\n            },\n            style: {\n              backgroundColor: \"#fff\",\n              borderTopLeftRadius: 10,\n              borderTopRightRadius: 20,\n              paddingLeft: 5,\n              paddingRight: 5\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 51\n            }\n          }, React.createElement(Text, {\n            numberOfLines: childItem.name && childItem.name.length <= 32 ? 1 : 2,\n            ellipsizeMode: \"tail\",\n            style: childItem.name && childItem.name.length <= 32 ? {\n              fontSize: 18,\n              width: \"75%\"\n            } : {\n              fontSize: 15,\n              width: \"75%\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 53\n            }\n          }, childItem.name)), React.createElement(Text, {\n            numberOfLines: 1,\n            ellipsizeMode: \"tail\",\n            style: {\n              backgroundColor: \"#3f5163\",\n              color: \"#fff\",\n              fontSize: 18,\n              width: \"75%\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 51\n            }\n          }, childItem.sku), React.createElement(View, {\n            style: {\n              backgroundColor: \"#a4b4c5\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 51\n            }\n          }, React.createElement(View, {\n            style: {\n              flexDirection: \"row\",\n              width: \"75%\",\n              paddingLeft: 3,\n              paddingRight: 0\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 53\n            }\n          }, childItem.location !== null && childItem.location !== \"\" && React.createElement(View, {\n            style: {\n              flex: 1,\n              flexDirection: \"row\",\n              alignItems: \"baseline\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 57\n            }\n          }, React.createElement(Text, {\n            style: {\n              fontSize: 10\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 59\n            }\n          }, \"L1:\"), React.createElement(Text, {\n            numberOfLines: 1,\n            ellipsizeMode: \"tail\",\n            style: {\n              fontSize: 15,\n              fontWeight: \"bold\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 59\n            }\n          }, childItem.location)), childItem.custom_product_1 !== null && childItem.custom_product_1 !== \"\" && React.createElement(View, {\n            style: {\n              flex: 1,\n              flexDirection: \"row\",\n              alignItems: \"baseline\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 57\n            }\n          }, React.createElement(Text, {\n            style: {\n              fontSize: 10\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 59\n            }\n          }, \"C1:\"), React.createElement(Text, {\n            numberOfLines: 1,\n            ellipsizeMode: \"tail\",\n            style: {\n              fontSize: 15,\n              fontWeight: \"bold\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 59\n            }\n          }, childItem.custom_product_1)))), React.createElement(View, {\n            style: {\n              backgroundColor: \"#cdd7e2\",\n              paddingLeft: 3,\n              paddingRight: 3,\n              borderBottomLeftRadius: 10,\n              borderBottomRightRadius: 10\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 51\n            }\n          }, React.createElement(Text, {\n            numberOfLines: 1,\n            ellipsizeMode: \"tail\",\n            style: {\n              width: \"75%\",\n              fontSize: 18\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 53\n            }\n          }, childItem && childItem.barcodes.length > 0 && childItem.barcodes[0].barcode))), React.createElement(View, {\n            style: {\n              flex: 5,\n              borderBottomRightRadius: 10,\n              position: \"absolute\",\n              width: \"25%\",\n              right: 0,\n              top: 0,\n              bottom: 0\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 49\n            }\n          }, React.createElement(View, {\n            style: {\n              backgroundColor: \"#fff\",\n              borderRadius: 10,\n              shadowColor: \"#000\",\n              shadowOffset: {\n                width: 0,\n                height: 0\n              },\n              shadowOpacity: 1,\n              shadowRadius: 10,\n              elevation: 3,\n              borderRadius: 10,\n              borderWidth: 4,\n              borderColor: \"#3f5163\",\n              height: \"100%\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 51\n            }\n          }, React.createElement(Text, {\n            style: {\n              position: \"absolute\",\n              textAlign: \"center\",\n              fontSize: 16,\n              fontWeight: \"600\",\n              backgroundColor: \"#fff\",\n              opacity: 0.7,\n              bottom: 0,\n              right: 0,\n              left: 0,\n              marginLeft: \"auto\",\n              marginRight: \"auto\",\n              borderRadius: 10,\n              zIndex: 999\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 53\n            }\n          }, childItem.scanned_qty, \"/\", childItem.qty_remaining + childItem.scanned_qty), React.createElement(Image, {\n            source: {\n              uri: childItem.images && childItem.images.length > 0 ? childItem.images[0].image : placeholder\n            },\n            style: {\n              height: \"100%\",\n              width: \"100%\",\n              resizeMode: 'contain',\n              borderRadius: 10\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 53\n            }\n          }))));\n        })));\n      }) : React.createElement(View, {\n        style: globalStyles.p_10,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 29\n        }\n      }, React.createElement(Text, {\n        style: styles.scannedItemNameText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 31\n        }\n      }, \"No more item remaining to scan\")), props.order.order.unscanned_items && props.order.order.unscanned_items.length >= perPage && React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 27\n        }\n      }, props.order.order.unscanned_items && props.order.order.unscanned_items.length >= perPage ? React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          var perPage = _this2.state.unscannedItemPerPage + 1;\n\n          _this2.setState({\n            unscannedItemPerPage: perPage\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 33\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: \"#fff\",\n          fontWeight: \"bold\",\n          fontSize: 14,\n          zIndex: 99999,\n          textShadowColor: '#000',\n          textShadowOffset: {\n            width: 1,\n            height: 1\n          },\n          display: \"flex\",\n          justifyContent: \"center\",\n          padding: 8,\n          background: \"#41970f\",\n          marginRight: \"auto\",\n          marginLeft: \"auto\",\n          borderRadius: 5,\n          marginTop: 2\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 35\n        }\n      }, \"Show More\")) : React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          var perPage = 1;\n\n          _this2.setState({\n            unscannedItemPerPage: perPage\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 33\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: \"#fff\",\n          fontWeight: \"bold\",\n          fontSize: 14,\n          zIndex: 99999,\n          textShadowColor: '#000',\n          textShadowOffset: {\n            width: 1,\n            height: 1\n          },\n          display: \"flex\",\n          justifyContent: \"center\",\n          padding: 8,\n          background: \"#f54400\",\n          marginRight: \"auto\",\n          marginLeft: \"auto\",\n          borderRadius: 5,\n          marginTop: 2\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 35\n        }\n      }, \"Reset\")))) : React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 23\n        }\n      }, React.createElement(View, {\n        style: {\n          height: windowHeight - 70,\n          width: \"100%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 25\n        }\n      }, React.createElement(View, {\n        style: styles.actionButtonsView,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 27\n        }\n      }, React.createElement(LinearGradient, {\n        start: {\n          x: 0,\n          y: 1\n        },\n        end: {\n          x: 0,\n          y: 0\n        },\n        colors: ['#000000', '#00000006', '#00000006', '#000000'],\n        style: {\n          position: \"relative\",\n          backgroundColor: \"#292929\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 29\n        }\n      }, React.createElement(TouchableOpacity, {\n        onLongPress: function onLongPress() {\n          return _this2.orderDetail(Order);\n        },\n        delayLongPress: 1000,\n        style: {\n          marginRight: 45,\n          marginLeft: 45\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 31\n        }\n      }, React.createElement(Text, {\n        numberOfLines: 1,\n        ellipsizeMode: \"tail\",\n        style: [styles.nowScanningTextView, {\n          textAlign: \"center\",\n          margin: 8,\n          fontFamily: fontFamily.font700,\n          color: \"#8e8b8b\"\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 33\n        }\n      }, \"Order \", Order.increment_id)), React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          var actionBarShow = !_this2.state.actionBarShow;\n\n          _this2.setState({\n            actionBarShow: actionBarShow\n          });\n        },\n        style: {\n          position: \"absolute\",\n          top: 10,\n          right: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 31\n        }\n      }, this.state.actionBarShow ? React.createElement(Image, {\n        style: {\n          width: 20,\n          height: 20\n        },\n        source: upArrow ? upArrow : \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 61\n        }\n      }) : React.createElement(Image, {\n        style: {\n          width: 20,\n          height: 20\n        },\n        source: downArrow ? downArrow : \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 38\n        }\n      }))), this.state.actionBarShow && React.createElement(LinearGradient, {\n        style: [styles.actionButtonInnerView, {\n          backgroundColor: \"#707070\",\n          borderRadius: 5\n        }],\n        start: {\n          x: 0,\n          y: 1\n        },\n        end: {\n          x: 0,\n          y: 0\n        },\n        colors: ['#142130', '#304454'],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 31\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: styles.restartButtonDesign,\n        onPress: this.props.restartButton,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 33\n        }\n      }, React.createElement(View, {\n        style: {\n          display: \"flex\",\n          flexDirection: \"row\",\n          alignItems: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 35\n        }\n      }, React.createElement(Image, {\n        style: [styles.actionImages, {\n          width: 25,\n          height: 25\n        }],\n        source: restart ? restart : \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 37\n        }\n      }), windowWidth > 375 && React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 39\n        }\n      }, React.createElement(View, {\n        style: {\n          flexDirection: \"column\",\n          alignItems: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 41\n        }\n      }, React.createElement(Text, {\n        style: [styles.actionButtonText, {\n          fontFamily: fontFamily.font500\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 43\n        }\n      }, \"Restart\"), React.createElement(Text, {\n        style: [styles.actionButtonText, {\n          fontFamily: fontFamily.font500\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 43\n        }\n      }, \"Order\"))))), React.createElement(TouchableOpacity, {\n        style: styles.noteSaveButtonDesign,\n        onPress: this.props.saveChanges,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 33\n        }\n      }, React.createElement(View, {\n        style: {\n          display: \"flex\",\n          flexDirection: \"row\",\n          alignItems: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 35\n        }\n      }, React.createElement(Image, {\n        style: [styles.actionImages, {\n          width: 25,\n          height: 25\n        }],\n        source: deleteImage ? deleteImage : \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 37\n        }\n      }), windowWidth > 375 && React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 39\n        }\n      }, React.createElement(View, {\n        style: {\n          flexDirection: \"column\",\n          alignItems: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 41\n        }\n      }, React.createElement(Text, {\n        style: [styles.actionButtonText, {\n          fontFamily: fontFamily.font500\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 43\n        }\n      }, \"Remove\"), React.createElement(Text, {\n        style: [styles.actionButtonText, {\n          fontFamily: fontFamily.font500\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 43\n        }\n      }, \"Item\"))))), React.createElement(TouchableOpacity, {\n        style: styles.noteSaveButtonDesign,\n        onPress: this.props.addNote,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 417,\n          columnNumber: 33\n        }\n      }, React.createElement(View, {\n        style: {\n          display: \"flex\",\n          flexDirection: \"row\",\n          alignItems: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 35\n        }\n      }, React.createElement(Image, {\n        style: [styles.actionImages, {\n          width: 25,\n          height: 25\n        }],\n        source: note ? note : \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 37\n        }\n      }), windowWidth > 375 && React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 39\n        }\n      }, React.createElement(View, {\n        style: {\n          flexDirection: \"column\",\n          alignItems: \"center\",\n          marginLeft: 2\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 426,\n          columnNumber: 41\n        }\n      }, React.createElement(Text, {\n        style: [styles.actionButtonText, {\n          fontFamily: fontFamily.font500\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 43\n        }\n      }, \"Add\"), React.createElement(Text, {\n        style: [styles.actionButtonText, {\n          fontFamily: fontFamily.font500\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 43\n        }\n      }, \"Note\"))))))), React.createElement(LinearGradient, {\n        style: {\n          padding: 10,\n          backgroundColor: \"#707070\",\n          borderRadius: 5,\n          marginTop: 1\n        },\n        start: {\n          x: 0,\n          y: 1\n        },\n        end: {\n          x: 0,\n          y: 0\n        },\n        colors: ['#142130', '#304454'],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 437,\n          columnNumber: 27\n        }\n      }, React.createElement(View, {\n        style: {\n          flexDirection: \"row\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 445,\n          columnNumber: 29\n        }\n      }, React.createElement(View, {\n        style: {\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 446,\n          columnNumber: 31\n        }\n      }, React.createElement(LinearGradient, {\n        start: {\n          x: 0,\n          y: 1\n        },\n        end: {\n          x: 0,\n          y: 0\n        },\n        colors: ['#6384ff', '#1329ff', '#35096c'],\n        style: {\n          backgroundColor: \"#ebebeb\",\n          height: 10,\n          width: 10,\n          borderRadius: 5,\n          marginRight: 10,\n          shadowColor: \"#fff\",\n          shadowOffset: {\n            width: 0,\n            height: 0\n          },\n          shadowOpacity: 1,\n          shadowRadius: 10,\n          elevation: 24\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 447,\n          columnNumber: 33\n        }\n      })), Order && Order.unscanned_items && Order.unscanned_items[0] && Order.unscanned_items[0].product_type === \"individual\" ? React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 472,\n          columnNumber: 35\n        }\n      }, React.createElement(TextInput, {\n        value: this.props.barcodeState,\n        autoFocus: false,\n        ref: this.props.InputField,\n        onSubmitEditing: this.props.scanBarcode,\n        onChangeText: this.props.stateUpdate,\n        style: {\n          flex: 15,\n          paddingLeft: 20,\n          padding: 5,\n          backgroundColor: \"#ebebeb\",\n          fontSize: 15,\n          fontFamily: fontFamily.font600,\n          width: \"100%\",\n          textAlign: \"left\",\n          borderRadius: 5\n        },\n        placeholder: this.state.scanPlaceHolderValue,\n        placeholderTextColor: \"#4c4c4b\",\n        onBlur: function onBlur() {\n          var blurValue = Platform.OS === \"web\" ? \"Click Here Before Scanning\" : \"Tap Here Before Scanning\";\n\n          _this2.setState({\n            scanPlaceHolderValue: blurValue\n          });\n        },\n        onFocus: function onFocus() {\n          return _this2.setState({\n            scanPlaceHolderValue: 'Ready For Product Scan'\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 473,\n          columnNumber: 37\n        }\n      }), React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return _this2.props.clickScan(Order.unscanned_items[0].child_items[0], \"unscan\");\n        },\n        onLongPress: this.props.scanAllItem,\n        delayLongPress: 1000,\n        style: {\n          flex: 4,\n          marginLeft: 10,\n          backgroundColor: \"#455766\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          paddingHorizontal: 7,\n          borderRadius: 5\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 487,\n          columnNumber: 37\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontFamily: fontFamily.font800,\n          fontSize: 26,\n          color: \"#fff\",\n          textAlign: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 491,\n          columnNumber: 39\n        }\n      }, \"Pass\"))) : React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 495,\n          columnNumber: 35\n        }\n      }, React.createElement(TextInput, {\n        value: this.props.barcodeState,\n        autoFocus: false,\n        ref: this.props.InputField,\n        onSubmitEditing: this.props.scanBarcode,\n        onChangeText: this.props.stateUpdate,\n        style: {\n          outline: \"none\",\n          flex: 15,\n          paddingLeft: 20,\n          padding: 5,\n          backgroundColor: \"#ebebeb\",\n          fontSize: 15,\n          fontFamily: fontFamily.font700,\n          color: \"black\",\n          width: \"100%\",\n          textAlign: \"left\",\n          borderWidth: 1,\n          borderColor: \"#cbcbca\",\n          borderRadius: 5\n        },\n        placeholder: this.state.scanPlaceHolderValue,\n        placeholderTextColor: \"#4c4c4b\",\n        onBlur: function onBlur() {\n          var blurValue = Platform.OS === \"web\" ? \"Click Here Before Scanning\" : \"Tap Here Before Scanning\";\n\n          _this2.setState({\n            scanPlaceHolderValue: blurValue\n          });\n        },\n        onFocus: function onFocus() {\n          return _this2.setState({\n            scanPlaceHolderValue: 'Ready For Product Scan'\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 496,\n          columnNumber: 37\n        }\n      }), React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return _this2.props.clickScan(Order.unscanned_items[0], \"unscan\");\n        },\n        onLongPress: this.props.scanAllItem,\n        delayLongPress: 1000,\n        style: {\n          flex: 4,\n          marginLeft: 10,\n          backgroundColor: \"#455766\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          paddingHorizontal: 7,\n          borderRadius: 5\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 510,\n          columnNumber: 37\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontFamily: fontFamily.font800,\n          fontSize: 26,\n          color: \"#fff\",\n          textAlign: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 514,\n          columnNumber: 39\n        }\n      }, \"Pass\"))))), console.log(props), React.createElement(View, {\n        style: {\n          backgroundColor: \"#000\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 521,\n          columnNumber: 27\n        }\n      }, React.createElement(LinearGradient, {\n        style: {\n          flexDirection: \"row\",\n          height: 40,\n          backgroundColor: \"#707070\",\n          borderRadius: 10,\n          marginTop: 1,\n          marginBottom: 1\n        },\n        start: {\n          x: 0,\n          y: 1\n        },\n        end: {\n          x: 0,\n          y: 0\n        },\n        locations: [0, 1],\n        colors: ['#000000', '#3a3a3a'],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 522,\n          columnNumber: 29\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: this.props.showScannedList,\n        style: {\n          flex: 2,\n          justifyContent: \"center\",\n          alignItems: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 527,\n          columnNumber: 31\n        }\n      }, React.createElement(View, {\n        style: {\n          justifyContent: 'center',\n          alignItems: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 529,\n          columnNumber: 33\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 16,\n          fontFamily: fontFamily.font500,\n          color: \"#c6c6c6\",\n          alignItems: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 530,\n          columnNumber: 35\n        }\n      }, Order.unscanned_items && Order.unscanned_items.length > 0 ? Order.unscanned_items.length : 0, \" Un-scanned\"), this.props.scannedList && React.createElement(View, {\n        style: {\n          width: '90%',\n          height: 2,\n          backgroundColor: '#555454'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 534,\n          columnNumber: 63\n        }\n      }))), React.createElement(TouchableOpacity, {\n        onPress: this.props.showUnscannedList,\n        style: {\n          flex: 2,\n          justifyContent: \"center\",\n          alignItems: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 538,\n          columnNumber: 31\n        }\n      }, React.createElement(View, {\n        style: {\n          justifyContent: 'center',\n          alignItems: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 540,\n          columnNumber: 33\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 16,\n          fontFamily: fontFamily.font500,\n          color: \"#c6c6c6\",\n          alignItems: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 541,\n          columnNumber: 35\n        }\n      }, Order.scanned_items && Order.scanned_items.length > 0 ? Order.scanned_items.length : 0, \" Scanned\"), this.props.unscannedList && React.createElement(View, {\n        style: {\n          width: '90%',\n          height: 2,\n          backgroundColor: '#555454'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 543,\n          columnNumber: 65\n        }\n      }))), React.createElement(TouchableOpacity, {\n        onPress: this.props.showLogList,\n        style: {\n          flex: 2,\n          justifyContent: \"center\",\n          alignItems: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 547,\n          columnNumber: 31\n        }\n      }, React.createElement(View, {\n        style: {\n          justifyContent: 'center',\n          alignItems: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 549,\n          columnNumber: 33\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 16,\n          fontFamily: fontFamily.font500,\n          color: \"#c6c6c6\",\n          alignItems: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 550,\n          columnNumber: 35\n        }\n      }, \"Activity Log\"), this.props.logList && React.createElement(View, {\n        style: {\n          width: '90%',\n          height: 2,\n          backgroundColor: '#555454'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 553,\n          columnNumber: 59\n        }\n      }))), React.createElement(TouchableOpacity, {\n        onPress: this.props.navButton,\n        style: {\n          marginRight: 10,\n          marginTop: 13\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 557,\n          columnNumber: 31\n        }\n      }, React.createElement(Image, {\n        style: {\n          width: 20,\n          height: 20\n        },\n        source: downArrow,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 558,\n          columnNumber: 33\n        }\n      })))), React.createElement(ScrollView, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 562,\n          columnNumber: 27\n        }\n      }, props.scannedList && props.order && props.order.order && props.order.order.unscanned_items && props.order.order.unscanned_items.length > 0 ? props.scannedList && props.order.order.unscanned_items && props.order.order.unscanned_items.slice(0, perPage).map(function (item, index) {\n        return React.createElement(View, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 568,\n            columnNumber: 37\n          }\n        }, item && item.product_type === \"single\" || item && item.product_type === \"depends\" ? React.createElement(View, {\n          key: index,\n          style: {\n            flexDirection: \"row\",\n            position: \"relative\",\n            backgroundColor: \"#292929\",\n            textAlign: \"left\",\n            display: \"flex\",\n            marginTop: 5\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 572,\n            columnNumber: 43\n          }\n        }, React.createElement(View, {\n          style: {\n            width: '100%',\n            minHeight: 125\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 573,\n            columnNumber: 45\n          }\n        }, React.createElement(LinearGradient, {\n          colors: ['#b6c2d2', '#cddceb', '#b6c2d2'],\n          start: {\n            x: 0,\n            y: 1\n          },\n          end: {\n            x: 0,\n            y: 0\n          },\n          style: {\n            flex: 16,\n            padding: 4,\n            borderTopLeftRadius: 12,\n            borderTopEndRadius: 12\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 574,\n            columnNumber: 47\n          }\n        }, React.createElement(TouchableOpacity, {\n          onLongPress: function onLongPress() {\n            return _this2.props.redirectToItemDetail(item);\n          },\n          delayLongPress: 1000,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 578,\n            columnNumber: 49\n          }\n        }, React.createElement(Text, {\n          numberOfLines: 2,\n          style: item.name && item.name.length <= 32 ? {\n            fontSize: 18,\n            fontFamily: fontFamily.font400,\n            width: \"65%\",\n            textAlign: \"left\"\n          } : {\n            fontSize: 16,\n            fontFamily: fontFamily.font400,\n            width: \"65%\",\n            textAlign: \"left\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 580,\n            columnNumber: 51\n          }\n        }, item.name))), React.createElement(View, {\n          style: {\n            padding: 4,\n            justifyContent: \"center\",\n            backgroundColor: \"#b6cadd\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 591,\n            columnNumber: 47\n          }\n        }, React.createElement(Text, {\n          numberOfLines: 1,\n          ellipsizeMode: \"tail\",\n          style: {\n            fontSize: 18,\n            fontFamily: fontFamily.font700,\n            color: \"#3f638b\",\n            width: '65%'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 596,\n            columnNumber: 49\n          }\n        }, item.sku)), React.createElement(View, {\n          style: {\n            backgroundColor: \"#c1d4e6\",\n            paddingLeft: 3,\n            paddingRight: 3\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 603,\n            columnNumber: 47\n          }\n        }, React.createElement(View, {\n          style: {\n            width: \"75%\",\n            flexDirection: \"row\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 604,\n            columnNumber: 49\n          }\n        }, item.location !== null && item.location !== \"\" && item.location !== undefined && React.createElement(View, {\n          style: {\n            flex: 1,\n            flexDirection: \"row\",\n            alignItems: \"baseline\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 607,\n            columnNumber: 53\n          }\n        }, React.createElement(Text, {\n          style: {\n            fontSize: 12,\n            fontFamily: fontFamily.font400\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 608,\n            columnNumber: 55\n          }\n        }, \"L1:\"), React.createElement(Text, {\n          numberOfLines: 1,\n          ellipsizeMode: \"tail\",\n          style: {\n            fontSize: 15,\n            fontFamily: fontFamily.font700\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 609,\n            columnNumber: 55\n          }\n        }, item.location)), item.custom_product_1 !== null && item.custom_product_1 !== \"\" && item.custom_product_1 !== undefined && React.createElement(View, {\n          style: {\n            flex: 1,\n            flexDirection: \"row\",\n            alignItems: \"baseline\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 619,\n            columnNumber: 53\n          }\n        }, React.createElement(Text, {\n          style: {\n            fontSize: 12,\n            fontFamily: fontFamily.font400\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 620,\n            columnNumber: 55\n          }\n        }, \"C1:\"), React.createElement(Text, {\n          numberOfLines: 1,\n          ellipsizeMode: \"tail\",\n          style: {\n            fontSize: 15,\n            fontFamily: fontFamily.font700\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 621,\n            columnNumber: 55\n          }\n        }, item.custom_product_1)))), React.createElement(View, {\n          style: {\n            backgroundColor: \"#d3def4\",\n            paddingLeft: 3,\n            paddingRight: 3,\n            borderBottomLeftRadius: 10,\n            borderBottomRightRadius: 10\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 631,\n            columnNumber: 47\n          }\n        }, React.createElement(Text, {\n          style: {\n            fontSize: 18,\n            maxWidth: \"75%\",\n            fontFamily: fontFamily.font400\n          },\n          numberOfLines: 1,\n          ellipsizeMode: \"tail\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 632,\n            columnNumber: 49\n          }\n        }, item && item.barcodes.length > 0 && item.barcodes[0].barcode))), React.createElement(View, {\n          style: {\n            position: \"absolute\",\n            top: 0,\n            right: 0,\n            height: \"100%\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 645,\n            columnNumber: 45\n          }\n        }, React.createElement(LinearGradient, {\n          locations: [0, 0.04, 0.08],\n          start: {\n            x: .9,\n            y: 1\n          },\n          colors: ['#3d4851', '#9EA4A8', '#ffffff'],\n          style: {\n            height: 100,\n            width: 100,\n            backgroundColor: \"#000000\",\n            shadowColor: \"#000\",\n            shadowOffset: {\n              width: 0,\n              height: 0\n            },\n            shadowOpacity: 0.58,\n            shadowRadius: 29,\n            elevation: 3,\n            borderTopLeftRadius: 5,\n            borderBottomLeftRadius: 5,\n            marginTop: 5,\n            justifyContent: \"center\",\n            alignItems: \"center\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 646,\n            columnNumber: 47\n          }\n        }, React.createElement(Text, {\n          style: {\n            width: '90%',\n            position: \"absolute\",\n            textAlign: \"center\",\n            fontSize: 18,\n            fontFamily: fontFamily.font600,\n            backgroundColor: \"#fff\",\n            opacity: 0.7,\n            bottom: 0,\n            right: 0,\n            left: 0,\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n            zIndex: 999\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 665,\n            columnNumber: 49\n          }\n        }, item.scanned_qty, \"/\", item.qty_remaining + item.scanned_qty), React.createElement(Image, {\n          source: {\n            uri: item.images && item.images.length > 0 ? item.images[0].image : placeholder\n          },\n          style: {\n            height: \"90%\",\n            width: \"90%\",\n            resizeMode: 'contain',\n            borderRadius: 10\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 668,\n            columnNumber: 49\n          }\n        })))) : React.createElement(View, {\n          key: index,\n          style: {\n            margin: 1,\n            borderRadius: 20,\n            borderWidth: 3,\n            borderColor: \"black\",\n            backgroundColor: \"#3f5163\",\n            padding: 5\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 674,\n            columnNumber: 43\n          }\n        }, React.createElement(View, {\n          style: {\n            flexDirection: \"row\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 675,\n            columnNumber: 45\n          }\n        }, React.createElement(View, {\n          style: {\n            height: 2,\n            flex: 8,\n            backgroundColor: \"#fff\",\n            borderRadius: 3,\n            position: \"relative\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 676,\n            columnNumber: 47\n          }\n        }, React.createElement(Text, {\n          style: {\n            fontSize: 18,\n            fontFamily: fontFamily.font500,\n            position: \"absolute\",\n            left: \"50%\",\n            top: -10,\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n            backgroundColor: \"#3f5163\",\n            paddingLeft: 4,\n            paddingRight: 4,\n            color: \"#fff\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 677,\n            columnNumber: 49\n          }\n        }, \"KIT\"))), React.createElement(View, {\n          style: {\n            flexDirection: \"row\",\n            position: \"relative\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 683,\n            columnNumber: 45\n          }\n        }, React.createElement(View, {\n          style: {\n            width: '100%',\n            minHeight: 100\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 684,\n            columnNumber: 47\n          }\n        }, React.createElement(TouchableOpacity, {\n          onLongPress: function onLongPress() {\n            return _this2.props.redirectToItemDetail(item);\n          },\n          delayLongPress: 1000,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 685,\n            columnNumber: 49\n          }\n        }, React.createElement(Text, {\n          numberOfLines: 2,\n          ellipsizeMode: \"tail\",\n          style: item.name && item.name.length <= 32 ? {\n            fontSize: 18,\n            fontFamily: fontFamily.font400,\n            width: \"65%\",\n            textAlign: \"left\",\n            color: \"#fff\",\n            paddingTop: 4\n          } : {\n            fontSize: 16,\n            fontFamily: fontFamily.font400,\n            width: \"65%\",\n            textAlign: \"left\",\n            color: \"#fff\",\n            paddingTop: 4\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 687,\n            columnNumber: 51\n          }\n        }, item.name)), React.createElement(TouchableOpacity, {\n          onPress: function onPress() {\n            return _this2.props.clickScan(Order.unscanned_items[0].child_items[0]);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 699,\n            columnNumber: 49\n          }\n        }, React.createElement(Text, {\n          numberOfLines: 1,\n          ellipsizeMode: \"tail\",\n          style: {\n            fontSize: 18,\n            fontFamily: fontFamily.font700,\n            color: \"#fff\",\n            width: '65%'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 700,\n            columnNumber: 51\n          }\n        }, item.sku))), item.images.length > 0 && item.images[0].image && React.createElement(View, {\n          style: {\n            position: \"absolute\",\n            top: 0,\n            right: 0,\n            height: \"100%\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 707,\n            columnNumber: 49\n          }\n        }, React.createElement(LinearGradient, {\n          locations: [0, 0.04, 0.08],\n          start: {\n            x: .9,\n            y: 1\n          },\n          colors: ['#3d4851', '#9EA4A8', '#ffffff'],\n          style: {\n            height: 100,\n            width: 100,\n            backgroundColor: \"#000000\",\n            shadowColor: \"#000\",\n            shadowOffset: {\n              width: 0,\n              height: 0\n            },\n            shadowOpacity: 0.58,\n            shadowRadius: 29,\n            elevation: 3,\n            borderTopLeftRadius: 5,\n            borderBottomLeftRadius: 5,\n            marginTop: 5,\n            justifyContent: \"center\",\n            alignItems: \"center\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 708,\n            columnNumber: 51\n          }\n        }, React.createElement(Text, {\n          style: {\n            width: '90%',\n            position: \"absolute\",\n            textAlign: \"center\",\n            fontSize: 18,\n            fontFamily: fontFamily.font600,\n            backgroundColor: \"#fff\",\n            opacity: 0.7,\n            bottom: 0,\n            right: 0,\n            left: 0,\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n            zIndex: 999\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 727,\n            columnNumber: 53\n          }\n        }, item.scanned_qty, \"/\", item.qty_remaining + item.scanned_qty), React.createElement(Image, {\n          source: {\n            uri: item.images && item.images.length > 0 ? item.images[0].image : placeholder\n          },\n          style: {\n            height: \"90%\",\n            width: \"90%\",\n            resizeMode: 'contain',\n            borderRadius: 10\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 730,\n            columnNumber: 53\n          }\n        })))), item && item.child_items && item.child_items.length > 0 && item.child_items.map(function (childItem, index) {\n          return React.createElement(View, {\n            key: index,\n            style: {\n              flexDirection: \"row\",\n              position: \"relative\",\n              backgroundColor: \"#3f5163\",\n              textAlign: \"left\",\n              display: \"flex\",\n              marginTop: 5\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 739,\n              columnNumber: 51\n            }\n          }, React.createElement(View, {\n            style: {\n              width: '100%',\n              minHeight: 125\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 740,\n              columnNumber: 53\n            }\n          }, React.createElement(LinearGradient, {\n            colors: ['#b6c2d2', '#cddceb', '#b6c2d2'],\n            start: {\n              x: 0,\n              y: 1\n            },\n            end: {\n              x: 0,\n              y: 0\n            },\n            style: {\n              flex: 16,\n              padding: 4,\n              borderTopLeftRadius: 12,\n              borderTopEndRadius: 12\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 741,\n              columnNumber: 55\n            }\n          }, React.createElement(TouchableOpacity, {\n            onLongPress: function onLongPress() {\n              return _this2.props.redirectToItemDetail(childItem);\n            },\n            delayLongPress: 1000,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 745,\n              columnNumber: 57\n            }\n          }, React.createElement(Text, {\n            numberOfLines: 2,\n            ellipsizeMode: \"tail\",\n            style: childItem.name && childItem.name.length <= 32 ? {\n              fontSize: 18,\n              fontFamily: fontFamily.font400,\n              width: \"65%\",\n              textAlign: \"left\"\n            } : {\n              fontSize: 16,\n              fontFamily: fontFamily.font400,\n              width: \"65%\",\n              textAlign: \"left\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 747,\n              columnNumber: 59\n            }\n          }, childItem.name))), React.createElement(View, {\n            style: {\n              padding: 4,\n              justifyContent: \"center\",\n              backgroundColor: \"#b6cadd\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 759,\n              columnNumber: 55\n            }\n          }, React.createElement(Text, {\n            numberOfLines: 1,\n            ellipsizeMode: \"tail\",\n            style: {\n              fontSize: 18,\n              fontFamily: fontFamily.font700,\n              color: \"#3f638b\",\n              width: '65%'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 764,\n              columnNumber: 57\n            }\n          }, childItem.sku)), React.createElement(View, {\n            style: {\n              backgroundColor: \"#c1d4e6\",\n              paddingLeft: 3,\n              paddingRight: 3\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 771,\n              columnNumber: 55\n            }\n          }, React.createElement(View, {\n            style: {\n              flexDirection: \"row\",\n              width: \"75%\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 772,\n              columnNumber: 57\n            }\n          }, childItem.location !== null && childItem.location !== \"\" && React.createElement(View, {\n            style: {\n              flex: 1,\n              flexDirection: \"row\",\n              alignItems: \"baseline\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 775,\n              columnNumber: 61\n            }\n          }, React.createElement(Text, {\n            style: {\n              fontSize: 12,\n              fontFamily: fontFamily.font400\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 776,\n              columnNumber: 63\n            }\n          }, \"L1:\"), React.createElement(Text, {\n            numberOfLines: 1,\n            ellipsizeMode: \"tail\",\n            style: {\n              fontSize: 15,\n              fontFamily: fontFamily.font700\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 777,\n              columnNumber: 63\n            }\n          }, childItem.location)), childItem.custom_product_1 !== null && childItem.custom_product_1 !== \"\" && React.createElement(View, {\n            style: {\n              flex: 1,\n              flexDirection: \"row\",\n              alignItems: \"baseline\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 787,\n              columnNumber: 61\n            }\n          }, React.createElement(Text, {\n            style: {\n              fontSize: 12,\n              fontFamily: fontFamily.font400\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 788,\n              columnNumber: 63\n            }\n          }, \"C1:\"), React.createElement(Text, {\n            numberOfLines: 1,\n            ellipsizeMode: \"tail\",\n            style: {\n              fontSize: 15,\n              fontFamily: fontFamily.font700\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 789,\n              columnNumber: 63\n            }\n          }, childItem.custom_product_1)))), React.createElement(View, {\n            style: {\n              backgroundColor: \"#d3def4\",\n              paddingLeft: 3,\n              paddingRight: 3,\n              borderBottomLeftRadius: 10,\n              borderBottomRightRadius: 10\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 799,\n              columnNumber: 55\n            }\n          }, React.createElement(Text, {\n            numberOfLines: 1,\n            ellipsizeMode: \"tail\",\n            style: {\n              fontSize: 18,\n              width: \"75%\",\n              fontFamily: fontFamily.font400\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 800,\n              columnNumber: 57\n            }\n          }, childItem && childItem.barcodes.length > 0 && childItem.barcodes[0].barcode))), React.createElement(View, {\n            style: {\n              position: \"absolute\",\n              top: 0,\n              right: 0,\n              height: \"100%\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 811,\n              columnNumber: 53\n            }\n          }, React.createElement(LinearGradient, {\n            locations: [0, 0.04, 0.08],\n            start: {\n              x: .9,\n              y: 1\n            },\n            colors: ['#3d4851', '#9EA4A8', '#ffffff'],\n            style: {\n              height: 100,\n              width: 100,\n              backgroundColor: \"#000000\",\n              shadowColor: \"#000\",\n              shadowOffset: {\n                width: 0,\n                height: 0\n              },\n              shadowOpacity: 0.58,\n              shadowRadius: 29,\n              elevation: 3,\n              borderTopLeftRadius: 5,\n              borderBottomLeftRadius: 5,\n              marginTop: 5,\n              justifyContent: \"center\",\n              alignItems: \"center\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 812,\n              columnNumber: 55\n            }\n          }, React.createElement(Text, {\n            style: {\n              width: '90%',\n              position: \"absolute\",\n              textAlign: \"center\",\n              fontSize: 18,\n              fontFamily: fontFamily.font600,\n              backgroundColor: \"#fff\",\n              opacity: 0.7,\n              bottom: 0,\n              right: 0,\n              left: 0,\n              marginLeft: \"auto\",\n              marginRight: \"auto\",\n              zIndex: 999\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 831,\n              columnNumber: 57\n            }\n          }, childItem.scanned_qty, \"/\", childItem.qty_remaining + childItem.scanned_qty), React.createElement(Image, {\n            source: {\n              uri: childItem.images && childItem.images.length > 0 ? childItem.images[0].image : placeholder\n            },\n            style: {\n              height: \"90%\",\n              width: \"90%\",\n              resizeMode: 'contain',\n              borderRadius: 10\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 834,\n              columnNumber: 57\n            }\n          }))));\n        })));\n      }) : props.scannedList && React.createElement(View, {\n        style: globalStyles.p_10,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 848,\n          columnNumber: 54\n        }\n      }, React.createElement(Text, {\n        style: styles.scannedItemNameText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 849,\n          columnNumber: 35\n        }\n      }, \"No more item remaining to scan\")), props.unscannedList && React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 856,\n          columnNumber: 31\n        }\n      }, Order.scanned_items && Order.scanned_items.length > 0 ? Order.scanned_items.map(function (item, index) {\n        return React.createElement(View, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 862,\n            columnNumber: 41\n          }\n        }, React.createElement(View, {\n          key: index,\n          style: {\n            flexDirection: \"row\",\n            position: \"relative\",\n            backgroundColor: \"#292929\",\n            textAlign: \"left\",\n            display: \"flex\",\n            marginTop: 5\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 864,\n            columnNumber: 45\n          }\n        }, React.createElement(View, {\n          style: {\n            width: '100%',\n            minHeight: 125\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 865,\n            columnNumber: 47\n          }\n        }, React.createElement(LinearGradient, {\n          colors: ['#b6c2d2', '#cddceb', '#b6c2d2'],\n          start: {\n            x: 0,\n            y: 1\n          },\n          end: {\n            x: 0,\n            y: 0\n          },\n          style: {\n            flex: 16,\n            padding: 4,\n            borderTopLeftRadius: 12,\n            borderTopEndRadius: 12\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 866,\n            columnNumber: 49\n          }\n        }, React.createElement(TouchableOpacity, {\n          onLongPress: function onLongPress() {\n            return _this2.props.redirectToItemDetail(item);\n          },\n          delayLongPress: 1000,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 870,\n            columnNumber: 51\n          }\n        }, React.createElement(Text, {\n          numberOfLines: 2,\n          style: item.name && item.name.length <= 32 ? {\n            fontSize: 18,\n            fontFamily: fontFamily.font400,\n            width: \"65%\",\n            textAlign: \"left\"\n          } : {\n            fontSize: 16,\n            fontFamily: fontFamily.font400,\n            width: \"65%\",\n            textAlign: \"left\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 872,\n            columnNumber: 53\n          }\n        }, item.name))), React.createElement(View, {\n          style: {\n            padding: 4,\n            justifyContent: \"center\",\n            backgroundColor: \"#b6cadd\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 883,\n            columnNumber: 49\n          }\n        }, React.createElement(Text, {\n          numberOfLines: 1,\n          ellipsizeMode: \"tail\",\n          style: {\n            fontSize: 18,\n            fontFamily: fontFamily.font700,\n            color: \"#3f638b\",\n            width: '65%'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 888,\n            columnNumber: 51\n          }\n        }, item.sku)), React.createElement(View, {\n          style: {\n            backgroundColor: \"#c1d4e6\",\n            paddingLeft: 3,\n            paddingRight: 3\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 895,\n            columnNumber: 49\n          }\n        }, React.createElement(View, {\n          style: {\n            width: \"75%\",\n            flexDirection: \"row\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 896,\n            columnNumber: 51\n          }\n        }, item && item.location !== null && item.location !== \"\" && React.createElement(View, {\n          style: {\n            flex: 1,\n            flexDirection: \"row\",\n            alignItems: \"baseline\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 899,\n            columnNumber: 55\n          }\n        }, React.createElement(Text, {\n          style: {\n            fontSize: 12,\n            fontFamily: fontFamily.font400\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 900,\n            columnNumber: 57\n          }\n        }, \"L1:\"), React.createElement(Text, {\n          numberOfLines: 1,\n          ellipsizeMode: \"tail\",\n          style: {\n            fontSize: 15,\n            fontFamily: fontFamily.font700\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 901,\n            columnNumber: 57\n          }\n        }, item.location)), item && item.custom_product_1 !== null && item.custom_product_1 !== \"\" && React.createElement(View, {\n          style: {\n            flex: 1,\n            flexDirection: \"row\",\n            alignItems: \"baseline\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 911,\n            columnNumber: 55\n          }\n        }, React.createElement(Text, {\n          style: {\n            fontSize: 12,\n            fontFamily: fontFamily.font400\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 912,\n            columnNumber: 57\n          }\n        }, \"C1:\"), React.createElement(Text, {\n          numberOfLines: 1,\n          ellipsizeMode: \"tail\",\n          style: {\n            fontSize: 15,\n            fontFamily: fontFamily.font700\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 913,\n            columnNumber: 57\n          }\n        }, item.custom_product_1)))), React.createElement(View, {\n          style: {\n            backgroundColor: \"#d3def4\",\n            paddingLeft: 3,\n            paddingRight: 3,\n            borderBottomLeftRadius: 10,\n            borderBottomRightRadius: 10\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 923,\n            columnNumber: 49\n          }\n        }, React.createElement(Text, {\n          style: {\n            fontSize: 20,\n            width: \"75%\",\n            fontFamily: fontFamily.font400\n          },\n          numberOfLines: 1,\n          ellipsizeMode: \"tail\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 924,\n            columnNumber: 51\n          }\n        }, item && item.barcodes.length > 0 && item.barcodes[0].barcode))), React.createElement(View, {\n          style: {\n            position: \"absolute\",\n            top: 0,\n            right: 0,\n            height: \"100%\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 937,\n            columnNumber: 47\n          }\n        }, React.createElement(LinearGradient, {\n          locations: [0, 0.04, 0.08],\n          start: {\n            x: .9,\n            y: 1\n          },\n          colors: ['#3d4851', '#9EA4A8', '#ffffff'],\n          style: {\n            height: 100,\n            width: 100,\n            backgroundColor: \"#000000\",\n            shadowColor: \"#000\",\n            shadowOffset: {\n              width: 0,\n              height: 0\n            },\n            shadowOpacity: 0.58,\n            shadowRadius: 29,\n            elevation: 3,\n            borderTopLeftRadius: 5,\n            borderBottomLeftRadius: 5,\n            marginTop: 5,\n            justifyContent: \"center\",\n            alignItems: \"center\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 938,\n            columnNumber: 49\n          }\n        }, React.createElement(Text, {\n          style: {\n            width: '90%',\n            position: \"absolute\",\n            textAlign: \"center\",\n            fontSize: 18,\n            fontFamily: fontFamily.font600,\n            backgroundColor: \"#fff\",\n            opacity: 0.7,\n            bottom: 0,\n            right: 0,\n            left: 0,\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n            zIndex: 999\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 957,\n            columnNumber: 51\n          }\n        }, item.scanned_qty, \"/\", item.qty_remaining + item.scanned_qty), React.createElement(Image, {\n          source: {\n            uri: item.images && item.images.length > 0 ? item.images[0].image : placeholder\n          },\n          style: {\n            height: \"90%\",\n            width: \"90%\",\n            resizeMode: 'contain',\n            borderRadius: 10\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 960,\n            columnNumber: 51\n          }\n        })))));\n      }) : React.createElement(View, {\n        style: globalStyles.p_10,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 970,\n          columnNumber: 37\n        }\n      }, React.createElement(Text, {\n        style: styles.scannedItemNameText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 971,\n          columnNumber: 39\n        }\n      }, \"No Record\"))), this.props.logList && React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 980,\n          columnNumber: 31\n        }\n      }, props.localLogs && props.localLogs.length > 0 ? props.localLogs && props.localLogs.slice(0).reverse().map(function (log, index) {\n        return React.createElement(View, {\n          key: index,\n          style: [globalStyles.flexDirectionRow, {\n            paddingLeft: 10,\n            paddingBottom: 0,\n            paddingTop: 5,\n            paddingRight: 10,\n            textAlign: \"left\",\n            borderBottomWidth: 1,\n            borderBottomColor: \"#000\"\n          }],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 986,\n            columnNumber: 41\n          }\n        }, React.createElement(View, {\n          style: styles.actionBox,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 987,\n            columnNumber: 43\n          }\n        }, React.createElement(Text, {\n          style: [styles.logDate, {\n            color: \"#8a8989\",\n            fontFamily: fontFamily.font500\n          }],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 988,\n            columnNumber: 45\n          }\n        }, moment(log.time).format('MMMM Do YYYY, h:mm:ss a')), log.event === \"regular\" && React.createElement(View, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 993,\n            columnNumber: 47\n          }\n        }, log.Log_count !== \"\" ? React.createElement(View, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 997,\n            columnNumber: 53\n          }\n        }, React.createElement(Text, {\n          style: [styles.logAction, {\n            color: \"#8a8989\",\n            fontFamily: fontFamily.font500\n          }],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 998,\n            columnNumber: 55\n          }\n        }, \"Product with barcode: \" + log.input + \" and sku: \" + log.SKU + \" scanned - by: \" + log.name), React.createElement(Text, {\n          style: [styles.logDate, {\n            color: \"#8a8989\",\n            fontFamily: fontFamily.font500\n          }],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1001,\n            columnNumber: 55\n          }\n        }, \"Multibarcode count of \" + log.Log_count + \" scanned for product \" + log.SKU + \" \")) : log.actionBarcode ? React.createElement(Text, {\n          style: [styles.logAction, {\n            color: \"#8a8989\",\n            fontFamily: fontFamily.font500\n          }],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1008,\n            columnNumber: 55\n          }\n        }, \"Product with barcode: \" + log.input + \" and sku: \" + log.SKU + \" scanned - by: \" + log.name) : React.createElement(Text, {\n          style: [styles.logAction, {\n            color: \"#8a8989\",\n            fontFamily: fontFamily.font500\n          }],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1012,\n            columnNumber: 55\n          }\n        }, \"INVALID SCAN - Product with barcode: \" + log.input + \" and sku: \" + log.SKU + \" scanned - by: \" + log.name)), log.event === \"click_scan\" && React.createElement(Text, {\n          style: [styles.logAction, {\n            color: \"#8a8989\",\n            fontFamily: fontFamily.font500\n          }],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1020,\n            columnNumber: 47\n          }\n        }, \" Item with SKU: \" + log.SKU + \" has been click scanned - by: \" + log.name), log.event === \"bulk_scan\" && React.createElement(Text, {\n          style: [styles.logAction, {\n            color: \"#8a8989\",\n            fontFamily: fontFamily.font500\n          }],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1026,\n            columnNumber: 47\n          }\n        }, \"Item \" + log.SKU + \" scanned through Bulk Scan - by: \" + log.name), log.event === \"type_scan\" && React.createElement(View, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1032,\n            columnNumber: 47\n          }\n        }, React.createElement(Text, {\n          style: [styles.logAction, {\n            color: \"#8a8989\",\n            fontFamily: fontFamily.font500\n          }],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1033,\n            columnNumber: 49\n          }\n        }, \"Item with SKU: \" + log.SKU + \" has been click scanned for a Type-In count - by: \" + log.name), React.createElement(Text, {\n          style: [styles.logAction, {\n            color: \"#8a8989\",\n            fontFamily: fontFamily.font500\n          }],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1036,\n            columnNumber: 49\n          }\n        }, \"Type-In count of \" + log.count + \" entered for product \" + log.SKU)), log.event === \"serial_scan\" && React.createElement(Text, {\n          style: [styles.logAction, {\n            color: \"#8a8989\",\n            fontFamily: fontFamily.font500\n          }],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1043,\n            columnNumber: 47\n          }\n        }, \"Product: \" + log.SKU + \" Serial scanned: \\\"check\\\" - by: \" + log.name)));\n      }) : React.createElement(View, {\n        style: globalStyles.p_10,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1052,\n          columnNumber: 37\n        }\n      }, React.createElement(Text, {\n        style: styles.scannedItemNameText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1053,\n          columnNumber: 39\n        }\n      }, \"No Record\"))))))) : React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1117,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        style: {\n          height: windowHeight - 90,\n          width: \"100%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1118,\n          columnNumber: 19\n        }\n      }, React.createElement(View, {\n        style: styles.actionButtonsView,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1119,\n          columnNumber: 21\n        }\n      }, React.createElement(View, {\n        style: {\n          position: \"relative\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1120,\n          columnNumber: 23\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return _this2.orderDetail(Order);\n        },\n        style: {\n          marginRight: 45,\n          marginLeft: 45\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1121,\n          columnNumber: 25\n        }\n      }, React.createElement(Text, {\n        numberOfLines: 1,\n        ellipsizeMode: \"tail\",\n        style: [styles.nowScanningTextView, {\n          textAlign: \"center\",\n          margin: 8\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1123,\n          columnNumber: 27\n        }\n      }, Order.increment_id)), React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          var actionBarShow = !_this2.state.actionBarShow;\n\n          _this2.setState({\n            actionBarShow: actionBarShow\n          });\n        },\n        style: {\n          position: \"absolute\",\n          right: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1127,\n          columnNumber: 25\n        }\n      }, React.createElement(Image, {\n        style: [styles.nowScanningTextView, {\n          textAlign: \"center\",\n          marginBottom: 8,\n          marginTop: 8\n        }],\n        source: toggle ? toggle : \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1133,\n          columnNumber: 27\n        }\n      }))), this.state.actionBarShow && React.createElement(View, {\n        style: styles.actionButtonInnerView,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1138,\n          columnNumber: 25\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: styles.restartButtonDesign,\n        onPress: this.props.restartButton,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1139,\n          columnNumber: 27\n        }\n      }, React.createElement(View, {\n        style: {\n          display: \"flex\",\n          flexDirection: \"row\",\n          alignItems: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1142,\n          columnNumber: 29\n        }\n      }, React.createElement(Image, {\n        style: styles.actionImages,\n        source: restart ? restart : \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1143,\n          columnNumber: 31\n        }\n      }), windowWidth > 375 && React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1147,\n          columnNumber: 33\n        }\n      }, React.createElement(View, {\n        style: {\n          flexDirection: \"column\",\n          alignItems: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1148,\n          columnNumber: 35\n        }\n      }, React.createElement(Text, {\n        style: styles.actionButtonText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1149,\n          columnNumber: 37\n        }\n      }, \"Restart\"), React.createElement(Text, {\n        style: styles.actionButtonText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1150,\n          columnNumber: 37\n        }\n      }, \"Order\"))))), React.createElement(TouchableOpacity, {\n        style: styles.noteSaveButtonDesign,\n        onPress: this.props.saveChanges,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1156,\n          columnNumber: 27\n        }\n      }, React.createElement(View, {\n        style: {\n          display: \"flex\",\n          flexDirection: \"row\",\n          alignItems: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1159,\n          columnNumber: 29\n        }\n      }, React.createElement(Image, {\n        style: styles.actionImages,\n        source: deleteImage ? deleteImage : \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1161,\n          columnNumber: 31\n        }\n      }), windowWidth > 375 && React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1165,\n          columnNumber: 33\n        }\n      }, React.createElement(View, {\n        style: {\n          flexDirection: \"column\",\n          alignItems: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1166,\n          columnNumber: 35\n        }\n      }, React.createElement(Text, {\n        style: styles.actionButtonText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1167,\n          columnNumber: 37\n        }\n      }, \"Remove\"), React.createElement(Text, {\n        style: styles.actionButtonText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1168,\n          columnNumber: 37\n        }\n      }, \"Item\"))))), React.createElement(TouchableOpacity, {\n        style: styles.noteSaveButtonDesign,\n        onPress: this.props.addNote,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1174,\n          columnNumber: 27\n        }\n      }, React.createElement(View, {\n        style: {\n          display: \"flex\",\n          flexDirection: \"row\",\n          alignItems: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1177,\n          columnNumber: 29\n        }\n      }, React.createElement(Image, {\n        style: styles.actionImages,\n        source: note ? note : \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1178,\n          columnNumber: 31\n        }\n      }), windowWidth > 375 && React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1182,\n          columnNumber: 33\n        }\n      }, React.createElement(View, {\n        style: {\n          flexDirection: \"column\",\n          alignItems: \"center\",\n          marginLeft: 2\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1183,\n          columnNumber: 35\n        }\n      }, React.createElement(Text, {\n        style: styles.actionButtonText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1184,\n          columnNumber: 37\n        }\n      }, \"Add\"), React.createElement(Text, {\n        style: styles.actionButtonText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1185,\n          columnNumber: 37\n        }\n      }, \"Note\"))))))), React.createElement(View, {\n        style: {\n          backgroundColor: \"#2c2c2c\",\n          padding: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1194,\n          columnNumber: 21\n        }\n      }, React.createElement(View, {\n        style: {\n          flexDirection: \"row\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1195,\n          columnNumber: 23\n        }\n      }, React.createElement(View, {\n        style: {\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1196,\n          columnNumber: 25\n        }\n      }, React.createElement(View, {\n        style: {\n          height: 10,\n          width: 10,\n          backgroundColor: \"#5f80ff\",\n          borderRadius: 30,\n          marginRight: 10,\n          shadowOffset: {\n            width: 0,\n            height: 0\n          },\n          shadowColor: '#fff',\n          shadowOpacity: 1.0\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1197,\n          columnNumber: 27\n        }\n      })), Order && Order.unscanned_items && Order.unscanned_items[0] && Order.unscanned_items[0].product_type === \"individual\" ? React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1206,\n          columnNumber: 29\n        }\n      }, React.createElement(TextInput, {\n        value: this.props.barcodeState,\n        autoFocus: false,\n        ref: this.props.InputField,\n        onSubmitEditing: this.props.scanBarcode,\n        onChangeText: this.props.stateUpdate,\n        style: {\n          outline: \"none\",\n          flex: 15,\n          paddingLeft: 20,\n          padding: 5,\n          backgroundColor: \"#cbcbca\",\n          fontSize: 15,\n          fontFamily: fontFamily.font700,\n          color: \"black\",\n          width: \"100%\",\n          textAlign: \"left\",\n          borderWidth: 1,\n          borderColor: \"#cbcbca\",\n          borderRadius: 5\n        },\n        placeholder: \"Ready For Product Scan\",\n        placeholderTextColor: \"#4c4c4b\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1207,\n          columnNumber: 31\n        }\n      }), React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return _this2.props.clickScan(Order.unscanned_items[0].child_items[0], \"unscan\");\n        },\n        onLongPress: this.props.scanAllItem,\n        delayLongPress: 1000,\n        style: {\n          flex: 4,\n          marginLeft: 5,\n          backgroundColor: \"#41970f\",\n          textTransform: \"uppercase\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          padding: 5,\n          borderRadius: 5\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1216,\n          columnNumber: 31\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontWeight: \"bold\",\n          fontSize: 20,\n          color: \"#fff\",\n          textShadowColor: '#000',\n          textShadowOffset: {\n            width: 1,\n            height: 1\n          },\n          textAlign: \"center\",\n          fontSize: 20\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1220,\n          columnNumber: 33\n        }\n      }, \"Pass\"))) : React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1224,\n          columnNumber: 29\n        }\n      }, React.createElement(TextInput, {\n        value: this.props.barcodeState,\n        autoFocus: false,\n        ref: this.props.InputField,\n        onSubmitEditing: this.props.scanBarcode,\n        onChangeText: this.props.stateUpdate,\n        style: {\n          flex: 15,\n          paddingLeft: 20,\n          padding: 5,\n          backgroundColor: \"#cbcbca\",\n          fontSize: 15,\n          fontWeight: \"bold\",\n          color: \"black\",\n          width: \"100%\",\n          textAlign: \"left\",\n          borderWidth: 1,\n          borderColor: \"#cbcbca\",\n          borderRadius: 5\n        },\n        placeholder: \"Ready For Product Scan\",\n        placeholderTextColor: \"#4c4c4b\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1225,\n          columnNumber: 31\n        }\n      }), React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return _this2.props.clickScan(Order.unscanned_items[0], \"unscan\");\n        },\n        onLongPress: this.props.scanAllItem,\n        delayLongPress: 1000,\n        style: {\n          flex: 4,\n          marginLeft: 5,\n          backgroundColor: \"#41970f\",\n          textTransform: \"uppercase\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          padding: 5,\n          borderRadius: 5\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1234,\n          columnNumber: 31\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontWeight: \"bold\",\n          fontSize: 20,\n          color: \"#fff\",\n          textShadowColor: '#000',\n          textShadowOffset: {\n            width: 1,\n            height: 1\n          },\n          textAlign: \"center\",\n          fontSize: 20\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1238,\n          columnNumber: 33\n        }\n      }, \"Pass\"))))), React.createElement(ScrollView, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1244,\n          columnNumber: 21\n        }\n      }, props.order && props.order.order && props.order.order.unscanned_items && props.order.order.unscanned_items.length > 0 ? props.order.order.unscanned_items && props.order.order.unscanned_items.map(function (item, index) {\n        return React.createElement(View, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1250,\n            columnNumber: 31\n          }\n        }, item && item.product_type === \"single\" || item && item.product_type === \"depends\" ? React.createElement(View, {\n          key: index,\n          style: {\n            flexDirection: \"row\",\n            margin: 0,\n            borderRadius: 30,\n            borderWidth: 4,\n            backgroundColor: \"#336598\",\n            borderColor: \"black\",\n            padding: 10\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1254,\n            columnNumber: 37\n          }\n        }, React.createElement(View, {\n          style: {\n            flex: 20\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1255,\n            columnNumber: 39\n          }\n        }, React.createElement(TouchableOpacity, {\n          onLongPress: function onLongPress() {\n            return _this2.props.redirectToItemDetail(item);\n          },\n          delayLongPress: 1000,\n          style: {\n            backgroundColor: \"#fff\",\n            padding: 5,\n            borderTopLeftRadius: 20,\n            borderTopRightRadius: 20\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1256,\n            columnNumber: 41\n          }\n        }, React.createElement(Text, {\n          numberOfLines: 2,\n          style: item.name && item.name.length <= 32 ? {\n            fontSize: 20,\n            maxWidth: \"75%\"\n          } : {\n            fontSize: 16,\n            maxWidth: \"75%\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1259,\n            columnNumber: 43\n          }\n        }, item.name)), React.createElement(Text, {\n          numberOfLines: 1,\n          ellipsizeMode: \"tail\",\n          style: {\n            color: \"#fff\",\n            fontSize: 20,\n            fontWeight: \"600\",\n            maxWidth: \"70%\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1269,\n            columnNumber: 41\n          }\n        }, item.sku), React.createElement(View, {\n          style: {\n            backgroundColor: \"#95b0e5\",\n            paddingLeft: 3,\n            paddingRight: 3\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1275,\n            columnNumber: 41\n          }\n        }, React.createElement(View, {\n          style: {\n            maxWidth: \"70%\",\n            flexDirection: \"row\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1276,\n            columnNumber: 43\n          }\n        }, item.location !== null && item.location !== \"\" && item.location !== undefined && React.createElement(View, {\n          style: {\n            flex: 1,\n            flexDirection: \"row\",\n            alignItems: \"baseline\",\n            height: 25\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1279,\n            columnNumber: 47\n          }\n        }, React.createElement(Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1280,\n            columnNumber: 49\n          }\n        }, \"L1:\"), React.createElement(Text, {\n          numberOfLines: 1,\n          ellipsizeMode: \"tail\",\n          style: {\n            fontSize: 20,\n            fontWeight: \"bold\",\n            paddingRight: 10\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1281,\n            columnNumber: 49\n          }\n        }, item.location)), item.custom_product_1 !== null && item.custom_product_1 !== \"\" && item.custom_product_1 !== undefined && React.createElement(View, {\n          style: {\n            flex: 1,\n            flexDirection: \"row\",\n            alignItems: \"baseline\",\n            height: 25\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1291,\n            columnNumber: 47\n          }\n        }, React.createElement(Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1292,\n            columnNumber: 49\n          }\n        }, \"C1:\"), React.createElement(Text, {\n          numberOfLines: 1,\n          ellipsizeMode: \"tail\",\n          style: {\n            fontSize: 20,\n            fontWeight: \"bold\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1293,\n            columnNumber: 49\n          }\n        }, item.custom_product_1)))), React.createElement(View, {\n          style: {\n            backgroundColor: \"#d3def4\",\n            padding: 3,\n            borderBottomLeftRadius: 20,\n            borderBottomRightRadius: 20\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1303,\n            columnNumber: 41\n          }\n        }, React.createElement(Text, {\n          style: {\n            fontSize: 20,\n            maxWidth: \"75%\"\n          },\n          numberOfLines: 1,\n          ellipsizeMode: \"tail\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1304,\n            columnNumber: 43\n          }\n        }, item && item.barcodes.length > 0 && item.barcodes[0].barcode))), React.createElement(View, {\n          style: {\n            flex: 5,\n            borderBottomRightRadius: 12,\n            borderTopRightRadius: 12,\n            position: \"absolute\",\n            right: 6,\n            width: \"25%\",\n            height: \"100%\",\n            bottom: 0,\n            top: 10\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1317,\n            columnNumber: 39\n          }\n        }, React.createElement(View, {\n          style: {\n            backgroundColor: \"#fff\",\n            shadowColor: \"#000\",\n            shadowOffset: {\n              width: -5,\n              height: 2\n            },\n            shadowOpacity: 0.25,\n            shadowRadius: 3.84,\n            elevation: 3,\n            borderRadius: 12,\n            borderWidth: 8,\n            borderColor: \"#336598\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1318,\n            columnNumber: 41\n          }\n        }, React.createElement(Text, {\n          style: {\n            position: \"absolute\",\n            textAlign: \"center\",\n            fontSize: 18,\n            fontWeight: \"600\",\n            backgroundColor: \"#fff\",\n            opacity: 0.7,\n            bottom: 0,\n            right: 0,\n            left: 0,\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n            zIndex: 999\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1319,\n            columnNumber: 43\n          }\n        }, item.scanned_qty, \"/\", item.qty_remaining + item.scanned_qty), React.createElement(Image, {\n          source: {\n            uri: item.images && item.images.length > 0 ? item.images[0].image : placeholder\n          },\n          style: {\n            height: \"100%\",\n            width: \"100%\",\n            resizeMode: 'contain',\n            borderRadius: 12\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1322,\n            columnNumber: 43\n          }\n        })))) : React.createElement(View, {\n          key: index,\n          style: {\n            margin: 0,\n            borderRadius: 30,\n            borderWidth: 4,\n            borderColor: \"black\",\n            backgroundColor: \"#3f5163\",\n            padding: 10\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1328,\n            columnNumber: 37\n          }\n        }, React.createElement(View, {\n          style: {\n            flexDirection: \"row\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1329,\n            columnNumber: 39\n          }\n        }, React.createElement(View, {\n          style: {\n            height: 5,\n            flex: 8,\n            backgroundColor: \"#fff\",\n            borderRadius: 3,\n            position: \"relative\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1330,\n            columnNumber: 41\n          }\n        }, React.createElement(Text, {\n          style: {\n            fontSize: 18,\n            fontWeight: \"bold\",\n            position: \"absolute\",\n            left: \"50%\",\n            top: -7,\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n            backgroundColor: \"#3f5163\",\n            paddingLeft: 4,\n            paddingRight: 4,\n            color: \"#fff\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1331,\n            columnNumber: 43\n          }\n        }, \"KIT\")), React.createElement(View, {\n          style: {\n            flex: 2\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1335,\n            columnNumber: 41\n          }\n        }, React.createElement(Text, {\n          style: {\n            textAlign: \"center\",\n            color: \"#fff\",\n            fontSize: 18,\n            marginTop: -6,\n            fontWeight: \"bold\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1336,\n            columnNumber: 43\n          }\n        }, item.scanned_qty, \"/\", item.qty_remaining + item.scanned_qty))), React.createElement(View, {\n          style: {\n            flexDirection: \"row\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1339,\n            columnNumber: 39\n          }\n        }, React.createElement(View, {\n          style: {\n            flex: 8\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1340,\n            columnNumber: 41\n          }\n        }, React.createElement(TouchableOpacity, {\n          onLongPress: function onLongPress() {\n            return _this2.props.redirectToItemDetail(item);\n          },\n          delayLongPress: 1000,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1341,\n            columnNumber: 43\n          }\n        }, React.createElement(Text, {\n          numberOfLines: 2,\n          ellipsizeMode: \"tail\",\n          style: {\n            fontSize: 16,\n            color: \"#fff\",\n            fontWeight: \"600\",\n            paddingRight: 3,\n            paddingLeft: 3\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1343,\n            columnNumber: 45\n          }\n        }, item.name)), React.createElement(Text, {\n          numberOfLines: 1,\n          ellipsizeMode: \"tail\",\n          style: {\n            fontSize: 20,\n            color: \"#fff\",\n            fontWeight: \"600\",\n            paddingRight: 3,\n            paddingLeft: 3,\n            marginBottom: 2\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1351,\n            columnNumber: 43\n          }\n        }, item.sku)), item.images.length > 0 && item.images[0].image && React.createElement(View, {\n          style: {\n            flex: 2,\n            borderRadius: 12,\n            borderWidth: 12,\n            maxHeight: 100,\n            borderColor: \"#3f5163\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1358,\n            columnNumber: 43\n          }\n        }, React.createElement(Image, {\n          source: {\n            uri: item.images && item.images.length > 0 ? item.images[0].image : placeholder\n          },\n          style: {\n            height: \"100%\",\n            width: \"100%\",\n            resizeMode: 'contain',\n            borderRadius: 12\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1359,\n            columnNumber: 45\n          }\n        }))), item && item.child_items && item.child_items.length > 0 && item.child_items.map(function (childItem, index) {\n          return React.createElement(View, {\n            key: index,\n            style: {\n              flexDirection: \"row\",\n              marginBottom: 5,\n              backgroundColor: \"#fff\",\n              borderBottomRightRadius: 20,\n              borderTopRightRadius: 20\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1367,\n              columnNumber: 45\n            }\n          }, React.createElement(View, {\n            style: {\n              flex: 20\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1368,\n              columnNumber: 47\n            }\n          }, React.createElement(View, {\n            style: {\n              backgroundColor: \"#fff\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1369,\n              columnNumber: 49\n            }\n          }), React.createElement(TouchableOpacity, {\n            onLongPress: function onLongPress() {\n              return _this2.props.redirectToItemDetail(childItem);\n            },\n            delayLongPress: 1000,\n            style: {\n              backgroundColor: \"#fff\",\n              paddingLeft: 5,\n              paddingTop: 10\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1370,\n              columnNumber: 49\n            }\n          }, React.createElement(Text, {\n            numberOfLines: 2,\n            ellipsizeMode: \"tail\",\n            style: childItem.name && childItem.name.length <= 32 ? {\n              fontSize: 20,\n              width: \"75%\"\n            } : {\n              fontSize: 16,\n              width: \"75%\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1373,\n              columnNumber: 51\n            }\n          }, childItem.name)), React.createElement(Text, {\n            numberOfLines: 1,\n            ellipsizeMode: \"tail\",\n            style: {\n              backgroundColor: \"#3f5163\",\n              color: \"#fff\",\n              fontSize: 20,\n              fontWeight: \"600\",\n              width: \"75%\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1385,\n              columnNumber: 49\n            }\n          }, childItem.sku), React.createElement(View, {\n            style: {\n              backgroundColor: \"#a4b4c5\",\n              height: 25\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1391,\n              columnNumber: 49\n            }\n          }, React.createElement(View, {\n            style: {\n              flexDirection: \"row\",\n              width: \"65%\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1392,\n              columnNumber: 51\n            }\n          }, childItem.location !== null && childItem.location !== \"\" && React.createElement(View, {\n            style: {\n              flex: 1,\n              flexDirection: \"row\",\n              alignItems: \"baseline\",\n              height: 25\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1395,\n              columnNumber: 55\n            }\n          }, React.createElement(Text, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1396,\n              columnNumber: 57\n            }\n          }, \"L1:\"), React.createElement(Text, {\n            numberOfLines: 1,\n            ellipsizeMode: \"tail\",\n            style: {\n              fontSize: 20,\n              fontWeight: \"bold\",\n              paddingRight: 10\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1397,\n              columnNumber: 57\n            }\n          }, childItem.location)), childItem.custom_product_1 !== null && childItem.custom_product_1 !== \"\" && React.createElement(View, {\n            style: {\n              flex: 1,\n              flexDirection: \"row\",\n              alignItems: \"baseline\",\n              height: 25\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1407,\n              columnNumber: 55\n            }\n          }, React.createElement(Text, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1408,\n              columnNumber: 57\n            }\n          }, \"C1:\"), React.createElement(Text, {\n            numberOfLines: 1,\n            ellipsizeMode: \"tail\",\n            style: {\n              fontSize: 20,\n              fontWeight: \"bold\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1409,\n              columnNumber: 57\n            }\n          }, childItem.custom_product_1)))), React.createElement(View, {\n            style: {\n              backgroundColor: \"#cdd7e2\",\n              borderBottomRightRadius: 20\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1419,\n              columnNumber: 49\n            }\n          }, React.createElement(Text, {\n            numberOfLines: 1,\n            ellipsizeMode: \"tail\",\n            style: {\n              width: \"75%\",\n              fontSize: 20\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1420,\n              columnNumber: 51\n            }\n          }, childItem && childItem.barcodes.length > 0 && childItem.barcodes[0].barcode))), React.createElement(View, {\n            style: {\n              flex: 5,\n              borderBottomRightRadius: 12,\n              paddingTop: 10,\n              position: \"absolute\",\n              width: \"25%\",\n              right: 0,\n              top: 0,\n              bottom: 0\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1431,\n              columnNumber: 47\n            }\n          }, React.createElement(View, {\n            style: {\n              backgroundColor: \"#fff\",\n              shadowColor: \"#000\",\n              shadowOffset: {\n                width: -5,\n                height: 2\n              },\n              shadowOpacity: 0.25,\n              shadowRadius: 3.84,\n              elevation: 3,\n              borderRadius: 12,\n              borderWidth: 8,\n              borderColor: \"#3f5163\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1432,\n              columnNumber: 49\n            }\n          }, React.createElement(Text, {\n            style: {\n              position: \"absolute\",\n              textAlign: \"center\",\n              fontSize: 18,\n              fontWeight: \"600\",\n              backgroundColor: \"#fff\",\n              opacity: 0.7,\n              bottom: 0,\n              right: 0,\n              left: 0,\n              marginLeft: \"auto\",\n              marginRight: \"auto\",\n              zIndex: 999\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1433,\n              columnNumber: 51\n            }\n          }, childItem.scanned_qty, \"/\", childItem.qty_remaining + childItem.scanned_qty), React.createElement(Image, {\n            source: {\n              uri: childItem.images && childItem.images.length > 0 ? childItem.images[0].image : placeholder\n            },\n            style: {\n              height: \"100%\",\n              width: \"100%\",\n              resizeMode: 'contain',\n              borderRadius: 12\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1436,\n              columnNumber: 51\n            }\n          }))));\n        })));\n      }) : React.createElement(View, {\n        style: globalStyles.p_10,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1450,\n          columnNumber: 27\n        }\n      }, React.createElement(Text, {\n        style: styles.scannedItemNameText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1451,\n          columnNumber: 29\n        }\n      }, \"No more item remaining to scan\")))))));\n    }\n  }]);\n\n  return UnscannedItems;\n}(Component);\n\nexport { UnscannedItems as default };","map":{"version":3,"sources":["C:/Users/DELL PC/Downloads/GroovePacker/src/components/scanpack/unscanned_items.js"],"names":["React","Component","styles","globalStyles","restart","note","deleteImage","toggle","LinearGradient","backImage","upArrow","downArrow","placeholder","fontFamily","moment","count","UnscannedItems","props","orderDetail","order","navigation","navigate","data","state","actionBarShow","unscannedItemPerPage","scanPlaceHolderValue","unscannedInputField","createRef","Order","localCount","unscanned_items","length","map","item","child_items","product_type","childItem","qty_remaining","windowWidth","Dimensions","get","width","windowHeight","height","perPage","Platform","OS","unscannedItemContainerWeb","backgroundColor","flex","unscannedItemTitleWeb","slice","index","margin","flexDirection","borderRadius","borderWidth","borderColor","padding","redirectToItemDetail","paddingLeft","paddingRight","borderTopLeftRadius","borderTopRightRadius","name","fontSize","maxWidth","color","sku","location","undefined","alignItems","fontWeight","custom_product_1","borderBottomLeftRadius","borderBottomRightRadius","barcodes","barcode","position","right","bottom","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","textAlign","opacity","left","marginLeft","marginRight","zIndex","scanned_qty","uri","images","image","resizeMode","top","marginTop","clickScan","marginBottom","p_10","scannedItemNameText","setState","textShadowColor","textShadowOffset","display","justifyContent","background","actionButtonsView","x","y","nowScanningTextView","font700","increment_id","actionButtonInnerView","restartButtonDesign","restartButton","actionImages","actionButtonText","font500","noteSaveButtonDesign","saveChanges","addNote","barcodeState","InputField","scanBarcode","stateUpdate","font600","blurValue","scanAllItem","paddingHorizontal","font800","outline","console","log","showScannedList","scannedList","showUnscannedList","scanned_items","unscannedList","showLogList","logList","navButton","minHeight","borderTopEndRadius","font400","paddingTop","localLogs","reverse","flexDirectionRow","paddingBottom","borderBottomWidth","borderBottomColor","actionBox","logDate","time","format","event","Log_count","logAction","input","SKU","actionBarcode","textTransform","maxHeight"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { View, Text, TextInput, ImageBackground, Image, Dimensions, TouchableOpacity, Platform, ScrollView } from 'react-native';\nimport styles from '../../style/scanpack';\nimport globalStyles from '../../style/global';\nimport restart from \"../../../assets/restart.png\";\nimport note from \"../../../assets/note.png\";\nimport deleteImage from \"../../../assets/delete.png\";\nimport toggle from \"../../../assets/dotToggle.png\";\nimport { LinearGradient } from 'expo-linear-gradient';\nimport backImage from \"../../../assets/bg_left.png\";\nimport upArrow from \"../../../assets/up_arrow.png\";\nimport downArrow from \"../../../assets/down_arrow.png\";\nimport placeholder from \"../../../assets/placeholder.png\";\nimport { fontFamily } from '../../helpers/fontFamily';\nimport moment from 'moment';\n\nlet count = 0\n\nexport default class UnscannedItems extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      actionBarShow: false,\n      unscannedItemPerPage: 1,\n      scanPlaceHolderValue: \"Ready For Product Scan\"\n    };\n    this.unscannedInputField = React.createRef();\n  }\n\n  orderDetail = (order) => {\n    // if(order){\n    // this.props.leaveComponent(this.props.order , \"submitLog\")\n    this.props.navigation.navigate(\"OrderDetail\", { data: order })\n    // }\n  }\n\n  render() {\n    let props = this.props\n    let Order = props.order.order\n    let localCount = 0\n    Order &&\n      Order.unscanned_items &&\n      Order.unscanned_items.length > 0 &&\n      Order.unscanned_items.map((item) => {\n        if (item.child_items && item.child_items.length > 0 && item.product_type === \"individual\") {\n          item.child_items.map((childItem) => {\n            localCount = localCount + childItem.qty_remaining\n          })\n        } else {\n          localCount = localCount + item.qty_remaining\n        }\n      }\n      )\n    count = localCount\n    const windowWidth = Dimensions.get('window').width;\n    const windowHeight = Dimensions.get('window').height;\n    let perPage = this.state.unscannedItemPerPage * 10\n\n    return (\n      <React.Fragment>\n        {\n          Order &&\n          <View style={Platform.OS === \"web\" ? styles.unscannedItemContainerWeb : { width: \"100%\", height: \"100%\", backgroundColor: \"#666666\" }}>\n            {\n              Platform.OS === \"web\"\n                ?\n                <View style={{ flex: 1, height: \"100%\" }}>\n                  {\n                    windowWidth >= 900\n                      ?\n                      <ImageBackground source={backImage} style={{ height: \"100%\" }}>\n                        <Text style={styles.unscannedItemTitleWeb}> {count} Unscanned Items</Text>\n                        {\n                          props.order && props.order.order && props.order.order.unscanned_items && props.order.order.unscanned_items.length > 0\n                            ?\n                            props.order.order.unscanned_items && props.order.order.unscanned_items.slice(0, perPage).map((item, index) => {\n                              return (\n                                <View style={{ margin: 1 }}>\n                                  {\n                                    (item && item.product_type === \"single\") || (item && item.product_type === \"depends\")\n                                      ?\n                                      <View key={index} style={{ flexDirection: \"row\", borderRadius: 20, borderWidth: 3, backgroundColor: \"#336598\", borderColor: \"black\", padding: 5 }}>\n                                        <View style={{ flex: 20 }}>\n                                          <TouchableOpacity onPress={() => this.props.redirectToItemDetail(item)}\n                                            style={{ backgroundColor: \"#fff\", paddingLeft: 5, paddingRight: 5, borderTopLeftRadius: 10, borderTopRightRadius: 10 }}>\n                                            <Text numberOfLines={item.name && item.name.length <= 32 ? 1 : 2}\n                                              style={item.name && item.name.length <= 32\n                                                ?\n                                                { fontSize: 18, maxWidth: \"75%\" }\n                                                :\n                                                { fontSize: 15, maxWidth: \"75%\" }}\n                                            >\n                                              {item.name}\n                                            </Text>\n                                          </TouchableOpacity>\n                                          <Text numberOfLines={1}\n                                            ellipsizeMode='tail'\n                                            style={{ color: \"#fff\", fontSize: 18, maxWidth: \"70%\" }}\n                                          >\n                                            {item.sku}\n                                          </Text>\n                                          <View style={{ backgroundColor: \"#95b0e5\", paddingLeft: 3, paddingRight: 3 }}>\n                                            <View style={{ maxWidth: \"75%\", flexDirection: \"row\" }}>\n                                              {\n                                                item.location !== null && item.location !== \"\" && item.location !== undefined &&\n                                                <View style={{ flex: 1, flexDirection: \"row\", alignItems: \"baseline\" }}>\n                                                  <Text style={{ fontSize: 10 }}>L1:</Text>\n                                                  <Text numberOfLines={1}\n                                                    ellipsizeMode='tail'\n                                                    style={{ fontSize: 15, fontWeight: \"bold\" }}\n                                                  >\n                                                    {item.location}\n                                                  </Text>\n                                                </View>\n                                              }\n                                              {\n                                                item.custom_product_1 !== null && item.custom_product_1 !== \"\" && item.custom_product_1 !== undefined &&\n                                                <View style={{ flex: 1, flexDirection: \"row\", alignItems: \"baseline\" }}>\n                                                  <Text style={{ fontSize: 10 }}>C1:</Text>\n                                                  <Text numberOfLines={1}\n                                                    ellipsizeMode='tail'\n                                                    style={{ fontSize: 15, fontWeight: \"bold\" }}\n                                                  >\n                                                    {item.custom_product_1}\n                                                  </Text>\n                                                </View>\n                                              }\n                                            </View>\n                                          </View>\n                                          <View style={{ backgroundColor: \"#d3def4\", paddingLeft: 3, paddingRight: 3, borderBottomLeftRadius: 10, borderBottomRightRadius: 10 }}>\n                                            <Text style={{ fontSize: 18, maxWidth: \"75%\" }}\n                                              numberOfLines={1}\n                                              ellipsizeMode='tail'\n                                            >\n                                              {\n                                                item &&\n                                                item.barcodes.length > 0 &&\n                                                item.barcodes[0].barcode\n                                              }\n                                            </Text>\n                                          </View>\n                                        </View>\n\n                                        <View style={{ flex: 5, borderBottomRightRadius: 10, borderTopRightRadius: 10, position: \"absolute\", right: 4, width: \"25%\", height: \"100%\", bottom: 0 }}>\n                                          <View style={{ backgroundColor: \"#fff\", shadowColor: \"#000\", shadowOffset: { width: 0, height: 0 }, shadowOpacity: 1, shadowRadius: 10, elevation: 3, borderRadius: 10, borderWidth: 4, borderColor: \"#336598\", height: \"100%\" }}>\n                                            <Text style={{ position: \"absolute\", textAlign: \"center\", fontSize: 16, fontWeight: \"600\", backgroundColor: \"#fff\", opacity: 0.7, bottom: 0, right: 0, left: 0, borderRadius: 10, marginLeft: \"auto\", marginRight: \"auto\", zIndex: 999 }}>\n                                              {item.scanned_qty}/{item.qty_remaining + item.scanned_qty}\n                                            </Text>\n                                            <Image source={{ uri: item.images && item.images.length > 0 ? item.images[0].image : placeholder }}\n                                              style={{ height: \"100%\", width: \"100%\", resizeMode: 'contain', borderRadius: 10 }} />\n                                          </View>\n                                        </View>\n                                      </View>\n                                      :\n                                      <View key={index} style={{ borderRadius: 10, borderWidth: 3, borderColor: \"black\", backgroundColor: \"#3f5163\", padding: 5 }}>\n                                        <View style={{ flexDirection: \"row\" }}>\n                                          <View style={{ height: 5, flex: 8, backgroundColor: \"#fff\", borderRadius: 3, position: \"relative\" }}>\n                                            <Text style={{ fontSize: 18, fontWeight: \"bold\", position: \"absolute\", left: \"50%\", top: -5, marginLeft: \"auto\", marginRight: \"auto\", backgroundColor: \"#3f5163\", paddingLeft: 4, paddingRight: 4, color: \"#fff\" }}>\n                                              KIT\n                                            </Text>\n                                          </View>\n                                          <View style={{ flex: 2 }}>\n                                            <Text style={{ textAlign: \"center\", color: \"#fff\", fontSize: 18, marginTop: -6, fontWeight: \"bold\" }}>{item.scanned_qty}/{item.qty_remaining + item.scanned_qty}</Text>\n                                          </View>\n                                        </View>\n                                        <View style={{ flexDirection: \"row\" }}>\n                                          <View style={{ flex: 8 }}>\n                                            <TouchableOpacity onPress={() => this.props.redirectToItemDetail(item)}>\n                                              <Text numberOfLines={item.name && item.name.length <= 32 ? 1 : 2}\n                                                ellipsizeMode='tail'\n                                                style={\n                                                  item.name && item.name.length <= 32\n                                                    ?\n                                                    { fontSize: 18, color: \"#fff\", fontWeight: \"600\", paddingRight: 3, paddingLeft: 3 }\n                                                    :\n                                                    { fontSize: 15, color: \"#fff\", fontWeight: \"600\", paddingRight: 3, paddingLeft: 3 }\n                                                }\n                                              >\n                                                {item.name}\n                                              </Text>\n                                            </TouchableOpacity>\n                                            <TouchableOpacity onPress={() => this.props.clickScan(Order.unscanned_items[0].child_items[0])}>\n                                              <Text numberOfLines={1}\n                                                ellipsizeMode='tail'\n                                                style={{ fontSize: 18, color: \"#fff\", paddingRight: 3, paddingLeft: 3, marginBottom: 2 }}>{item.sku}</Text>\n                                            </TouchableOpacity>\n                                          </View>\n                                          {\n                                            item.images.length > 0 && item.images[0].image &&\n                                            <View style={{ flex: 2, borderRadius: 10, borderWidth: 10, height: 80, borderColor: \"#3f5163\" }}>\n                                              <Image source={{ uri: item.images && item.images.length > 0 ? item.images[0].image : placeholder }}\n                                                style={{ height: \"100%\", width: \"100%\", resizeMode: 'contain', borderRadius: 10 }} />\n                                            </View>\n                                          }\n                                        </View>\n                                        {\n                                          item && item.child_items && item.child_items.length > 0 && item.child_items.map((childItem, index) => {\n                                            return (\n                                              <View key={index} style={{ flexDirection: \"row\", marginBottom: 5, backgroundColor: \"#fff\", borderRadius: 10 }}>\n                                                <View style={{ flex: 20 }}>\n                                                  <View style={{ backgroundColor: \"#fff\" }}></View>\n                                                  <TouchableOpacity onPress={() => this.props.redirectToItemDetail(childItem)}\n                                                    style={{ backgroundColor: \"#fff\", borderTopLeftRadius: 10, borderTopRightRadius: 20, paddingLeft: 5, paddingRight: 5 }}>\n                                                    <Text numberOfLines={childItem.name && childItem.name.length <= 32 ? 1 : 2}\n                                                      ellipsizeMode='tail'\n                                                      style={childItem.name && childItem.name.length <= 32\n                                                        ?\n                                                        { fontSize: 18, width: \"75%\" }\n                                                        :\n                                                        { fontSize: 15, width: \"75%\" }\n                                                      }\n                                                    >\n                                                      {childItem.name}\n                                                    </Text>\n                                                  </TouchableOpacity>\n                                                  <Text numberOfLines={1}\n                                                    ellipsizeMode='tail'\n                                                    style={{ backgroundColor: \"#3f5163\", color: \"#fff\", fontSize: 18, width: \"75%\" }}\n                                                  >\n                                                    {childItem.sku}\n                                                  </Text>\n                                                  <View style={{ backgroundColor: \"#a4b4c5\" }}>\n                                                    <View style={{ flexDirection: \"row\", width: \"75%\", paddingLeft: 3, paddingRight: 0 }}>\n                                                      {\n                                                        childItem.location !== null && childItem.location !== \"\" &&\n                                                        <View style={{ flex: 1, flexDirection: \"row\", alignItems: \"baseline\" }}>\n                                                          <Text style={{ fontSize: 10 }}>L1:</Text>\n                                                          <Text numberOfLines={1}\n                                                            ellipsizeMode='tail'\n                                                            style={{ fontSize: 15, fontWeight: \"bold\" }}\n                                                          >\n                                                            {childItem.location}\n                                                          </Text>\n                                                        </View>\n                                                      }\n                                                      {\n                                                        childItem.custom_product_1 !== null && childItem.custom_product_1 !== \"\" &&\n                                                        <View style={{ flex: 1, flexDirection: \"row\", alignItems: \"baseline\" }}>\n                                                          <Text style={{ fontSize: 10 }}>C1:</Text>\n                                                          <Text numberOfLines={1}\n                                                            ellipsizeMode='tail'\n                                                            style={{ fontSize: 15, fontWeight: \"bold\" }}\n                                                          >\n                                                            {childItem.custom_product_1}\n                                                          </Text>\n                                                        </View>\n                                                      }\n                                                    </View>\n                                                  </View>\n                                                  <View style={{ backgroundColor: \"#cdd7e2\", paddingLeft: 3, paddingRight: 3, borderBottomLeftRadius: 10, borderBottomRightRadius: 10 }}>\n                                                    <Text numberOfLines={1}\n                                                      ellipsizeMode='tail'\n                                                      style={{ width: \"75%\", fontSize: 18 }}>\n                                                      {\n                                                        childItem &&\n                                                        childItem.barcodes.length > 0 &&\n                                                        childItem.barcodes[0].barcode\n                                                      }\n                                                    </Text>\n                                                  </View>\n                                                </View>\n                                                <View style={{ flex: 5, borderBottomRightRadius: 10, position: \"absolute\", width: \"25%\", right: 0, top: 0, bottom: 0 }}>\n                                                  <View style={{ backgroundColor: \"#fff\", borderRadius: 10, shadowColor: \"#000\", shadowOffset: { width: 0, height: 0 }, shadowOpacity: 1, shadowRadius: 10, elevation: 3, borderRadius: 10, borderWidth: 4, borderColor: \"#3f5163\", height: \"100%\" }}>\n                                                    <Text style={{ position: \"absolute\", textAlign: \"center\", fontSize: 16, fontWeight: \"600\", backgroundColor: \"#fff\", opacity: 0.7, bottom: 0, right: 0, left: 0, marginLeft: \"auto\", marginRight: \"auto\", borderRadius: 10, zIndex: 999 }}>\n                                                      {childItem.scanned_qty}/{childItem.qty_remaining + childItem.scanned_qty}\n                                                    </Text>\n                                                    <Image source={{ uri: childItem.images && childItem.images.length > 0 ? childItem.images[0].image : placeholder }}\n                                                      style={{ height: \"100%\", width: \"100%\", resizeMode: 'contain', borderRadius: 10 }} />\n                                                  </View>\n                                                </View>\n                                              </View>\n                                            )\n                                          })\n                                        }\n                                      </View>\n                                  }\n                                </View>\n                              )\n                            })\n                            :\n                            <View style={globalStyles.p_10}>\n                              <Text style={styles.scannedItemNameText}>\n                                No more item remaining to scan\n                              </Text>\n                            </View>\n                        }\n                        {\n                          props.order.order.unscanned_items && props.order.order.unscanned_items.length >= perPage &&\n                          <View>\n                            {\n                              props.order.order.unscanned_items && props.order.order.unscanned_items.length >= perPage\n                                ?\n                                <TouchableOpacity onPress={() => {\n                                  let perPage = this.state.unscannedItemPerPage + 1\n                                  this.setState({ unscannedItemPerPage: perPage })\n                                }}>\n                                  <Text style={{\n                                    color: \"#fff\",\n                                    fontWeight: \"bold\",\n                                    fontSize: 14,\n                                    zIndex: 99999,\n                                    textShadowColor: '#000',\n                                    textShadowOffset: { width: 1, height: 1 },\n                                    display: \"flex\",\n                                    justifyContent: \"center\",\n                                    padding: 8,\n                                    background: \"#41970f\",\n                                    marginRight: \"auto\",\n                                    marginLeft: \"auto\",\n                                    borderRadius: 5,\n                                    marginTop: 2\n                                  }}>\n                                    Show More\n                                  </Text>\n                                </TouchableOpacity>\n                                :\n                                <TouchableOpacity onPress={() => {\n                                  let perPage = 1\n                                  this.setState({ unscannedItemPerPage: perPage })\n                                }}>\n                                  <Text style={{\n                                    color: \"#fff\",\n                                    fontWeight: \"bold\",\n                                    fontSize: 14,\n                                    zIndex: 99999,\n                                    textShadowColor: '#000',\n                                    textShadowOffset: { width: 1, height: 1 },\n                                    display: \"flex\",\n                                    justifyContent: \"center\",\n                                    padding: 8,\n                                    background: \"#f54400\",\n                                    marginRight: \"auto\",\n                                    marginLeft: \"auto\",\n                                    borderRadius: 5,\n                                    marginTop: 2\n                                  }}>\n                                    Reset\n                                  </Text>\n                                </TouchableOpacity>\n                            }\n                          </View>\n                        }\n                      </ImageBackground>\n                      :\n                      <View>\n                        <View style={{ height: windowHeight - 70, width: \"100%\" }}>\n                          <View style={styles.actionButtonsView}>\n                            <LinearGradient\n                              start={{ x: 0, y: 1 }} end={{ x: 0, y: 0 }}\n                              colors={['#000000', '#00000006', '#00000006', '#000000']}\n                              style={{ position: \"relative\", backgroundColor: \"#292929\" }}>\n                              <TouchableOpacity onLongPress={() => this.orderDetail(Order)}\n                                delayLongPress={1000}\n                                style={{ marginRight: 45, marginLeft: 45 }}>\n                                <Text numberOfLines={1} ellipsizeMode='tail'\n                                  style={[styles.nowScanningTextView, { textAlign: \"center\", margin: 8, fontFamily: fontFamily.font700, color: \"#8e8b8b\" }]}>\n                                  Order {Order.increment_id}\n                                </Text>\n                              </TouchableOpacity>\n                              <TouchableOpacity onPress={() => {\n                                let actionBarShow = !this.state.actionBarShow\n                                this.setState({ actionBarShow })\n                              }\n                              }\n                                style={{ position: \"absolute\", top: 10, right: 10 }}>\n                                {this.state.actionBarShow ? <Image style={{ width: 20, height: 20 }}\n                                  source={upArrow ? upArrow : \"\"}\n                                /> : <Image style={{ width: 20, height: 20 }}\n                                  source={downArrow ? downArrow : \"\"}\n                                />}\n                              </TouchableOpacity>\n                            </LinearGradient>\n                            {\n                              this.state.actionBarShow &&\n                              <LinearGradient\n                                style={[styles.actionButtonInnerView, {\n                                  backgroundColor: \"#707070\",\n                                  borderRadius: 5\n                                }]}\n                                start={{ x: 0, y: 1 }} end={{ x: 0, y: 0 }}\n                                colors={['#142130', '#304454']}>\n                                <TouchableOpacity style={styles.restartButtonDesign}\n                                  onPress={this.props.restartButton}\n                                >\n                                  <View style={{ display: \"flex\", flexDirection: \"row\", alignItems: \"center\" }}>\n                                    <Image style={[styles.actionImages, { width: 25, height: 25 }]}\n                                      source={restart ? restart : \"\"} />\n                                    {\n                                      windowWidth > 375 &&\n                                      <React.Fragment>\n                                        <View style={{ flexDirection: \"column\", alignItems: \"center\" }}>\n                                          <Text style={[styles.actionButtonText, { fontFamily: fontFamily.font500 }]}>Restart</Text>\n                                          <Text style={[styles.actionButtonText, { fontFamily: fontFamily.font500 }]}>Order</Text>\n                                        </View>\n                                      </React.Fragment>\n                                    }\n                                  </View>\n                                </TouchableOpacity>\n                                <TouchableOpacity style={styles.noteSaveButtonDesign}\n                                  onPress={this.props.saveChanges}\n                                >\n                                  <View style={{ display: \"flex\", flexDirection: \"row\", alignItems: \"center\" }}>\n\n                                    <Image style={[styles.actionImages, { width: 25, height: 25 }]}\n                                      source={deleteImage ? deleteImage : \"\"} />\n                                    {\n                                      windowWidth > 375 &&\n                                      <React.Fragment>\n                                        <View style={{ flexDirection: \"column\", alignItems: \"center\" }}>\n                                          <Text style={[styles.actionButtonText, { fontFamily: fontFamily.font500 }]}>Remove</Text>\n                                          <Text style={[styles.actionButtonText, { fontFamily: fontFamily.font500 }]}>Item</Text>\n                                        </View>\n                                      </React.Fragment>\n                                    }\n                                  </View>\n                                </TouchableOpacity>\n                                <TouchableOpacity style={styles.noteSaveButtonDesign}\n                                  onPress={this.props.addNote}\n                                >\n                                  <View style={{ display: \"flex\", flexDirection: \"row\", alignItems: \"center\" }}>\n                                    <Image style={[styles.actionImages, { width: 25, height: 25 }]}\n                                      source={note ? note : \"\"} />\n                                    {\n                                      windowWidth > 375 &&\n                                      <React.Fragment>\n                                        <View style={{ flexDirection: \"column\", alignItems: \"center\", marginLeft: 2 }}>\n                                          <Text style={[styles.actionButtonText, { fontFamily: fontFamily.font500 }]}>Add</Text>\n                                          <Text style={[styles.actionButtonText, { fontFamily: fontFamily.font500 }]}>Note</Text>\n                                        </View>\n                                      </React.Fragment>\n                                    }\n                                  </View>\n                                </TouchableOpacity>\n                              </LinearGradient>\n                            }\n                          </View>\n                          <LinearGradient style={{\n                            padding: 10,\n                            backgroundColor: \"#707070\",\n                            borderRadius: 5,\n                            marginTop: 1\n                          }}\n                            start={{ x: 0, y: 1 }} end={{ x: 0, y: 0 }}\n                            colors={['#142130', '#304454']}>\n                            <View style={{ flexDirection: \"row\" }}>\n                              <View style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>\n                                <LinearGradient\n                                  start={{ x: 0, y: 1 }} end={{ x: 0, y: 0 }}\n                                  colors={['#6384ff', '#1329ff', '#35096c']}\n                                  style={{\n                                    backgroundColor: \"#ebebeb\",\n                                    height: 10,\n                                    width: 10,\n                                    borderRadius: 5,\n                                    marginRight: 10,\n                                    shadowColor: \"#fff\",\n                                    shadowOffset: {\n                                      width: 0,\n                                      height: 0\n                                    },\n                                    shadowOpacity: 1,\n                                    shadowRadius: 10,\n                                    elevation: 24\n                                  }} />\n                              </View>\n                              {\n                                Order &&\n                                  Order.unscanned_items &&\n                                  Order.unscanned_items[0] &&\n                                  Order.unscanned_items[0].product_type === \"individual\"\n                                  ?\n                                  <React.Fragment>\n                                    <TextInput value={this.props.barcodeState}\n                                      autoFocus={false}\n                                      ref={this.props.InputField}\n                                      onSubmitEditing={this.props.scanBarcode}\n                                      onChangeText={this.props.stateUpdate}\n                                      style={{ flex: 15, paddingLeft: 20, padding: 5, backgroundColor: \"#ebebeb\", fontSize: 15, fontFamily: fontFamily.font600, width: \"100%\", textAlign: \"left\", borderRadius: 5 }}\n                                      placeholder={this.state.scanPlaceHolderValue}\n                                      placeholderTextColor={\"#4c4c4b\"}\n                                      onBlur={() => {\n                                        const blurValue = Platform.OS === \"web\" ? \"Click Here Before Scanning\" : \"Tap Here Before Scanning\"\n                                        this.setState({ scanPlaceHolderValue: blurValue })\n                                      }}\n                                      onFocus={() => this.setState({ scanPlaceHolderValue: 'Ready For Product Scan' })}\n                                    />\n                                    <TouchableOpacity onPress={() => this.props.clickScan(Order.unscanned_items[0].child_items[0], \"unscan\")}\n                                      onLongPress={this.props.scanAllItem}\n                                      delayLongPress={1000}\n                                      style={{ flex: 4, marginLeft: 10, backgroundColor: \"#455766\", justifyContent: \"center\", alignItems: \"center\", paddingHorizontal: 7, borderRadius: 5 }}>\n                                      <Text style={{ fontFamily: fontFamily.font800, fontSize: 26, color: \"#fff\", textAlign: \"center\" }}>Pass</Text>\n                                    </TouchableOpacity>\n                                  </React.Fragment>\n                                  :\n                                  <React.Fragment>\n                                    <TextInput value={this.props.barcodeState}\n                                      autoFocus={false}\n                                      ref={this.props.InputField}\n                                      onSubmitEditing={this.props.scanBarcode}\n                                      onChangeText={this.props.stateUpdate}\n                                      style={{ outline: \"none\", flex: 15, paddingLeft: 20, padding: 5, backgroundColor: \"#ebebeb\", fontSize: 15, fontFamily: fontFamily.font700, color: \"black\", width: \"100%\", textAlign: \"left\", borderWidth: 1, borderColor: \"#cbcbca\", borderRadius: 5 }}\n                                      placeholder={this.state.scanPlaceHolderValue}\n                                      placeholderTextColor={\"#4c4c4b\"}\n                                      onBlur={() => {\n                                        const blurValue = Platform.OS === \"web\" ? \"Click Here Before Scanning\" : \"Tap Here Before Scanning\"\n                                        this.setState({ scanPlaceHolderValue: blurValue })\n                                      }}\n                                      onFocus={() => this.setState({ scanPlaceHolderValue: 'Ready For Product Scan' })}\n                                    />\n                                    <TouchableOpacity onPress={() => this.props.clickScan(Order.unscanned_items[0], \"unscan\")}\n                                      onLongPress={this.props.scanAllItem}\n                                      delayLongPress={1000}\n                                      style={{ flex: 4, marginLeft: 10, backgroundColor: \"#455766\", justifyContent: \"center\", alignItems: \"center\", paddingHorizontal: 7, borderRadius: 5 }}>\n                                      <Text style={{ fontFamily: fontFamily.font800, fontSize: 26, color: \"#fff\", textAlign: \"center\" }}>Pass</Text>\n                                    </TouchableOpacity>\n                                  </React.Fragment>\n                              }\n                            </View>\n                          </LinearGradient>\n                          {console.log(props)}\n                          <View style={{ backgroundColor: \"#000\" }}>\n                            <LinearGradient\n                              style={{ flexDirection: \"row\", height: 40, backgroundColor: \"#707070\", borderRadius: 10, marginTop: 1, marginBottom: 1 }}\n                              start={{ x: 0, y: 1 }} end={{ x: 0, y: 0 }}\n                              locations={[0, 1]}\n                              colors={['#000000', '#3a3a3a']}>\n                              <TouchableOpacity onPress={this.props.showScannedList}\n                                style={{ flex: 2, justifyContent: \"center\", alignItems: \"center\" }}>\n                                <View style={{ justifyContent: 'center', alignItems: 'center' }}>\n                                  <Text style={{ fontSize: 16, fontFamily: fontFamily.font500, color: \"#c6c6c6\", alignItems: \"center\" }}>\n                                  {Order.unscanned_items && Order.unscanned_items.length > 0 ? Order.unscanned_items.length : 0} Un-scanned\n                                  </Text>\n                                  {\n                                    this.props.scannedList && <View style={{ width: '90%', height: 2, backgroundColor: '#555454' }} />\n                                  }\n                                </View>\n                              </TouchableOpacity>\n                              <TouchableOpacity onPress={this.props.showUnscannedList}\n                                style={{ flex: 2, justifyContent: \"center\", alignItems: \"center\" }}>\n                                <View style={{ justifyContent: 'center', alignItems: 'center' }}>\n                                  <Text style={{ fontSize: 16, fontFamily: fontFamily.font500, color: \"#c6c6c6\", alignItems: \"center\" }}>{Order.scanned_items && Order.scanned_items.length > 0 ? Order.scanned_items.length : 0} Scanned</Text>\n                                  {\n                                    this.props.unscannedList && <View style={{ width: '90%', height: 2, backgroundColor: '#555454' }} />\n                                  }\n                                </View>\n                              </TouchableOpacity>\n                              <TouchableOpacity onPress={this.props.showLogList}\n                                style={{ flex: 2, justifyContent: \"center\", alignItems: \"center\" }}>\n                                <View style={{ justifyContent: 'center', alignItems: 'center' }}>\n                                  <Text style={{ fontSize: 16, fontFamily: fontFamily.font500, color: \"#c6c6c6\", alignItems: \"center\" }}>Activity Log</Text>\n                                  {\n\n                                    this.props.logList && <View style={{ width: '90%', height: 2, backgroundColor: '#555454' }} />\n                                  }\n                                </View>\n                              </TouchableOpacity>\n                              <TouchableOpacity onPress={this.props.navButton} style={{ marginRight: 10, marginTop: 13 }}>\n                                <Image style={{ width: 20, height: 20 }} source={downArrow} />\n                              </TouchableOpacity>\n                            </LinearGradient>\n                          </View>\n                          <ScrollView>\n                            {\n                              props.scannedList && props.order && props.order.order && props.order.order.unscanned_items && props.order.order.unscanned_items.length > 0\n                                ?\n                                props.scannedList && props.order.order.unscanned_items && props.order.order.unscanned_items.slice(0, perPage).map((item, index) => {\n                                  return (\n                                    <View>\n                                      {\n                                        (item && item.product_type === \"single\") || (item && item.product_type === \"depends\")\n                                          ?\n                                          <View key={index} style={{ flexDirection: \"row\", position: \"relative\", backgroundColor: \"#292929\", textAlign: \"left\", display: \"flex\", marginTop: 5 }}>\n                                            <View style={{ width: '100%', minHeight: 125 }}>\n                                              <LinearGradient\n                                                colors={['#b6c2d2', '#cddceb', '#b6c2d2']}\n                                                start={{ x: 0, y: 1 }} end={{ x: 0, y: 0 }}\n                                                style={{ flex: 16, padding: 4, borderTopLeftRadius: 12, borderTopEndRadius: 12 }}>\n                                                <TouchableOpacity onLongPress={() => this.props.redirectToItemDetail(item)}\n                                                  delayLongPress={1000}>\n                                                  <Text numberOfLines={2}\n                                                    style={item.name && item.name.length <= 32\n                                                      ?\n                                                      { fontSize: 18, fontFamily: fontFamily.font400, width: \"65%\", textAlign: \"left\" }\n                                                      :\n                                                      { fontSize: 16, fontFamily: fontFamily.font400, width: \"65%\", textAlign: \"left\" }}\n                                                  >\n                                                    {item.name}\n                                                  </Text>\n                                                </TouchableOpacity>\n                                              </LinearGradient>\n                                              <View style={{\n                                                padding: 4,\n                                                justifyContent: \"center\",\n                                                backgroundColor: \"#b6cadd\"\n                                              }}>\n                                                <Text numberOfLines={1}\n                                                  ellipsizeMode='tail'\n                                                  style={{ fontSize: 18, fontFamily: fontFamily.font700, color: \"#3f638b\", width: '65%' }}\n                                                >\n                                                  {item.sku}\n                                                </Text>\n                                              </View>\n                                              <View style={{ backgroundColor: \"#c1d4e6\", paddingLeft: 3, paddingRight: 3 }}>\n                                                <View style={{ width: \"75%\", flexDirection: \"row\" }}>\n                                                  {\n                                                    item.location !== null && item.location !== \"\" && item.location !== undefined &&\n                                                    <View style={{ flex: 1, flexDirection: \"row\", alignItems: \"baseline\" }}>\n                                                      <Text style={{ fontSize: 12, fontFamily: fontFamily.font400 }}>L1:</Text>\n                                                      <Text numberOfLines={1}\n                                                        ellipsizeMode='tail'\n                                                        style={{ fontSize: 15, fontFamily: fontFamily.font700 }}\n                                                      >\n                                                        {item.location}\n                                                      </Text>\n                                                    </View>\n                                                  }\n                                                  {\n                                                    item.custom_product_1 !== null && item.custom_product_1 !== \"\" && item.custom_product_1 !== undefined &&\n                                                    <View style={{ flex: 1, flexDirection: \"row\", alignItems: \"baseline\" }}>\n                                                      <Text style={{ fontSize: 12, fontFamily: fontFamily.font400 }}>C1:</Text>\n                                                      <Text numberOfLines={1}\n                                                        ellipsizeMode='tail'\n                                                        style={{ fontSize: 15, fontFamily: fontFamily.font700 }}\n                                                      >\n                                                        {item.custom_product_1}\n                                                      </Text>\n                                                    </View>\n                                                  }\n                                                </View>\n                                              </View>\n                                              <View style={{ backgroundColor: \"#d3def4\", paddingLeft: 3, paddingRight: 3, borderBottomLeftRadius: 10, borderBottomRightRadius: 10 }}>\n                                                <Text style={{ fontSize: 18, maxWidth: \"75%\", fontFamily: fontFamily.font400 }}\n                                                  numberOfLines={1}\n                                                  ellipsizeMode='tail'\n                                                >\n                                                  {\n                                                    item &&\n                                                    item.barcodes.length > 0 &&\n                                                    item.barcodes[0].barcode\n                                                  }\n                                                </Text>\n                                              </View>\n                                            </View>\n\n                                            <View style={{ position: \"absolute\", top: 0, right: 0, height: \"100%\" }}>\n                                              <LinearGradient\n                                                locations={[0, 0.04, 0.08]}\n                                                start={{ x: .9, y: 1 }}\n                                                colors={['#3d4851', '#9EA4A8', '#ffffff']}\n                                                style={{\n                                                  height: 100,\n                                                  width: 100,\n                                                  backgroundColor: \"#000000\",\n                                                  shadowColor: \"#000\",\n                                                  shadowOffset: { width: 0, height: 0 },\n                                                  shadowOpacity: 0.58,\n                                                  shadowRadius: 29,\n                                                  elevation: 3,\n                                                  borderTopLeftRadius: 5,\n                                                  borderBottomLeftRadius: 5,\n                                                  marginTop: 5,\n                                                  justifyContent: \"center\",\n                                                  alignItems: \"center\"\n                                                }}>\n                                                <Text style={{ width: '90%', position: \"absolute\", textAlign: \"center\", fontSize: 18, fontFamily: fontFamily.font600, backgroundColor: \"#fff\", opacity: 0.7, bottom: 0, right: 0, left: 0, marginLeft: \"auto\", marginRight: \"auto\", zIndex: 999 }}>\n                                                  {item.scanned_qty}/{item.qty_remaining + item.scanned_qty}\n                                                </Text>\n                                                <Image source={{ uri: item.images && item.images.length > 0 ? item.images[0].image : placeholder }}\n                                                  style={{ height: \"90%\", width: \"90%\", resizeMode: 'contain', borderRadius: 10 }} />\n                                              </LinearGradient>\n                                            </View>\n                                          </View>\n                                          :\n                                          <View key={index} style={{ margin: 1, borderRadius: 20, borderWidth: 3, borderColor: \"black\", backgroundColor: \"#3f5163\", padding: 5 }}>\n                                            <View style={{ flexDirection: \"row\" }}>\n                                              <View style={{ height: 2, flex: 8, backgroundColor: \"#fff\", borderRadius: 3, position: \"relative\" }}>\n                                                <Text style={{ fontSize: 18, fontFamily: fontFamily.font500, position: \"absolute\", left: \"50%\", top: -10, marginLeft: \"auto\", marginRight: \"auto\", backgroundColor: \"#3f5163\", paddingLeft: 4, paddingRight: 4, color: \"#fff\" }}>\n                                                  KIT\n                                                </Text>\n                                              </View>\n\n                                            </View>\n                                            <View style={{ flexDirection: \"row\", position: \"relative\" }}>\n                                              <View style={{ width: '100%', minHeight: 100 }}>\n                                                <TouchableOpacity onLongPress={() => this.props.redirectToItemDetail(item)}\n                                                  delayLongPress={1000}>\n                                                  <Text numberOfLines={2}\n                                                    ellipsizeMode='tail'\n                                                    style={item.name && item.name.length <= 32\n                                                      ?\n                                                      { fontSize: 18, fontFamily: fontFamily.font400, width: \"65%\", textAlign: \"left\", color: \"#fff\", paddingTop: 4 }\n                                                      :\n                                                      { fontSize: 16, fontFamily: fontFamily.font400, width: \"65%\", textAlign: \"left\", color: \"#fff\", paddingTop: 4 }\n                                                    }\n                                                  >\n                                                    {item.name}\n                                                  </Text>\n                                                </TouchableOpacity>\n                                                <TouchableOpacity onPress={() => this.props.clickScan(Order.unscanned_items[0].child_items[0])}>\n                                                  <Text numberOfLines={1}\n                                                    ellipsizeMode='tail'\n                                                    style={{ fontSize: 18, fontFamily: fontFamily.font700, color: \"#fff\", width: '65%' }}>{item.sku}</Text>\n                                                </TouchableOpacity>\n                                              </View>\n                                              {\n                                                item.images.length > 0 && item.images[0].image &&\n                                                <View style={{ position: \"absolute\", top: 0, right: 0, height: \"100%\" }}>\n                                                  <LinearGradient\n                                                    locations={[0, 0.04, 0.08]}\n                                                    start={{ x: .9, y: 1 }}\n                                                    colors={['#3d4851', '#9EA4A8', '#ffffff']}\n                                                    style={{\n                                                      height: 100,\n                                                      width: 100,\n                                                      backgroundColor: \"#000000\",\n                                                      shadowColor: \"#000\",\n                                                      shadowOffset: { width: 0, height: 0 },\n                                                      shadowOpacity: 0.58,\n                                                      shadowRadius: 29,\n                                                      elevation: 3,\n                                                      borderTopLeftRadius: 5,\n                                                      borderBottomLeftRadius: 5,\n                                                      marginTop: 5,\n                                                      justifyContent: \"center\",\n                                                      alignItems: \"center\"\n                                                    }}>\n                                                    <Text style={{ width: '90%', position: \"absolute\", textAlign: \"center\", fontSize: 18, fontFamily: fontFamily.font600, backgroundColor: \"#fff\", opacity: 0.7, bottom: 0, right: 0, left: 0, marginLeft: \"auto\", marginRight: \"auto\", zIndex: 999 }}>\n                                                      {item.scanned_qty}/{item.qty_remaining + item.scanned_qty}\n                                                    </Text>\n                                                    <Image source={{ uri: item.images && item.images.length > 0 ? item.images[0].image : placeholder }}\n                                                      style={{ height: \"90%\", width: \"90%\", resizeMode: 'contain', borderRadius: 10 }} />\n                                                  </LinearGradient>\n                                                </View>\n                                              }\n                                            </View>\n                                            {\n                                              item && item.child_items && item.child_items.length > 0 && item.child_items.map((childItem, index) => {\n                                                return (\n                                                  <View key={index} style={{ flexDirection: \"row\", position: \"relative\", backgroundColor: \"#3f5163\", textAlign: \"left\", display: \"flex\", marginTop: 5 }}>\n                                                    <View style={{ width: '100%', minHeight: 125 }}>\n                                                      <LinearGradient\n                                                        colors={['#b6c2d2', '#cddceb', '#b6c2d2']}\n                                                        start={{ x: 0, y: 1 }} end={{ x: 0, y: 0 }}\n                                                        style={{ flex: 16, padding: 4, borderTopLeftRadius: 12, borderTopEndRadius: 12 }}>\n                                                        <TouchableOpacity onLongPress={() => this.props.redirectToItemDetail(childItem)}\n                                                          delayLongPress={1000}>\n                                                          <Text numberOfLines={2}\n                                                            ellipsizeMode='tail'\n                                                            style={childItem.name && childItem.name.length <= 32\n                                                              ?\n                                                              { fontSize: 18, fontFamily: fontFamily.font400, width: \"65%\", textAlign: \"left\" }\n                                                              :\n                                                              { fontSize: 16, fontFamily: fontFamily.font400, width: \"65%\", textAlign: \"left\" }}\n                                                          >\n                                                            {childItem.name}\n                                                          </Text>\n                                                        </TouchableOpacity>\n                                                      </LinearGradient>\n                                                      <View style={{\n                                                        padding: 4,\n                                                        justifyContent: \"center\",\n                                                        backgroundColor: \"#b6cadd\"\n                                                      }}>\n                                                        <Text numberOfLines={1}\n                                                          ellipsizeMode='tail'\n                                                          style={{ fontSize: 18, fontFamily: fontFamily.font700, color: \"#3f638b\", width: '65%' }}\n                                                        >\n                                                          {childItem.sku}\n                                                        </Text>\n                                                      </View>\n                                                      <View style={{ backgroundColor: \"#c1d4e6\", paddingLeft: 3, paddingRight: 3 }}>\n                                                        <View style={{ flexDirection: \"row\", width: \"75%\" }}>\n                                                          {\n                                                            childItem.location !== null && childItem.location !== \"\" &&\n                                                            <View style={{ flex: 1, flexDirection: \"row\", alignItems: \"baseline\" }}>\n                                                              <Text style={{ fontSize: 12, fontFamily: fontFamily.font400 }}>L1:</Text>\n                                                              <Text numberOfLines={1}\n                                                                ellipsizeMode='tail'\n                                                                style={{ fontSize: 15, fontFamily: fontFamily.font700 }}\n                                                              >\n                                                                {childItem.location}\n                                                              </Text>\n                                                            </View>\n                                                          }\n                                                          {\n                                                            childItem.custom_product_1 !== null && childItem.custom_product_1 !== \"\" &&\n                                                            <View style={{ flex: 1, flexDirection: \"row\", alignItems: \"baseline\" }}>\n                                                              <Text style={{ fontSize: 12, fontFamily: fontFamily.font400 }}>C1:</Text>\n                                                              <Text numberOfLines={1}\n                                                                ellipsizeMode='tail'\n                                                                style={{ fontSize: 15, fontFamily: fontFamily.font700 }}\n                                                              >\n                                                                {childItem.custom_product_1}\n                                                              </Text>\n                                                            </View>\n                                                          }\n                                                        </View>\n                                                      </View>\n                                                      <View style={{ backgroundColor: \"#d3def4\", paddingLeft: 3, paddingRight: 3, borderBottomLeftRadius: 10, borderBottomRightRadius: 10 }}>\n                                                        <Text numberOfLines={1}\n                                                          ellipsizeMode='tail'\n                                                          style={{ fontSize: 18, width: \"75%\", fontFamily: fontFamily.font400 }}>\n                                                          {\n                                                            childItem &&\n                                                            childItem.barcodes.length > 0 &&\n                                                            childItem.barcodes[0].barcode\n                                                          }\n                                                        </Text>\n                                                      </View>\n                                                    </View>\n                                                    <View style={{ position: \"absolute\", top: 0, right: 0, height: \"100%\" }}>\n                                                      <LinearGradient\n                                                        locations={[0, 0.04, 0.08]}\n                                                        start={{ x: .9, y: 1 }}\n                                                        colors={['#3d4851', '#9EA4A8', '#ffffff']}\n                                                        style={{\n                                                          height: 100,\n                                                          width: 100,\n                                                          backgroundColor: \"#000000\",\n                                                          shadowColor: \"#000\",\n                                                          shadowOffset: { width: 0, height: 0 },\n                                                          shadowOpacity: 0.58,\n                                                          shadowRadius: 29,\n                                                          elevation: 3,\n                                                          borderTopLeftRadius: 5,\n                                                          borderBottomLeftRadius: 5,\n                                                          marginTop: 5,\n                                                          justifyContent: \"center\",\n                                                          alignItems: \"center\"\n                                                        }}>\n                                                        <Text style={{ width: '90%', position: \"absolute\", textAlign: \"center\", fontSize: 18, fontFamily: fontFamily.font600, backgroundColor: \"#fff\", opacity: 0.7, bottom: 0, right: 0, left: 0, marginLeft: \"auto\", marginRight: \"auto\", zIndex: 999 }}>\n                                                          {childItem.scanned_qty}/{childItem.qty_remaining + childItem.scanned_qty}\n                                                        </Text>\n                                                        <Image source={{ uri: childItem.images && childItem.images.length > 0 ? childItem.images[0].image : placeholder }}\n                                                          style={{ height: \"90%\", width: \"90%\", resizeMode: 'contain', borderRadius: 10 }} />\n                                                      </LinearGradient>\n                                                    </View>\n                                                  </View>\n                                                )\n                                              })\n                                            }\n                                          </View>\n                                      }\n                                    </View>\n                                  )\n                                })\n                                :\n                                props.scannedList && <View style={globalStyles.p_10}>\n                                  <Text style={styles.scannedItemNameText}>\n                                    No more item remaining to scan\n                                  </Text>\n                                </View>\n                            }\n                            {\n                              props.unscannedList &&\n                              <React.Fragment>\n                                {\n                                  Order.scanned_items && Order.scanned_items.length > 0\n                                    ?\n                                    Order.scanned_items.map((item, index) => {\n                                      return (\n                                        <View>\n                                          {\n                                            <View key={index} style={{ flexDirection: \"row\", position: \"relative\", backgroundColor: \"#292929\", textAlign: \"left\", display: \"flex\", marginTop: 5 }}>\n                                              <View style={{ width: '100%', minHeight: 125 }}>\n                                                <LinearGradient\n                                                  colors={['#b6c2d2', '#cddceb', '#b6c2d2']}\n                                                  start={{ x: 0, y: 1 }} end={{ x: 0, y: 0 }}\n                                                  style={{ flex: 16, padding: 4, borderTopLeftRadius: 12, borderTopEndRadius: 12 }}>\n                                                  <TouchableOpacity onLongPress={() => this.props.redirectToItemDetail(item)}\n                                                    delayLongPress={1000}>\n                                                    <Text numberOfLines={2}\n                                                      style={item.name && item.name.length <= 32\n                                                        ?\n                                                        { fontSize: 18, fontFamily: fontFamily.font400, width: \"65%\", textAlign: \"left\" }\n                                                        :\n                                                        { fontSize: 16, fontFamily: fontFamily.font400, width: \"65%\", textAlign: \"left\" }}\n                                                    >\n                                                      {item.name}\n                                                    </Text>\n                                                  </TouchableOpacity>\n                                                </LinearGradient>\n                                                <View style={{\n                                                  padding: 4,\n                                                  justifyContent: \"center\",\n                                                  backgroundColor: \"#b6cadd\"\n                                                }}>\n                                                  <Text numberOfLines={1}\n                                                    ellipsizeMode='tail'\n                                                    style={{ fontSize: 18, fontFamily: fontFamily.font700, color: \"#3f638b\", width: '65%' }}\n                                                  >\n                                                    {item.sku}\n                                                  </Text>\n                                                </View>\n                                                <View style={{ backgroundColor: \"#c1d4e6\", paddingLeft: 3, paddingRight: 3 }}>\n                                                  <View style={{ width: \"75%\", flexDirection: \"row\" }}>\n                                                    {\n                                                      item && item.location !== null && item.location !== \"\" &&\n                                                      <View style={{ flex: 1, flexDirection: \"row\", alignItems: \"baseline\" }}>\n                                                        <Text style={{ fontSize: 12, fontFamily: fontFamily.font400 }}>L1:</Text>\n                                                        <Text numberOfLines={1}\n                                                          ellipsizeMode='tail'\n                                                          style={{ fontSize: 15, fontFamily: fontFamily.font700 }}\n                                                        >\n                                                          {item.location}\n                                                        </Text>\n                                                      </View>\n                                                    }\n                                                    {\n                                                      item && item.custom_product_1 !== null && item.custom_product_1 !== \"\" &&\n                                                      <View style={{ flex: 1, flexDirection: \"row\", alignItems: \"baseline\" }}>\n                                                        <Text style={{ fontSize: 12, fontFamily: fontFamily.font400 }}>C1:</Text>\n                                                        <Text numberOfLines={1}\n                                                          ellipsizeMode='tail'\n                                                          style={{ fontSize: 15, fontFamily: fontFamily.font700 }}\n                                                        >\n                                                          {item.custom_product_1}\n                                                        </Text>\n                                                      </View>\n                                                    }\n                                                  </View>\n                                                </View>\n                                                <View style={{ backgroundColor: \"#d3def4\", paddingLeft: 3, paddingRight: 3, borderBottomLeftRadius: 10, borderBottomRightRadius: 10 }}>\n                                                  <Text style={{ fontSize: 20, width: \"75%\", fontFamily: fontFamily.font400 }}\n                                                    numberOfLines={1}\n                                                    ellipsizeMode='tail'\n                                                  >\n                                                    {\n                                                      item &&\n                                                      item.barcodes.length > 0 &&\n                                                      item.barcodes[0].barcode\n                                                    }\n                                                  </Text>\n                                                </View>\n                                              </View>\n\n                                              <View style={{ position: \"absolute\", top: 0, right: 0, height: \"100%\" }}>\n                                                <LinearGradient\n                                                  locations={[0, 0.04, 0.08]}\n                                                  start={{ x: .9, y: 1 }}\n                                                  colors={['#3d4851', '#9EA4A8', '#ffffff']}\n                                                  style={{\n                                                    height: 100,\n                                                    width: 100,\n                                                    backgroundColor: \"#000000\",\n                                                    shadowColor: \"#000\",\n                                                    shadowOffset: { width: 0, height: 0 },\n                                                    shadowOpacity: 0.58,\n                                                    shadowRadius: 29,\n                                                    elevation: 3,\n                                                    borderTopLeftRadius: 5,\n                                                    borderBottomLeftRadius: 5,\n                                                    marginTop: 5,\n                                                    justifyContent: \"center\",\n                                                    alignItems: \"center\"\n                                                  }}>\n                                                  <Text style={{ width: '90%', position: \"absolute\", textAlign: \"center\", fontSize: 18, fontFamily: fontFamily.font600, backgroundColor: \"#fff\", opacity: 0.7, bottom: 0, right: 0, left: 0, marginLeft: \"auto\", marginRight: \"auto\", zIndex: 999 }}>\n                                                    {item.scanned_qty}/{item.qty_remaining + item.scanned_qty}\n                                                  </Text>\n                                                  <Image source={{ uri: item.images && item.images.length > 0 ? item.images[0].image : placeholder }}\n                                                    style={{ height: \"90%\", width: \"90%\", resizeMode: 'contain', borderRadius: 10 }} />\n                                                </LinearGradient>\n                                              </View>\n                                            </View>\n                                          }\n                                        </View>\n                                      )\n                                    })\n                                    :\n                                    <View style={globalStyles.p_10}>\n                                      <Text style={styles.scannedItemNameText}>\n                                        No Record\n                                      </Text>\n                                    </View>\n                                }\n                              </React.Fragment>\n                            }\n                            {\n                              this.props.logList &&\n                              <React.Fragment>\n                                {\n                                  props.localLogs && props.localLogs.length > 0\n                                    ?\n                                    props.localLogs && props.localLogs.slice(0).reverse().map((log, index) => {\n                                      return (\n                                        <View key={index} style={[globalStyles.flexDirectionRow, { paddingLeft: 10, paddingBottom: 0, paddingTop: 5, paddingRight: 10, textAlign: \"left\", borderBottomWidth: 1, borderBottomColor: \"#000\" }]}>\n                                          <View style={styles.actionBox}>\n                                            <Text style={[styles.logDate, { color: \"#8a8989\", fontFamily: fontFamily.font500 }]}>\n                                              {moment(log.time).format('MMMM Do YYYY, h:mm:ss a')}\n                                            </Text>\n                                            {\n                                              log.event === \"regular\" &&\n                                              <View>\n                                                {\n                                                  log.Log_count !== \"\"\n                                                    ?\n                                                    <View>\n                                                      <Text style={[styles.logAction, { color: \"#8a8989\", fontFamily: fontFamily.font500 }]}>\n                                                        {`Product with barcode: ${log.input} and sku: ${log.SKU} scanned - by: ${log.name}`}\n                                                      </Text>\n                                                      <Text style={[styles.logDate, { color: \"#8a8989\", fontFamily: fontFamily.font500 }]}>\n                                                        {`Multibarcode count of ${log.Log_count} scanned for product ${log.SKU} `}\n                                                      </Text>\n                                                    </View>\n                                                    :\n                                                    log.actionBarcode\n                                                      ?\n                                                      <Text style={[styles.logAction, { color: \"#8a8989\", fontFamily: fontFamily.font500 }]}>\n                                                        {`Product with barcode: ${log.input} and sku: ${log.SKU} scanned - by: ${log.name}`}\n                                                      </Text>\n                                                      :\n                                                      <Text style={[styles.logAction, { color: \"#8a8989\", fontFamily: fontFamily.font500 }]}>\n                                                        {`INVALID SCAN - Product with barcode: ${log.input} and sku: ${log.SKU} scanned - by: ${log.name}`}\n                                                      </Text>\n                                                }\n                                              </View>\n                                            }\n                                            {\n                                              log.event === \"click_scan\" &&\n                                              <Text style={[styles.logAction, { color: \"#8a8989\", fontFamily: fontFamily.font500 }]}>\n                                                {` Item with SKU: ${log.SKU} has been click scanned - by: ${log.name}`}\n                                              </Text>\n                                            }\n                                            {\n                                              log.event === \"bulk_scan\" &&\n                                              <Text style={[styles.logAction, { color: \"#8a8989\", fontFamily: fontFamily.font500 }]}>\n                                                {`Item ${log.SKU} scanned through Bulk Scan - by: ${log.name}`}\n                                              </Text>\n                                            }\n                                            {\n                                              log.event === \"type_scan\" &&\n                                              <View>\n                                                <Text style={[styles.logAction, { color: \"#8a8989\", fontFamily: fontFamily.font500 }]}>\n                                                  {`Item with SKU: ${log.SKU} has been click scanned for a Type-In count - by: ${log.name}`}\n                                                </Text>\n                                                <Text style={[styles.logAction, { color: \"#8a8989\", fontFamily: fontFamily.font500 }]}>\n                                                  {`Type-In count of ${log.count} entered for product ${log.SKU}`}\n                                                </Text>\n                                              </View>\n                                            }\n                                            {\n                                              log.event === \"serial_scan\" &&\n                                              <Text style={[styles.logAction, { color: \"#8a8989\", fontFamily: fontFamily.font500 }]}>\n                                                {`Product: ${log.SKU} Serial scanned: \"check\" - by: ${log.name}`}\n                                              </Text>\n                                            }\n                                          </View>\n                                        </View>\n                                      )\n                                    })\n                                    :\n                                    <View style={globalStyles.p_10}>\n                                      <Text style={styles.scannedItemNameText}>\n                                        No Record\n                                      </Text>\n                                    </View>\n                                }\n                              </React.Fragment>\n                            }\n                            {/* {\n                              props.order.order.unscanned_items && props.order.order.unscanned_items.length >= perPage\n                                ?\n                                <TouchableOpacity onPress={() => {\n                                  let perPage = this.state.unscannedItemPerPage + 1\n                                  this.setState({ unscannedItemPerPage: perPage })\n                                }}>\n                                  <Text style={{\n                                    color: \"#fff\",\n                                    fontWeight: \"bold\",\n                                    fontSize: 20,\n                                    zIndex: 99999,\n                                    textShadowColor: '#000',\n                                    textShadowOffset: { width: 1, height: 1 },\n                                    display: \"flex\",\n                                    justifyContent: \"center\",\n                                    padding: 8,\n                                    background: \"#41970f\",\n                                    marginRight: \"auto\",\n                                    marginLeft: \"auto\",\n                                    borderRadius: 5,\n                                    marginTop: 2\n                                  }}>\n                                    Show More\n                                  </Text>\n                                </TouchableOpacity>\n                                :\n                                <TouchableOpacity onPress={() => {\n                                  let perPage = 1\n                                  this.setState({ unscannedItemPerPage: perPage })\n                                }}>\n                                  <Text style={{\n                                    color: \"#fff\",\n                                    fontWeight: \"bold\",\n                                    fontSize: 14,\n                                    zIndex: 99999,\n                                    textShadowColor: '#000',\n                                    textShadowOffset: { width: 1, height: 1 },\n                                    display: \"flex\",\n                                    justifyContent: \"center\",\n                                    padding: 8,\n                                    background: \"#f54400\",\n                                    marginRight: \"auto\",\n                                    marginLeft: \"auto\",\n                                    borderRadius: 5,\n                                    marginTop: 2\n                                  }}>\n                                    Reset\n                                  </Text>\n                                </TouchableOpacity>\n                            } */}\n                          </ScrollView>\n                        </View>\n                      </View>\n                  }\n                </View>\n                :\n                <View>\n                  <View style={{ height: windowHeight - 90, width: \"100%\" }}>\n                    <View style={styles.actionButtonsView}>\n                      <View style={{ position: \"relative\" }}>\n                        <TouchableOpacity onPress={() => this.orderDetail(Order)}\n                          style={{ marginRight: 45, marginLeft: 45 }}>\n                          <Text numberOfLines={1} ellipsizeMode='tail' style={[styles.nowScanningTextView, { textAlign: \"center\", margin: 8 }]}>\n                            {Order.increment_id}\n                          </Text>\n                        </TouchableOpacity>\n                        <TouchableOpacity onPress={() => {\n                          let actionBarShow = !this.state.actionBarShow\n                          this.setState({ actionBarShow })\n                        }\n                        }\n                          style={{ position: \"absolute\", right: 10 }}>\n                          <Image style={[styles.nowScanningTextView, { textAlign: \"center\", marginBottom: 8, marginTop: 8 }]} source={toggle ? toggle : \"\"} />\n                        </TouchableOpacity>\n                      </View>\n                      {\n                        this.state.actionBarShow &&\n                        <View style={styles.actionButtonInnerView}>\n                          <TouchableOpacity style={styles.restartButtonDesign}\n                            onPress={this.props.restartButton}\n                          >\n                            <View style={{ display: \"flex\", flexDirection: \"row\", alignItems: \"center\" }}>\n                              <Image style={styles.actionImages}\n                                source={restart ? restart : \"\"} />\n                              {\n                                windowWidth > 375 &&\n                                <React.Fragment>\n                                  <View style={{ flexDirection: \"column\", alignItems: \"center\" }}>\n                                    <Text style={styles.actionButtonText}>Restart</Text>\n                                    <Text style={styles.actionButtonText}>Order</Text>\n                                  </View>\n                                </React.Fragment>\n                              }\n                            </View>\n                          </TouchableOpacity>\n                          <TouchableOpacity style={styles.noteSaveButtonDesign}\n                            onPress={this.props.saveChanges}\n                          >\n                            <View style={{ display: \"flex\", flexDirection: \"row\", alignItems: \"center\" }}>\n\n                              <Image style={styles.actionImages}\n                                source={deleteImage ? deleteImage : \"\"} />\n                              {\n                                windowWidth > 375 &&\n                                <React.Fragment>\n                                  <View style={{ flexDirection: \"column\", alignItems: \"center\" }}>\n                                    <Text style={styles.actionButtonText}>Remove</Text>\n                                    <Text style={styles.actionButtonText}>Item</Text>\n                                  </View>\n                                </React.Fragment>\n                              }\n                            </View>\n                          </TouchableOpacity>\n                          <TouchableOpacity style={styles.noteSaveButtonDesign}\n                            onPress={this.props.addNote}\n                          >\n                            <View style={{ display: \"flex\", flexDirection: \"row\", alignItems: \"center\" }}>\n                              <Image style={styles.actionImages}\n                                source={note ? note : \"\"} />\n                              {\n                                windowWidth > 375 &&\n                                <React.Fragment>\n                                  <View style={{ flexDirection: \"column\", alignItems: \"center\", marginLeft: 2 }}>\n                                    <Text style={styles.actionButtonText}>Add</Text>\n                                    <Text style={styles.actionButtonText}>Note</Text>\n                                  </View>\n                                </React.Fragment>\n                              }\n                            </View>\n                          </TouchableOpacity>\n                        </View>\n                      }\n                    </View>\n                    <View style={{ backgroundColor: \"#2c2c2c\", padding: 10 }}>\n                      <View style={{ flexDirection: \"row\" }}>\n                        <View style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>\n                          <View style={{ height: 10, width: 10, backgroundColor: \"#5f80ff\", borderRadius: 30, marginRight: 10, shadowOffset: { width: 0, height: 0, }, shadowColor: '#fff', shadowOpacity: 1.0, }}>\n                          </View>\n                        </View>\n                        {\n                          Order &&\n                            Order.unscanned_items &&\n                            Order.unscanned_items[0] &&\n                            Order.unscanned_items[0].product_type === \"individual\"\n                            ?\n                            <React.Fragment>\n                              <TextInput value={this.props.barcodeState}\n                                autoFocus={false}\n                                ref={this.props.InputField}\n                                onSubmitEditing={this.props.scanBarcode}\n                                onChangeText={this.props.stateUpdate}\n                                style={{ outline: \"none\", flex: 15, paddingLeft: 20, padding: 5, backgroundColor: \"#cbcbca\", fontSize: 15, fontFamily: fontFamily.font700, color: \"black\", width: \"100%\", textAlign: \"left\", borderWidth: 1, borderColor: \"#cbcbca\", borderRadius: 5 }}\n                                placeholder=\"Ready For Product Scan\"\n                                placeholderTextColor={\"#4c4c4b\"}\n                              />\n                              <TouchableOpacity onPress={() => this.props.clickScan(Order.unscanned_items[0].child_items[0], \"unscan\")}\n                                onLongPress={this.props.scanAllItem}\n                                delayLongPress={1000}\n                                style={{ flex: 4, marginLeft: 5, backgroundColor: \"#41970f\", textTransform: \"uppercase\", justifyContent: \"center\", alignItems: \"center\", padding: 5, borderRadius: 5 }}>\n                                <Text style={{ fontWeight: \"bold\", fontSize: 20, color: \"#fff\", textShadowColor: '#000', textShadowOffset: { width: 1, height: 1 }, textAlign: \"center\", fontSize: 20 }}>Pass</Text>\n                              </TouchableOpacity>\n                            </React.Fragment>\n                            :\n                            <React.Fragment>\n                              <TextInput value={this.props.barcodeState}\n                                autoFocus={false}\n                                ref={this.props.InputField}\n                                onSubmitEditing={this.props.scanBarcode}\n                                onChangeText={this.props.stateUpdate}\n                                style={{ flex: 15, paddingLeft: 20, padding: 5, backgroundColor: \"#cbcbca\", fontSize: 15, fontWeight: \"bold\", color: \"black\", width: \"100%\", textAlign: \"left\", borderWidth: 1, borderColor: \"#cbcbca\", borderRadius: 5 }}\n                                placeholder=\"Ready For Product Scan\"\n                                placeholderTextColor={\"#4c4c4b\"}\n                              />\n                              <TouchableOpacity onPress={() => this.props.clickScan(Order.unscanned_items[0], \"unscan\")}\n                                onLongPress={this.props.scanAllItem}\n                                delayLongPress={1000}\n                                style={{ flex: 4, marginLeft: 5, backgroundColor: \"#41970f\", textTransform: \"uppercase\", justifyContent: \"center\", alignItems: \"center\", padding: 5, borderRadius: 5 }}>\n                                <Text style={{ fontWeight: \"bold\", fontSize: 20, color: \"#fff\", textShadowColor: '#000', textShadowOffset: { width: 1, height: 1 }, textAlign: \"center\", fontSize: 20 }}>Pass</Text>\n                              </TouchableOpacity>\n                            </React.Fragment>\n                        }\n                      </View>\n                    </View>\n                    <ScrollView>\n                      {\n                        props.order && props.order.order && props.order.order.unscanned_items && props.order.order.unscanned_items.length > 0\n                          ?\n                          props.order.order.unscanned_items && props.order.order.unscanned_items.map((item, index) => {\n                            return (\n                              <View>\n                                {\n                                  (item && item.product_type === \"single\") || (item && item.product_type === \"depends\")\n                                    ?\n                                    <View key={index} style={{ flexDirection: \"row\", margin: 0, borderRadius: 30, borderWidth: 4, backgroundColor: \"#336598\", borderColor: \"black\", padding: 10 }}>\n                                      <View style={{ flex: 20 }}>\n                                        <TouchableOpacity onLongPress={() => this.props.redirectToItemDetail(item)}\n                                          delayLongPress={1000}\n                                          style={{ backgroundColor: \"#fff\", padding: 5, borderTopLeftRadius: 20, borderTopRightRadius: 20 }}>\n                                          <Text numberOfLines={2}\n                                            style={item.name && item.name.length <= 32\n                                              ?\n                                              { fontSize: 20, maxWidth: \"75%\" }\n                                              :\n                                              { fontSize: 16, maxWidth: \"75%\" }}\n                                          >\n                                            {item.name}\n                                          </Text>\n                                        </TouchableOpacity>\n                                        <Text numberOfLines={1}\n                                          ellipsizeMode='tail'\n                                          style={{ color: \"#fff\", fontSize: 20, fontWeight: \"600\", maxWidth: \"70%\" }}\n                                        >\n                                          {item.sku}\n                                        </Text>\n                                        <View style={{ backgroundColor: \"#95b0e5\", paddingLeft: 3, paddingRight: 3 }}>\n                                          <View style={{ maxWidth: \"70%\", flexDirection: \"row\" }}>\n                                            {\n                                              item.location !== null && item.location !== \"\" && item.location !== undefined &&\n                                              <View style={{ flex: 1, flexDirection: \"row\", alignItems: \"baseline\", height: 25 }}>\n                                                <Text>L1:</Text>\n                                                <Text numberOfLines={1}\n                                                  ellipsizeMode='tail'\n                                                  style={{ fontSize: 20, fontWeight: \"bold\", paddingRight: 10 }}\n                                                >\n                                                  {item.location}\n                                                </Text>\n                                              </View>\n                                            }\n                                            {\n                                              item.custom_product_1 !== null && item.custom_product_1 !== \"\" && item.custom_product_1 !== undefined &&\n                                              <View style={{ flex: 1, flexDirection: \"row\", alignItems: \"baseline\", height: 25 }}>\n                                                <Text>C1:</Text>\n                                                <Text numberOfLines={1}\n                                                  ellipsizeMode='tail'\n                                                  style={{ fontSize: 20, fontWeight: \"bold\" }}\n                                                >\n                                                  {item.custom_product_1}\n                                                </Text>\n                                              </View>\n                                            }\n                                          </View>\n                                        </View>\n                                        <View style={{ backgroundColor: \"#d3def4\", padding: 3, borderBottomLeftRadius: 20, borderBottomRightRadius: 20 }}>\n                                          <Text style={{ fontSize: 20, maxWidth: \"75%\" }}\n                                            numberOfLines={1}\n                                            ellipsizeMode='tail'\n                                          >\n                                            {\n                                              item &&\n                                              item.barcodes.length > 0 &&\n                                              item.barcodes[0].barcode\n                                            }\n                                          </Text>\n                                        </View>\n                                      </View>\n\n                                      <View style={{ flex: 5, borderBottomRightRadius: 12, borderTopRightRadius: 12, position: \"absolute\", right: 6, width: \"25%\", height: \"100%\", bottom: 0, top: 10 }}>\n                                        <View style={{ backgroundColor: \"#fff\", shadowColor: \"#000\", shadowOffset: { width: -5, height: 2 }, shadowOpacity: 0.25, shadowRadius: 3.84, elevation: 3, borderRadius: 12, borderWidth: 8, borderColor: \"#336598\" }}>\n                                          <Text style={{ position: \"absolute\", textAlign: \"center\", fontSize: 18, fontWeight: \"600\", backgroundColor: \"#fff\", opacity: 0.7, bottom: 0, right: 0, left: 0, marginLeft: \"auto\", marginRight: \"auto\", zIndex: 999 }}>\n                                            {item.scanned_qty}/{item.qty_remaining + item.scanned_qty}\n                                          </Text>\n                                          <Image source={{ uri: item.images && item.images.length > 0 ? item.images[0].image : placeholder }}\n                                            style={{ height: \"100%\", width: \"100%\", resizeMode: 'contain', borderRadius: 12 }} />\n                                        </View>\n                                      </View>\n                                    </View>\n                                    :\n                                    <View key={index} style={{ margin: 0, borderRadius: 30, borderWidth: 4, borderColor: \"black\", backgroundColor: \"#3f5163\", padding: 10 }}>\n                                      <View style={{ flexDirection: \"row\" }}>\n                                        <View style={{ height: 5, flex: 8, backgroundColor: \"#fff\", borderRadius: 3, position: \"relative\" }}>\n                                          <Text style={{ fontSize: 18, fontWeight: \"bold\", position: \"absolute\", left: \"50%\", top: -7, marginLeft: \"auto\", marginRight: \"auto\", backgroundColor: \"#3f5163\", paddingLeft: 4, paddingRight: 4, color: \"#fff\" }}>\n                                            KIT\n                                          </Text>\n                                        </View>\n                                        <View style={{ flex: 2 }}>\n                                          <Text style={{ textAlign: \"center\", color: \"#fff\", fontSize: 18, marginTop: -6, fontWeight: \"bold\" }}>{item.scanned_qty}/{item.qty_remaining + item.scanned_qty}</Text>\n                                        </View>\n                                      </View>\n                                      <View style={{ flexDirection: \"row\" }}>\n                                        <View style={{ flex: 8 }}>\n                                          <TouchableOpacity onLongPress={() => this.props.redirectToItemDetail(item)}\n                                            delayLongPress={1000}>\n                                            <Text numberOfLines={2}\n                                              ellipsizeMode='tail'\n                                              style={{ fontSize: 16, color: \"#fff\", fontWeight: \"600\", paddingRight: 3, paddingLeft: 3 }}\n                                            >\n                                              {item.name}\n                                            </Text>\n                                          </TouchableOpacity>\n                                          {/*<TouchableOpacity onPress={() => this.props.clickScan(Order.unscanned_items[0].child_items[0]) }>*/}\n                                          <Text numberOfLines={1}\n                                            ellipsizeMode='tail'\n                                            style={{ fontSize: 20, color: \"#fff\", fontWeight: \"600\", paddingRight: 3, paddingLeft: 3, marginBottom: 2 }}>{item.sku}</Text>\n                                          {/*</TouchableOpacity>*/}\n                                        </View>\n                                        {\n                                          item.images.length > 0 && item.images[0].image &&\n                                          <View style={{ flex: 2, borderRadius: 12, borderWidth: 12, maxHeight: 100, borderColor: \"#3f5163\" }}>\n                                            <Image source={{ uri: item.images && item.images.length > 0 ? item.images[0].image : placeholder }}\n                                              style={{ height: \"100%\", width: \"100%\", resizeMode: 'contain', borderRadius: 12 }} />\n                                          </View>\n                                        }\n                                      </View>\n                                      {\n                                        item && item.child_items && item.child_items.length > 0 && item.child_items.map((childItem, index) => {\n                                          return (\n                                            <View key={index} style={{ flexDirection: \"row\", marginBottom: 5, backgroundColor: \"#fff\", borderBottomRightRadius: 20, borderTopRightRadius: 20 }}>\n                                              <View style={{ flex: 20 }}>\n                                                <View style={{ backgroundColor: \"#fff\" }}></View>\n                                                <TouchableOpacity onLongPress={() => this.props.redirectToItemDetail(childItem)}\n                                                  delayLongPress={1000}\n                                                  style={{ backgroundColor: \"#fff\", paddingLeft: 5, paddingTop: 10 }}>\n                                                  <Text numberOfLines={2}\n                                                    ellipsizeMode='tail'\n                                                    style={childItem.name && childItem.name.length <= 32\n                                                      ?\n                                                      { fontSize: 20, width: \"75%\" }\n                                                      :\n                                                      { fontSize: 16, width: \"75%\" }\n                                                    }\n                                                  >\n                                                    {childItem.name}\n                                                  </Text>\n                                                </TouchableOpacity>\n                                                <Text numberOfLines={1}\n                                                  ellipsizeMode='tail'\n                                                  style={{ backgroundColor: \"#3f5163\", color: \"#fff\", fontSize: 20, fontWeight: \"600\", width: \"75%\" }}\n                                                >\n                                                  {childItem.sku}\n                                                </Text>\n                                                <View style={{ backgroundColor: \"#a4b4c5\", height: 25 }}>\n                                                  <View style={{ flexDirection: \"row\", width: \"65%\" }}>\n                                                    {\n                                                      childItem.location !== null && childItem.location !== \"\" &&\n                                                      <View style={{ flex: 1, flexDirection: \"row\", alignItems: \"baseline\", height: 25 }}>\n                                                        <Text>L1:</Text>\n                                                        <Text numberOfLines={1}\n                                                          ellipsizeMode='tail'\n                                                          style={{ fontSize: 20, fontWeight: \"bold\", paddingRight: 10 }}\n                                                        >\n                                                          {childItem.location}\n                                                        </Text>\n                                                      </View>\n                                                    }\n                                                    {\n                                                      childItem.custom_product_1 !== null && childItem.custom_product_1 !== \"\" &&\n                                                      <View style={{ flex: 1, flexDirection: \"row\", alignItems: \"baseline\", height: 25 }}>\n                                                        <Text>C1:</Text>\n                                                        <Text numberOfLines={1}\n                                                          ellipsizeMode='tail'\n                                                          style={{ fontSize: 20, fontWeight: \"bold\" }}\n                                                        >\n                                                          {childItem.custom_product_1}\n                                                        </Text>\n                                                      </View>\n                                                    }\n                                                  </View>\n                                                </View>\n                                                <View style={{ backgroundColor: \"#cdd7e2\", borderBottomRightRadius: 20 }}>\n                                                  <Text numberOfLines={1}\n                                                    ellipsizeMode='tail'\n                                                    style={{ width: \"75%\", fontSize: 20 }}>\n                                                    {\n                                                      childItem &&\n                                                      childItem.barcodes.length > 0 &&\n                                                      childItem.barcodes[0].barcode\n                                                    }\n                                                  </Text>\n                                                </View>\n                                              </View>\n                                              <View style={{ flex: 5, borderBottomRightRadius: 12, paddingTop: 10, position: \"absolute\", width: \"25%\", right: 0, top: 0, bottom: 0 }}>\n                                                <View style={{ backgroundColor: \"#fff\", shadowColor: \"#000\", shadowOffset: { width: -5, height: 2 }, shadowOpacity: 0.25, shadowRadius: 3.84, elevation: 3, borderRadius: 12, borderWidth: 8, borderColor: \"#3f5163\" }}>\n                                                  <Text style={{ position: \"absolute\", textAlign: \"center\", fontSize: 18, fontWeight: \"600\", backgroundColor: \"#fff\", opacity: 0.7, bottom: 0, right: 0, left: 0, marginLeft: \"auto\", marginRight: \"auto\", zIndex: 999 }}>\n                                                    {childItem.scanned_qty}/{childItem.qty_remaining + childItem.scanned_qty}\n                                                  </Text>\n                                                  <Image source={{ uri: childItem.images && childItem.images.length > 0 ? childItem.images[0].image : placeholder }}\n                                                    style={{ height: \"100%\", width: \"100%\", resizeMode: 'contain', borderRadius: 12 }} />\n                                                </View>\n                                              </View>\n                                            </View>\n                                          )\n                                        })\n                                      }\n                                    </View>\n                                }\n                              </View>\n                            )\n                          })\n                          :\n                          <View style={globalStyles.p_10}>\n                            <Text style={styles.scannedItemNameText}>\n                              No more item remaining to scan\n                            </Text>\n                          </View>\n                      }\n                    </ScrollView>\n                  </View>\n                </View>\n            }\n          </View>\n        }\n      </React.Fragment>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}
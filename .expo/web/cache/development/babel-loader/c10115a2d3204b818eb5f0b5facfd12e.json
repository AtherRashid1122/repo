{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\DELL PC\\\\Downloads\\\\GroovePacker\\\\src\\\\components\\\\scanpack\\\\serial_record.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport styles from \"../../style/scanpack\";\nimport globalStyles from \"../../style/global\";\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { fontFamily } from \"../../helpers/fontFamily\";\n\nvar SerialRecord = function (_Component) {\n  _inherits(SerialRecord, _Component);\n\n  var _super = _createSuper(SerialRecord);\n\n  function SerialRecord(props) {\n    var _this;\n\n    _classCallCheck(this, SerialRecord);\n\n    _this = _super.call(this, props);\n    _this.typeScanFocus = React.createRef();\n    return _this;\n  }\n\n  _createClass(SerialRecord, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this.typeScanFocus.current.focus();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: styles.typeScanContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 7\n        }\n      }, React.createElement(LinearGradient, {\n        locations: [0, 1],\n        start: {\n          x: 0,\n          y: 1\n        },\n        end: {\n          x: 0,\n          y: 0\n        },\n        colors: [\"#d47d02\", \"#ffb636\"],\n        style: [styles.typeScanBox, {\n          backgroundColor: \"#b7b7b7\"\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: globalStyles.flexDirectionRow,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: [styles.scanCountText, {\n          fontFamily: fontFamily.font500,\n          fontSize: 20\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }\n      }, \"Product Serial Number\")), React.createElement(View, {\n        style: {\n          display: \"flex\",\n          alignItems: \"center\",\n          flexDirection: 'row'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }\n      }, React.createElement(TextInput, {\n        value: this.props.serialRecordInput,\n        onChangeText: this.props.handleSerialRecordInput,\n        autoFocus: true,\n        ref: this.typeScanFocus,\n        onSubmitEditing: this.props.serialRecordInput !== \"\" ? this.props.serialRecordFun : \"\",\n        style: [styles.typeScanCountInput, {\n          backgroundColor: \"#df8b0f\",\n          outline: \"none\",\n          width: \"60%\",\n          color: \"#000\",\n          fontFamily: fontFamily.font500,\n          fontSize: 18\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }\n      }), React.createElement(TouchableOpacity, {\n        onPress: this.props.closeAlert,\n        style: [styles.scanCountSubmitBtnBox, {\n          marginTop: 20\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: [styles.scanCountSubmitBtn, {\n          fontFamily: fontFamily.font400\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 15\n        }\n      }, \"Cancel\")))));\n    }\n  }]);\n\n  return SerialRecord;\n}(Component);\n\nexport { SerialRecord as default };","map":{"version":3,"sources":["C:/Users/DELL PC/Downloads/GroovePacker/src/components/scanpack/serial_record.js"],"names":["React","Component","styles","globalStyles","LinearGradient","fontFamily","SerialRecord","props","typeScanFocus","createRef","current","focus","typeScanContainer","x","y","typeScanBox","backgroundColor","flexDirectionRow","scanCountText","font500","fontSize","display","alignItems","flexDirection","serialRecordInput","handleSerialRecordInput","serialRecordFun","typeScanCountInput","outline","width","color","closeAlert","scanCountSubmitBtnBox","marginTop","scanCountSubmitBtn","font400"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { View, Text, TextInput, TouchableOpacity } from 'react-native';\nimport styles from '../../style/scanpack';\nimport globalStyles from '../../style/global';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { fontFamily } from '../../helpers/fontFamily';\n\nexport default class SerialRecord extends Component {\n  constructor(props) {\n    super(props);\n    this.typeScanFocus = React.createRef();\n  }\n\n  componentDidUpdate() {\n    this.typeScanFocus.current.focus()\n  }\n\n  render() {\n    return (\n      <View style={styles.typeScanContainer}>\n        <LinearGradient\n          locations={[0, 1]}\n          start={{ x: 0, y: 1 }} end={{ x: 0, y: 0 }}\n          colors={[\"#d47d02\", \"#ffb636\"]}\n          style={[styles.typeScanBox, { backgroundColor: \"#b7b7b7\" }]}>\n          <View style={globalStyles.flexDirectionRow}>\n            <Text style={[styles.scanCountText, { fontFamily: fontFamily.font500, fontSize: 20 }]}>\n              Product Serial Number\n            </Text>\n          </View>\n          <View style={{ display: \"flex\", alignItems: \"center\", flexDirection: 'row' }}>\n            <TextInput value={this.props.serialRecordInput}\n              onChangeText={this.props.handleSerialRecordInput}\n              autoFocus={true}\n              ref={this.typeScanFocus}\n              onSubmitEditing={this.props.serialRecordInput !== \"\" ? this.props.serialRecordFun : \"\"}\n              style={[styles.typeScanCountInput, { backgroundColor: \"#df8b0f\", outline: \"none\", width: \"60%\", color: \"#000\", fontFamily: fontFamily.font500, fontSize: 18 }]}>\n            </TextInput>\n            <TouchableOpacity onPress={this.props.closeAlert}\n              style={[styles.scanCountSubmitBtnBox, { marginTop: 20 }]}\n            >\n              <Text style={[styles.scanCountSubmitBtn, { fontFamily: fontFamily.font400 }]}>\n                Cancel\n              </Text>\n            </TouchableOpacity>\n            {/*<TouchableOpacity onPress={this.props.serialRecordInput !== \"\" ? this.props.serialRecordFun :  \"\"}\n                              style={styles.scanCountSubmitBtnBox}\n                              >\n              <Text style={styles.scanCountSubmitBtn}>\n                Submit\n              </Text>\n            </TouchableOpacity>*/}\n          </View>\n        </LinearGradient>\n      </View>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}
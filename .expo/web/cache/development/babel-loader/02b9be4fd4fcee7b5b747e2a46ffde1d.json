{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL PC\\\\Downloads\\\\GroovePacker\\\\src\\\\components\\\\scanpack\\\\log.js\";\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport moment from 'moment';\nimport styles from \"../../style/scanpack\";\nimport globalStyles from \"../../style/global\";\nexport default function LogView(props) {\n  var activities = props.activities;\n  var localLogs = props.localLogs;\n  return React.createElement(ScrollView, {\n    style: styles.logContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.logBox,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.logHeaderText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }, \"Activity Logs\"), localLogs && localLogs.slice(0).map(function (log, index) {\n    return React.createElement(View, {\n      key: index,\n      style: [globalStyles.flexDirectionRow, globalStyles.m_5],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }\n    }, React.createElement(View, {\n      style: styles.logIndex,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 19\n      }\n    }, React.createElement(Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 21\n      }\n    }, index + 1)), React.createElement(View, {\n      style: styles.actionBox,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 19\n      }\n    }, React.createElement(Text, {\n      style: styles.logDate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 21\n      }\n    }, moment(log.time).format('MMMM Do YYYY, h:mm:ss a')), log.event === \"regular\" && React.createElement(View, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 23\n      }\n    }, log.Log_count !== \"\" ? React.createElement(View, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 29\n      }\n    }, React.createElement(Text, {\n      style: styles.logAction,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 31\n      }\n    }, \"Product with barcode: \" + log.input + \" and sku: \" + log.SKU + \" scanned - by: \" + log.name), React.createElement(Text, {\n      style: styles.logDate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 31\n      }\n    }, \"Multibarcode count of \" + log.Log_count + \" scanned for product \" + log.SKU + \" \")) : React.createElement(Text, {\n      style: styles.logAction,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 29\n      }\n    }, \"INVALID SCAN - Product with barcode: \" + log.input + \" and sku: \" + log.SKU + \" scanned - by: \" + log.name)), log.event === \"click_scan\" && React.createElement(Text, {\n      style: styles.logAction,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 25\n      }\n    }, \" Item with SKU: \" + log.SKU + \" has been click scanned - by: \" + log.name), log.event === \"bulk_scan\" && React.createElement(Text, {\n      style: styles.logAction,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 25\n      }\n    }, \"Item \" + log.SKU + \" scanned through Bulk Scan - by: \" + log.name), log.event === \"type_scan\" && React.createElement(View, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 25\n      }\n    }, React.createElement(Text, {\n      style: styles.logAction,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 27\n      }\n    }, \"Item with SKU: \" + log.SKU + \" has been click scanned for a Type-In count - by: \" + log.name), React.createElement(Text, {\n      style: styles.logAction,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 27\n      }\n    }, \"Type-In count of \" + log.count + \" entered for product \" + log.SKU))));\n  })));\n}","map":{"version":3,"sources":["C:/Users/DELL PC/Downloads/GroovePacker/src/components/scanpack/log.js"],"names":["React","moment","styles","globalStyles","LogView","props","activities","localLogs","logContainer","logBox","logHeaderText","slice","map","log","index","flexDirectionRow","m_5","logIndex","actionBox","logDate","time","format","event","Log_count","logAction","input","SKU","name","count"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { View, Text , ScrollView} from 'react-native';\nimport moment from 'moment';\nimport styles from '../../style/scanpack';\nimport globalStyles from '../../style/global';\n\nexport default function LogView(props){\n  let activities = props.activities\n  let localLogs = props.localLogs\n  return (\n    <ScrollView style={styles.logContainer}>\n      <View style={styles.logBox}>\n        <Text style={styles.logHeaderText}>Activity Logs</Text>\n        {\n          localLogs && localLogs.slice(0).map((log , index)=> {\n            return(\n                <View key={index} style={[globalStyles.flexDirectionRow, globalStyles.m_5]}>\n                  <View style={styles.logIndex}>\n                    <Text>{index+1}</Text>\n                  </View>\n                  <View style={styles.actionBox}>\n                    <Text style={styles.logDate}>\n                      {moment(log.time).format('MMMM Do YYYY, h:mm:ss a')}\n                    </Text>\n                    {\n                      log.event === \"regular\" &&\n                      <View>\n                        {\n                          log.Log_count !== \"\"\n                            ?\n                            <View>\n                              <Text style={styles.logAction}>\n                                {`Product with barcode: ${log.input} and sku: ${log.SKU} scanned - by: ${log.name}`}\n                              </Text>\n                              <Text style={styles.logDate}>\n                                {`Multibarcode count of ${log.Log_count} scanned for product ${log.SKU} `}\n                              </Text>\n                            </View>\n                            :\n                            <Text style={styles.logAction}>\n                                {`INVALID SCAN - Product with barcode: ${log.input} and sku: ${log.SKU} scanned - by: ${log.name}`}\n                            </Text>\n                        }\n                      </View>\n                    }\n                    {\n                      log.event === \"click_scan\" &&\n                        <Text style={styles.logAction}>\n                          {` Item with SKU: ${log.SKU} has been click scanned - by: ${log.name}`}\n                        </Text>\n                    }\n                    {\n                      log.event === \"bulk_scan\" &&\n                        <Text style={styles.logAction}>\n                          {`Item ${log.SKU} scanned through Bulk Scan - by: ${log.name}`}\n                        </Text>\n                    }\n                    {\n                      log.event === \"type_scan\" &&\n                        <View>\n                          <Text style={styles.logAction}>\n                            {`Item with SKU: ${log.SKU} has been click scanned for a Type-In count - by: ${log.name}`}\n                          </Text>\n                          <Text style={styles.logAction}>\n                            {`Type-In count of ${log.count} entered for product ${log.SKU}`}\n                          </Text>\n                        </View>\n                    }\n\n                  </View>\n                </View>\n              )\n          })\n        }\n      </View>\n      {/*<ScrollView style={styles.logContainer}>\n        <View style={styles.logBox}>\n          <Text style={styles.logHeaderText}>Activity Logs</Text>\n          {\n            activities && activities.slice(0).map((log , index)=> {\n              return(\n                  <View key={index} style={[globalStyles.flexDirectionRow, globalStyles.m_5]}>\n                    <View style={styles.logIndex}>\n                      <Text>{index+1}</Text>\n                    </View>\n                    <View style={styles.actionBox}>\n                      <Text style={styles.logDate}>\n                        {moment(log.activitytime).format('MMMM Do YYYY, h:mm:ss a')}\n                      </Text>\n                      <Text style={styles.logAction}>Action: {log.action}</Text>\n                    </View>\n                  </View>\n                )\n            })\n          }\n        </View>\n      </ScrollView>*/}\n    </ScrollView>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}
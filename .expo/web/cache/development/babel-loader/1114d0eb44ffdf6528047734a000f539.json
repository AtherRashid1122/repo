{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\DELL PC\\\\Downloads\\\\GroovePacker\\\\src\\\\components\\\\main.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useLayoutEffect, useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport AsyncStorage from \"react-native-web/dist/exports/AsyncStorage\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport SignIn from \"./login/signin\";\nimport OrderList from \"./orders/orderlist\";\nimport OrderDetail from \"./orders/orderdetail\";\nimport ItemsDetail from \"./orders/items_detail\";\nimport AddItemToOrder from \"./orders/add_item_to_order\";\nimport ScanPack from \"./scanpack/scanpack\";\nimport ScanPackItem from \"./scanpack/scanpack_item\";\nimport ProductEdit from \"./scanpack/product_edit\";\nimport ProductDetail from \"./products/product_detail\";\nimport PutWall from \"./putwall/put_wall\";\nimport Drawer from \"./drawer/drawer\";\nimport SyncButton from \"./actionButton/sync\";\nimport toggle from \"../../assets/toggle1.png\";\nimport { navigationRef } from \"./root_navigation\";\nimport Close from \"../../assets/closeicon.png\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport { fontFamily } from \"../helpers/fontFamily\";\nimport * as RootNavigation from \"./root_navigation\";\nimport styles from \"../style/main\";\nvar Stack = createStackNavigator();\nvar name = \"Next Item\";\nexport default function Main(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      token = _useState2[0],\n      setToken = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      show = _useState4[0],\n      setShow = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      userInfo = _useState6[0],\n      setUserInfo = _useState6[1];\n\n  var _useState7 = useState(Dimensions.get(\"window\").width),\n      _useState8 = _slicedToArray(_useState7, 2),\n      windowWidth = _useState8[0],\n      setWindowWidth = _useState8[1];\n\n  var _useState9 = useState(true),\n      _useState10 = _slicedToArray(_useState9, 2),\n      navShow = _useState10[0],\n      setNavShow = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      openDrawer = _useState12[0],\n      handelDrawer = _useState12[1];\n\n  var _useState13 = useState(false),\n      _useState14 = _slicedToArray(_useState13, 2),\n      restartFlag = _useState14[0],\n      restartHandel = _useState14[1];\n\n  var _useState15 = useState(false),\n      _useState16 = _slicedToArray(_useState15, 2),\n      alertShow = _useState16[0],\n      alertShowHandle = _useState16[1];\n\n  var restartButtonRef = React.createRef();\n  useEffect(function () {\n    var getUserInfo = function getUserInfo() {\n      var info, userInfo;\n      return _regeneratorRuntime.async(function getUserInfo$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"userInfo\"));\n\n            case 2:\n              info = _context.sent;\n              userInfo = info && JSON.parse(info);\n              setUserInfo(userInfo);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    getUserInfo();\n  }, []);\n  useLayoutEffect(function () {\n    function updateSize() {\n      setWindowWidth(window.innerWidth);\n    }\n\n    window.addEventListener('resize', updateSize);\n    updateSize();\n    return function () {\n      return window.removeEventListener('resize', updateSize);\n    };\n  }, []);\n  AsyncStorage.getItem('access_token').then(function (keyValue) {\n    setToken(keyValue);\n    setShow(true);\n    return keyValue;\n  });\n\n  function DrawerButton() {\n    return React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        handelDrawer(openDrawer = true);\n      },\n      style: {\n        flex: 1,\n        marginLeft: 20,\n        justifyContent: \"center\",\n        width: \"100%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 7\n      }\n    }, React.createElement(Image, {\n      style: {\n        width: 39,\n        height: 31,\n        color: \"#fff\",\n        resizeMode: \"contain\"\n      },\n      source: toggle ? toggle : \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  function closeDrawer() {\n    handelDrawer(openDrawer = false);\n  }\n\n  function navBarShow(position) {\n    setNavShow(navShow = position);\n  }\n\n  function restartButton() {\n    restartHandel(restartFlag = !restartFlag);\n  }\n\n  function restartButtonReset() {\n    restartHandel(restartFlag = false);\n  }\n\n  function nav() {\n    navigation.canGoBack;\n  }\n\n  function changeHeading(num) {\n    if (num === 0) {\n      name = \"Scanned Item\";\n    }\n\n    if (num === 1) {\n      name = \"Next Item\";\n    }\n\n    if (num === 2) {\n      name = \"Unscanned Item\";\n    }\n  }\n\n  function _syncButtonHandle() {\n    alertShowHandle(true);\n  }\n\n  return show && React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }\n  }, React.createElement(NavigationContainer, {\n    ref: navigationRef,\n    style: {\n      zIndex: -1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 9\n    }\n  }, React.createElement(Stack.Navigator, {\n    initialRouteName: token ? \"ScanPack\" : \"SignIn\",\n    style: {\n      zIndex: -1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 11\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"SignIn\",\n    component: SignIn,\n    options: {\n      title: \"Sign In\",\n      headerStyle: {\n        backgroundColor: \"#336599\"\n      },\n      headerTintColor: \"#fff\",\n      headerTitleStyle: {\n        fontWeight: \"bold\",\n        textAlign: \"center\",\n        fontSize: 22\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"OrderList\",\n    component: OrderList,\n    path: \"/123\",\n    options: {\n      title: \"List\",\n      headerStyle: {\n        backgroundColor: \"#336599\"\n      },\n      headerTintColor: \"#fff\",\n      headerTitleStyle: {\n        fontWeight: \"bold\",\n        textAlign: \"center\",\n        fontSize: 22\n      },\n      headerLeft: null,\n      headerLeft: function headerLeft() {\n        return React.createElement(DrawerButton, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 35\n          }\n        });\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"OrderDetail\",\n    component: OrderDetail,\n    options: {\n      title: \"Order Detail\",\n      headerTitleStyle: {\n        fontFamily: fontFamily.font700,\n        color: \"#fff\",\n        textAlign: \"center\",\n        fontSize: 22\n      },\n      headerBackground: function headerBackground() {\n        return React.createElement(LinearGradient, {\n          start: {\n            x: 0,\n            y: 1\n          },\n          end: {\n            x: 0,\n            y: 0\n          },\n          colors: [\"#142130\", \"#304454\"],\n          style: {\n            width: \"100%\",\n            height: \"100%\",\n            shadowColor: \"#000\",\n            shadowOffset: {\n              width: 1,\n              height: 1\n            },\n            shadowOpacity: 1,\n            shadowRadius: 3,\n            elevation: 5\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 19\n          }\n        });\n      },\n      headerLeft: function headerLeft() {\n        return React.createElement(View, {\n          style: {\n            flexDirection: \"row\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 19\n          }\n        }, React.createElement(DrawerButton, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 21\n          }\n        }), windowWidth >= 900 && React.createElement(View, {\n          style: {\n            marginLeft: 10\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 23\n          }\n        }, React.createElement(Text, {\n          style: {\n            fontFamily: fontFamily.font500,\n            color: \"#fff\",\n            fontSize: 16,\n            textTransform: \"uppercase\",\n            lineHeight: 15,\n            marginTop: 4\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 25\n          }\n        }, userInfo && userInfo.name), React.createElement(Text, {\n          style: {\n            fontFamily: fontFamily.font700,\n            color: \"#fff\",\n            fontSize: 16,\n            textTransform: \"uppercase\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 25\n          }\n        }, userInfo && userInfo.current_tenant)));\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 13\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"ScanPack\",\n    component: ScanPack,\n    options: {\n      title: \"ScanPack\",\n      headerStyle: {\n        backgroundColor: \"#336599\"\n      },\n      headerTintColor: \"#fff\",\n      headerTitleStyle: {\n        fontWeight: \"bold\",\n        textAlign: \"center\",\n        fontSize: 22\n      },\n      headerLeft: null,\n      headerLeft: function headerLeft() {\n        return React.createElement(DrawerButton, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 35\n          }\n        });\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 13\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"ScanPackItem\",\n    component: ScanPackItem,\n    initialParams: {\n      item: navBarShow,\n      restart: restartFlag,\n      restartButton: restartButton,\n      changeHeading: changeHeading\n    },\n    options: {\n      title: alertShow === false ? React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return RootNavigation.navigate(\"ScanPack\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 23\n        }\n      }, \"Scan & Verify\")) : React.createElement(LinearGradient, {\n        colors: [\"#5bbc31\", \"#479523\", \"#3f851d\"],\n        style: {\n          position: \"fixed\",\n          height: 40,\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          top: 0,\n          left: 0,\n          right: 0,\n          marginLeft: \"auto\",\n          marginRight: \"auto\",\n          padding: 4,\n          marginTop: 12,\n          shadowOffset: {\n            width: 0,\n            height: 0\n          },\n          shadowRadius: 3.84,\n          shadowColor: \"#000\",\n          shadowOpacity: 0.9,\n          zIndex: 9,\n          width: \"80%\",\n          borderRadius: 5\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: windowWidth > 1024 ? {\n          fontSize: 16\n        } : {\n          fontSize: 13\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 23\n        }\n      }, \"Changes Successfully Saved\"), React.createElement(TouchableOpacity, {\n        onClick: function onClick() {\n          return alertShowHandle(false);\n        },\n        style: {\n          position: \"absolute\",\n          right: 11\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 23\n        }\n      }, React.createElement(Image, {\n        style: windowWidth > 1024 ? {\n          width: 22,\n          height: 22\n        } : {\n          width: 18,\n          height: 18\n        },\n        source: Close ? Close : \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 25\n        }\n      }))),\n      headerTitleStyle: {\n        fontFamily: fontFamily.font700,\n        color: \"#fff\",\n        textAlign: \"center\",\n        fontSize: 22\n      },\n      headerBackground: function headerBackground() {\n        return React.createElement(LinearGradient, {\n          start: {\n            x: 0,\n            y: 1\n          },\n          end: {\n            x: 0,\n            y: 0\n          },\n          colors: [\"#142130\", \"#304454\"],\n          style: {\n            backgroundColor: \"#707070\",\n            width: \"100%\",\n            height: \"100%\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 19\n          }\n        });\n      },\n      headerLeft: function headerLeft() {\n        return React.createElement(View, {\n          style: {\n            flexDirection: \"row\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 19\n          }\n        }, React.createElement(DrawerButton, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 21\n          }\n        }), windowWidth >= 900 && React.createElement(View, {\n          style: {\n            marginLeft: 10\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 373,\n            columnNumber: 23\n          }\n        }, React.createElement(Text, {\n          style: {\n            fontFamily: fontFamily.font500,\n            color: \"#fff\",\n            fontSize: 16,\n            textTransform: \"uppercase\",\n            lineHeight: 15,\n            marginTop: 4\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 374,\n            columnNumber: 25\n          }\n        }, userInfo && userInfo.name), React.createElement(Text, {\n          style: {\n            fontFamily: fontFamily.font700,\n            color: \"#fff\",\n            fontSize: 16,\n            textTransform: \"uppercase\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 386,\n            columnNumber: 25\n          }\n        }, userInfo && userInfo.current_tenant)));\n      },\n      headerRight: function headerRight() {\n        return React.createElement(SyncButton, {\n          syncButtonHandle: function syncButtonHandle() {\n            return _syncButtonHandle();\n          },\n          alertShow: alertShow,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 401,\n            columnNumber: 19\n          }\n        });\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 13\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"ProductEdit\",\n    component: ProductEdit,\n    options: {\n      title: \"Edit Product\",\n      headerStyle: {\n        backgroundColor: \"#336599\"\n      },\n      headerTintColor: \"#fff\",\n      headerTitleStyle: {\n        fontWeight: \"bold\",\n        textAlign: \"center\",\n        fontSize: 22\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 457,\n      columnNumber: 13\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"ProductDetail\",\n    component: ProductDetail,\n    options: {\n      title: \"Product Detail\",\n      headerStyle: {\n        backgroundColor: \"#336599\"\n      },\n      headerTintColor: \"#fff\",\n      headerTitleStyle: {\n        fontWeight: \"bold\",\n        textAlign: \"center\",\n        fontSize: 22\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 475,\n      columnNumber: 13\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"ItemsDetail\",\n    component: ItemsDetail,\n    options: {\n      title: \"Items Detail\",\n      headerStyle: {\n        backgroundColor: \"#336599\"\n      },\n      headerTintColor: \"#fff\",\n      headerTitleStyle: {\n        fontWeight: \"bold\",\n        textAlign: \"center\",\n        fontSize: 22\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 493,\n      columnNumber: 13\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"PutWall\",\n    component: PutWall,\n    options: {\n      headerStyle: {\n        backgroundColor: \"#336599\"\n      },\n      headerTintColor: \"#fff\",\n      headerTitleStyle: {\n        fontWeight: \"bold\",\n        textAlign: \"center\",\n        fontSize: 22\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 511,\n      columnNumber: 13\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Select Product to add to Order\",\n    component: AddItemToOrder,\n    options: {\n      headerStyle: {\n        backgroundColor: \"#336599\"\n      },\n      headerTintColor: \"#fff\",\n      headerTitleStyle: {\n        fontWeight: \"bold\",\n        textAlign: \"center\",\n        fontSize: 22\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 528,\n      columnNumber: 13\n    }\n  }))), openDrawer && React.createElement(Drawer, {\n    closeDrawer: closeDrawer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 547,\n      columnNumber: 24\n    }\n  }));\n}","map":{"version":3,"sources":["C:/Users/DELL PC/Downloads/GroovePacker/src/components/main.js"],"names":["React","useEffect","useLayoutEffect","useState","NavigationContainer","createStackNavigator","SignIn","OrderList","OrderDetail","ItemsDetail","AddItemToOrder","ScanPack","ScanPackItem","ProductEdit","ProductDetail","PutWall","Drawer","SyncButton","toggle","navigationRef","Close","LinearGradient","fontFamily","RootNavigation","styles","Stack","name","Main","navigation","token","setToken","show","setShow","userInfo","setUserInfo","Dimensions","get","width","windowWidth","setWindowWidth","navShow","setNavShow","openDrawer","handelDrawer","restartFlag","restartHandel","alertShow","alertShowHandle","restartButtonRef","createRef","getUserInfo","AsyncStorage","getItem","info","JSON","parse","updateSize","window","innerWidth","addEventListener","removeEventListener","then","keyValue","DrawerButton","flex","marginLeft","justifyContent","height","color","resizeMode","closeDrawer","navBarShow","position","restartButton","restartButtonReset","nav","canGoBack","changeHeading","num","syncButtonHandle","zIndex","title","headerStyle","backgroundColor","headerTintColor","headerTitleStyle","fontWeight","textAlign","fontSize","headerLeft","font700","headerBackground","x","y","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","flexDirection","font500","textTransform","lineHeight","marginTop","current_tenant","item","restart","navigate","display","alignItems","top","left","right","marginRight","padding","borderRadius","headerRight"],"mappings":"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","sourcesContent":["import React, { useEffect, useLayoutEffect, useState } from 'react';\nimport { Text, View, Dimensions, Image, TouchableOpacity, AsyncStorage } from 'react-native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport SignIn from './login/signin';\nimport OrderList from './orders/orderlist';\nimport OrderDetail from './orders/orderdetail';\nimport ItemsDetail from './orders/items_detail';\nimport AddItemToOrder from './orders/add_item_to_order';\nimport ScanPack from './scanpack/scanpack';\nimport ScanPackItem from './scanpack/scanpack_item';\nimport ProductEdit from './scanpack/product_edit';\nimport ProductDetail from \"./products/product_detail\";\nimport PutWall from \"./putwall/put_wall\";\nimport Drawer from \"./drawer/drawer\";\nimport SyncButton from \"./actionButton/sync\";\nimport toggle from \"../../assets/toggle1.png\";\nimport { navigationRef } from \"./root_navigation\";\nimport Close from \"../../assets/closeicon.png\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport { fontFamily } from \"../helpers/fontFamily\";\nimport * as RootNavigation from \"./root_navigation\";\nimport styles from \"../style/main\";\n\nconst Stack = createStackNavigator();\nlet name = \"Next Item\";\n\n// const prefix = Linking.makeUrl('https://23a7badd6881.ngrok.io')\n\nexport default function Main({ navigation }) {\n  const [token, setToken] = useState(\"\");\n  const [show, setShow] = useState(false)\n  const [userInfo, setUserInfo] = useState(null)\n  const [windowWidth, setWindowWidth] = useState(Dimensions.get(\"window\").width)\n  let [navShow, setNavShow] = useState(true)\n  let [openDrawer, handelDrawer] = useState(false)\n  let [restartFlag, restartHandel] = useState(false)\n  let [alertShow, alertShowHandle] = useState(false)\n  let restartButtonRef = React.createRef();\n\n  useEffect(() => {\n    /*RETRIVE THE USER INFO FROM LOCAL*/\n    const getUserInfo = async () => {\n      let info = await AsyncStorage.getItem(\"userInfo\");\n      let userInfo = info && JSON.parse(info);\n      setUserInfo(userInfo);\n    };\n\n    getUserInfo();\n  }, []);\n\n  useLayoutEffect(() => {\n    function updateSize() {\n      setWindowWidth(window.innerWidth)\n    }\n    window.addEventListener('resize', updateSize)\n    updateSize()\n    return () => window.removeEventListener('resize', updateSize)\n  }, [])\n\n  AsyncStorage.getItem('access_token').then((keyValue) => {\n    setToken(keyValue)\n    setShow(true)\n    return keyValue\n  });\n  // const linking = {\n  //   prefixes: [prefix],\n  //    config: {\n  //     screens: {\n  //       OrderList: \"/OrderList\",\n  //       OrderDetail: \"/OrderDetail\",\n  //       ScanPack: \"/ScanPack\",\n  //       ScanPackItem: \"/ScanPackItem\",\n  //       ProductEdit: \"/ProductEdit\",\n  //       ProductDetail: \"/ProductDetail\",\n  //       ItemsDetail: \"/ItemsDetail\",\n  //       // PutWall: \"\",\n  //     }\n  //   }\n  // };\n\n  function DrawerButton() {\n    return (\n      <TouchableOpacity\n        onPress={() => {\n          handelDrawer((openDrawer = true));\n        }}\n        style={{\n          flex: 1,\n          marginLeft: 20,\n          justifyContent: \"center\",\n          width: \"100%\",\n        }}\n      >\n        <Image\n          style={{\n            width: 39,\n            height: 31,\n            color: \"#fff\",\n            resizeMode: \"contain\",\n          }}\n          source={toggle ? toggle : \"\"}\n        />\n      </TouchableOpacity>\n    );\n  }\n\n  function closeDrawer() {\n    handelDrawer((openDrawer = false));\n  }\n\n  function navBarShow(position) {\n    setNavShow((navShow = position));\n  }\n\n  function restartButton() {\n    restartHandel((restartFlag = !restartFlag));\n  }\n\n  function restartButtonReset() {\n    restartHandel((restartFlag = false));\n  }\n\n  function nav() {\n    navigation.canGoBack;\n  }\n\n  function changeHeading(num) {\n    if (num === 0) {\n      name = \"Scanned Item\";\n    }\n    if (num === 1) {\n      name = \"Next Item\";\n    }\n    if (num === 2) {\n      name = \"Unscanned Item\";\n    }\n  }\n\n  function syncButtonHandle() {\n    alertShowHandle(true);\n    // setTimeout(() => alertShowHandle(false) , 3000);\n  }\n\n  return (\n    show && (\n      <React.Fragment>\n        {/*<NavigationContainer linking={linking} ref={navigationRef}>*/}\n        <NavigationContainer ref={navigationRef} style={{ zIndex: -1 }}>\n          <Stack.Navigator\n            initialRouteName={token ? \"ScanPack\" : \"SignIn\"}\n            style={{ zIndex: -1 }}\n          >\n            <Stack.Screen\n              name=\"SignIn\"\n              component={SignIn}\n              options={{\n                title: \"Sign In\",\n                headerStyle: {\n                  backgroundColor: \"#336599\",\n                },\n                headerTintColor: \"#fff\",\n                headerTitleStyle: {\n                  fontWeight: \"bold\",\n                  textAlign: \"center\",\n                  fontSize: 22,\n                },\n                // headerLeft: null,\n                // headerLeft: () => (<DrawerButton/>)\n              }}\n            />\n            <Stack.Screen\n              name=\"OrderList\"\n              component={OrderList}\n              path=\"/123\"\n              options={{\n                title: \"List\",\n                headerStyle: {\n                  backgroundColor: \"#336599\",\n                },\n                headerTintColor: \"#fff\",\n                headerTitleStyle: {\n                  fontWeight: \"bold\",\n                  textAlign: \"center\",\n                  fontSize: 22,\n                },\n                headerLeft: null,\n                headerLeft: () => <DrawerButton />,\n              }}\n            />\n            <Stack.Screen\n              name=\"OrderDetail\"\n              component={OrderDetail}\n              options={{\n                title: \"Order Detail\",\n                // headerStyle: {\n                //   backgroundColor: '#336599',\n                // },\n                // headerTintColor: '#fff',\n                // headerTitleStyle: {\n                //   fontWeight: 'bold',\n                //   textAlign: \"center\",\n                //   fontSize: 22\n                // },\n                // headerLeft: null\n                // headerLeft: (navigation) => (<HeaderBackButton  onPress={() => nav(navigation) } />)\n                headerTitleStyle: {\n                  fontFamily: fontFamily.font700,\n                  color: \"#fff\",\n                  textAlign: \"center\",\n                  fontSize: 22,\n                },\n                headerBackground: () => (\n                  <LinearGradient\n                    start={{ x: 0, y: 1 }}\n                    end={{ x: 0, y: 0 }}\n                    colors={[\"#142130\", \"#304454\"]}\n                    style={{\n                      // backgroundColor: \"#707070\",\n                      width: \"100%\",\n                      height: \"100%\",\n                      shadowColor: \"#000\",\n                      shadowOffset: {\n                        width: 1,\n                        height: 1,\n                      },\n                      shadowOpacity: 1,\n                      shadowRadius: 3,\n\n                      elevation: 5,\n                    }}\n                  />\n                ),\n                headerLeft: () => (\n                  <View style={{ flexDirection: \"row\" }}>\n                    <DrawerButton />\n                    {windowWidth >= 900 && (\n                      <View style={{ marginLeft: 10 }}>\n                        <Text\n                          style={{\n                            fontFamily: fontFamily.font500,\n                            color: \"#fff\",\n                            fontSize: 16,\n                            textTransform: \"uppercase\",\n                            lineHeight: 15,\n                            marginTop: 4,\n                          }}\n                        >\n                          {userInfo && userInfo.name}\n                        </Text>\n                        <Text\n                          style={{\n                            fontFamily: fontFamily.font700,\n                            color: \"#fff\",\n                            fontSize: 16,\n                            textTransform: \"uppercase\",\n                          }}\n                        >\n                          {userInfo && userInfo.current_tenant}\n                        </Text>\n                      </View>\n                    )}\n                  </View>\n                ),\n              }}\n            />\n            <Stack.Screen\n              name=\"ScanPack\"\n              component={ScanPack}\n              options={{\n                title: \"ScanPack\",\n                headerStyle: {\n                  backgroundColor: \"#336599\",\n                },\n                headerTintColor: \"#fff\",\n                headerTitleStyle: {\n                  fontWeight: \"bold\",\n                  textAlign: \"center\",\n                  fontSize: 22,\n                },\n                headerLeft: null,\n                headerLeft: () => <DrawerButton />,\n              }}\n            />\n            <Stack.Screen\n              name=\"ScanPackItem\"\n              component={ScanPackItem}\n              initialParams={{\n                item: navBarShow,\n                restart: restartFlag,\n                restartButton: restartButton,\n                changeHeading: changeHeading,\n              }}\n              options={{\n                title:\n                  alertShow === false ? (\n                    <TouchableOpacity\n                      onPress={() => RootNavigation.navigate(\"ScanPack\")}\n                    >\n                      <Text>Scan & Verify</Text>\n                    </TouchableOpacity>\n                  ) : (\n                    <LinearGradient\n                      colors={[\"#5bbc31\", \"#479523\", \"#3f851d\"]}\n                      style={{\n                        position: \"fixed\",\n                        height: 40,\n                        display: \"flex\",\n                        alignItems: \"center\",\n                        justifyContent: \"center\",\n                        top: 0,\n                        left: 0,\n                        right: 0,\n                        marginLeft: \"auto\",\n                        marginRight: \"auto\",\n                        padding: 4,\n                        marginTop: 12,\n                        shadowOffset: { width: 0, height: 0 },\n                        shadowRadius: 3.84,\n                        shadowColor: \"#000\",\n                        shadowOpacity: 0.9,\n                        zIndex: 9,\n                        width: \"80%\",\n                        borderRadius: 5,\n                      }}\n                    >\n                      <Text\n                        style={\n                          windowWidth > 1024\n                            ? { fontSize: 16 }\n                            : { fontSize: 13 }\n                        }\n                      >\n                        Changes Successfully Saved\n                      </Text>\n                      <TouchableOpacity\n                        onClick={() => alertShowHandle(false)}\n                        style={{ position: \"absolute\", right: 11 }}\n                      >\n                        <Image\n                          style={\n                            windowWidth > 1024\n                              ? { width: 22, height: 22 }\n                              : { width: 18, height: 18 }\n                          }\n                          source={Close ? Close : \"\"}\n                        />\n                      </TouchableOpacity>\n                    </LinearGradient>\n                  ),\n                headerTitleStyle: {\n                  fontFamily: fontFamily.font700,\n                  color: \"#fff\",\n                  textAlign: \"center\",\n                  fontSize: 22,\n                },\n                headerBackground: () => (\n                  <LinearGradient\n                    start={{ x: 0, y: 1 }}\n                    end={{ x: 0, y: 0 }}\n                    colors={[\"#142130\", \"#304454\"]}\n                    style={{\n                      backgroundColor: \"#707070\",\n                      width: \"100%\",\n                      height: \"100%\",\n                    }}\n                  />\n                ),\n                headerLeft: () => (\n                  <View style={{ flexDirection: \"row\" }}>\n                    <DrawerButton />\n                    {windowWidth >= 900 && (\n                      <View style={{ marginLeft: 10 }}>\n                        <Text\n                          style={{\n                            fontFamily: fontFamily.font500,\n                            color: \"#fff\",\n                            fontSize: 16,\n                            textTransform: \"uppercase\",\n                            lineHeight: 15,\n                            marginTop: 4,\n                          }}\n                        >\n                          {userInfo && userInfo.name}\n                        </Text>\n                        <Text\n                          style={{\n                            fontFamily: fontFamily.font700,\n                            color: \"#fff\",\n                            fontSize: 16,\n                            textTransform: \"uppercase\",\n                          }}\n                        >\n                          {userInfo && userInfo.current_tenant}\n                        </Text>\n                      </View>\n                    )}\n                  </View>\n                ),\n                headerRight: () => (\n                  <SyncButton\n                    syncButtonHandle={() => syncButtonHandle()}\n                    alertShow={alertShow}\n                  />\n                ),\n              }}\n              // options={{header: () => (\n              //           <SafeAreaView>\n              //           {\n              //             Platform.OS === \"web\"\n              //               ?\n              //               <View style={{flexDirection: \"row\", alignItems: \"center\" , justifyContent: \"space-between\" ,backgroundColor: \"#336599\" , padding: 3 }}>\n              //                 <View style={{height: 50}}>\n              //                   {\n              //                     navShow === true &&\n              //                       <DrawerButton/>\n              //                   }\n              //                 </View>\n              //                 {/*<View style={{ flexDirection: \"row\", width: \"90%\" , display: \"flex\" , alignItems: \"center\" , justifyContent: \"space-around\" , marginLeft: 80}}>\n              //                   <TouchableOpacity style={{backgroundSize: \"contain\" , alignItems: \"center\" , marginRight: 15}} onPress={(e) => restartButton(e) }>\n              //                     <Image style={{ position: \"relative\" , width: 20 , height: 20 , marginBottom: 2}} source={restart} />\n              //                     <Text style={{fontSize: 10 , fontWeight: \"bold\" , color: \"#fff\"}}>Restart</Text>\n              //                   </TouchableOpacity>\n              //                   <TouchableOpacity style={{alignItems: \"center\"}}>\n              //                     <Image style={{ position: \"relative\" , width: 22 , height: 22}} source={note} />\n              //                     <Text style={{fontSize: 10 , fontWeight: \"bold\" , color: \"#fff\"}}>Note</Text>\n              //                   </TouchableOpacity>\n              //                 </View>*/}\n              //               </View>\n              //               :\n              //               <View style={{flexDirection: \"row\", alignItems: \"center\" , justifyContent: \"space-between\" ,backgroundColor: \"#1e5b60\" , padding: 3 }}>\n              //                 <View style={{height: 50}}>\n              //                   {\n              //                     navShow === true &&\n              //                       <DrawerButton/>\n              //                   }\n              //                 </View>\n              //                 <View style={{ flexDirection: \"row\", justifyContent: \"center\" , marginLeft: 80}}>\n              //                   <TouchableOpacity style={{backgroundSize: \"contain\" , alignItems: \"center\" , marginRight: 15}}>\n              //                     <Image style={{ position: \"relative\" , width: 20 , height: 20 , marginBottom: 2}} source={restart} />\n              //                     <Text style={{fontSize: 10 , color: \"#fff\"}}>Restart</Text>\n              //                   </TouchableOpacity>\n              //                   <TouchableOpacity style={{alignItems: \"center\"}}>\n              //                     <Image style={{ position: \"relative\" , width: 22 , height: 22}} source={note} />\n              //                     <Text style={{fontSize: 10 , color: \"#fff\"}}>Note</Text>\n              //                   </TouchableOpacity>\n              //                 </View>\n              //                 <View style={{textAlign: \"right\" , marginLeft: 10 , marginRight: 10}}>\n              //                   <Text style={{fontSize: 16 , color: \"#fff\" , fontWeight: \"bold\"}}>Scan & Pack</Text>\n              //                 </View>\n              //               </View>\n              //           }\n              //           </SafeAreaView>\n              //           )}\n              // }\n            />\n            <Stack.Screen\n              name=\"ProductEdit\"\n              component={ProductEdit}\n              options={{\n                title: \"Edit Product\",\n                headerStyle: {\n                  backgroundColor: \"#336599\",\n                },\n                headerTintColor: \"#fff\",\n                headerTitleStyle: {\n                  fontWeight: \"bold\",\n                  textAlign: \"center\",\n                  fontSize: 22,\n                },\n                // headerLeft: null,\n                // headerLeft: () => (<DrawerButton/>)\n              }}\n            />\n            <Stack.Screen\n              name=\"ProductDetail\"\n              component={ProductDetail}\n              options={{\n                title: \"Product Detail\",\n                headerStyle: {\n                  backgroundColor: \"#336599\",\n                },\n                headerTintColor: \"#fff\",\n                headerTitleStyle: {\n                  fontWeight: \"bold\",\n                  textAlign: \"center\",\n                  fontSize: 22,\n                },\n                // headerLeft: null,\n                // headerLeft: () => (<DrawerButton/>)\n              }}\n            />\n            <Stack.Screen\n              name=\"ItemsDetail\"\n              component={ItemsDetail}\n              options={{\n                title: \"Items Detail\",\n                headerStyle: {\n                  backgroundColor: \"#336599\",\n                },\n                headerTintColor: \"#fff\",\n                headerTitleStyle: {\n                  fontWeight: \"bold\",\n                  textAlign: \"center\",\n                  fontSize: 22,\n                },\n                // headerLeft: null,\n                // headerLeft: () => (<DrawerButton/>)\n              }}\n            />\n            <Stack.Screen\n              name=\"PutWall\"\n              component={PutWall}\n              options={{\n                headerStyle: {\n                  backgroundColor: \"#336599\",\n                },\n                headerTintColor: \"#fff\",\n                headerTitleStyle: {\n                  fontWeight: \"bold\",\n                  textAlign: \"center\",\n                  fontSize: 22,\n                },\n                // headerLeft: null,\n                // headerLeft: () => (<DrawerButton/>)\n              }}\n            />\n            <Stack.Screen\n              name=\"Select Product to add to Order\"\n              component={AddItemToOrder}\n              options={{\n                headerStyle: {\n                  backgroundColor: \"#336599\",\n                },\n                headerTintColor: \"#fff\",\n                headerTitleStyle: {\n                  fontWeight: \"bold\",\n                  textAlign: \"center\",\n                  fontSize: 22,\n                },\n                // headerLeft: null,\n                // headerLeft: () => (<DrawerButton/>)\n              }}\n            />\n          </Stack.Navigator>\n        </NavigationContainer>\n        {openDrawer && <Drawer closeDrawer={closeDrawer} />}\n      </React.Fragment>\n    )\n  );\n}\n\n// const mapStateToProps = (state) => {\n//   return {\n//     userInfo: state.user.userInfo\n//   }\n// };\n\n// const mapDispatchToProps = {\n//   Login,\n//   UserInfo\n// };\n"]},"metadata":{},"sourceType":"module"}
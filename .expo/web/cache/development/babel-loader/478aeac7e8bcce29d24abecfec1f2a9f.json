{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL PC\\\\Downloads\\\\GroovePacker\\\\src\\\\components\\\\scanpack\\\\alert.js\";\nimport React, { useEffect, useRef } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport styles from \"../../style/scanpack\";\nimport globalStyles from \"../../style/global\";\nimport { fontFamily } from \"../../helpers/fontFamily\";\nimport { LinearGradient } from 'expo-linear-gradient';\nexport default function Alert(props) {\n  var addNoteFocus = useRef(null);\n  useEffect(function () {\n    addNoteFocus.current.focus();\n  });\n  return React.createElement(View, {\n    style: styles.typeScanContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, React.createElement(LinearGradient, {\n    locations: [0, 0.13, 1],\n    colors: [\"#000000\", \"#fdf359\", \"#d2c609\"],\n    style: [styles.typeScanBox, {\n      backgroundColor: \"#d3dfea\",\n      paddingHorizontal: 10,\n      paddingVertical: 5,\n      width: '70%'\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: ([globalStyles.flexDirectionRow], {\n      marginTop: 10\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: [styles.scanCountText, {\n      fontFamily: fontFamily.font400,\n      fontSize: 20\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 11\n    }\n  }, \"Add Notes\")), React.createElement(View, {\n    style: {\n      display: \"flex\",\n      alignItems: \"center\",\n      flexDirection: 'row',\n      justifyContent: \"space-between\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, React.createElement(TextInput, {\n    value: props.notes_fromPacker,\n    onChangeText: props.noteUpdate,\n    autoFocus: true,\n    onSubmitEditing: props.notes_fromPacker !== \"\" ? props.submitAlert : \"\",\n    ref: addNoteFocus,\n    multiline: true,\n    blurOnSubmit: true,\n    numberOfLines: 3,\n    style: [styles.typeScanCountInput, {\n      backgroundColor: \"#f2e730\",\n      outline: \"none\",\n      width: \"60%\",\n      color: \"#000\",\n      fontFamily: fontFamily.font500,\n      fontSize: 18\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }\n  }), React.createElement(TouchableOpacity, {\n    onPress: props.closeAlert,\n    style: [styles.scanCountSubmitBtnBox, {\n      marginTop: 20\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: [styles.scanCountSubmitBtn, {\n      fontFamily: fontFamily.font400\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, \"Cancel\")))));\n}","map":{"version":3,"sources":["C:/Users/DELL PC/Downloads/GroovePacker/src/components/scanpack/alert.js"],"names":["React","useEffect","useRef","styles","globalStyles","fontFamily","LinearGradient","Alert","props","addNoteFocus","current","focus","typeScanContainer","typeScanBox","backgroundColor","paddingHorizontal","paddingVertical","width","flexDirectionRow","marginTop","scanCountText","font400","fontSize","display","alignItems","flexDirection","justifyContent","notes_fromPacker","noteUpdate","submitAlert","typeScanCountInput","outline","color","font500","closeAlert","scanCountSubmitBtnBox","scanCountSubmitBtn"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport { View, Text, TextInput, TouchableOpacity } from 'react-native';\nimport styles from '../../style/scanpack';\nimport globalStyles from '../../style/global';\nimport { fontFamily } from '../../helpers/fontFamily';\nimport { LinearGradient } from 'expo-linear-gradient';\n\nexport default function Alert(props) {\n  const addNoteFocus = useRef(null)\n\n  useEffect(() => {\n    addNoteFocus.current.focus()\n  })\n  return (\n    <View style={styles.typeScanContainer}>\n      <LinearGradient\n        locations={[0, 0.13, 1]}\n        colors={[\"#000000\", \"#fdf359\", \"#d2c609\"]}\n        style={[styles.typeScanBox, { backgroundColor: \"#d3dfea\", paddingHorizontal: 10, paddingVertical: 5, width: '70%' }]}>\n        <View style={[globalStyles.flexDirectionRow], { marginTop: 10 }}>\n          <Text style={[styles.scanCountText, { fontFamily: fontFamily.font400, fontSize: 20 }]}>\n            Add Notes\n          </Text>\n        </View>\n        <View style={{ display: \"flex\", alignItems: \"center\", flexDirection: 'row', justifyContent:\"space-between\" }}>\n          <TextInput\n            value={props.notes_fromPacker}\n            onChangeText={props.noteUpdate}\n            autoFocus={true}\n            onSubmitEditing={props.notes_fromPacker !== \"\" ? props.submitAlert : \"\"}\n            ref={addNoteFocus}\n            multiline={true}\n            blurOnSubmit={true}\n            numberOfLines={3}\n            style={[styles.typeScanCountInput, { backgroundColor: \"#f2e730\", outline: \"none\", width: \"60%\", color: \"#000\", fontFamily: fontFamily.font500, fontSize: 18 }]}>\n          </TextInput>\n          <TouchableOpacity onPress={props.closeAlert}\n            style={[styles.scanCountSubmitBtnBox, { marginTop: 20 }]}\n          >\n            <Text style={[styles.scanCountSubmitBtn, { fontFamily: fontFamily.font400 }]}>\n              Cancel\n            </Text>\n          </TouchableOpacity>\n          {/*<TouchableOpacity onPress={this.props.serialRecordInput !== \"\" ? this.props.serialRecordFun :  \"\"}\n                            style={styles.scanCountSubmitBtnBox}\n                            >\n            <Text style={styles.scanCountSubmitBtn}>\n              Submit\n            </Text>\n          </TouchableOpacity>*/}\n        </View>\n      </LinearGradient>\n    </View>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport axios from 'axios';\nimport AsyncStorage from \"react-native-web/dist/exports/AsyncStorage\";\nimport { SET_ITEM_SUCCESS, GET_ITEM_SUCCESS, GET_ITEM_FAIL } from \"../constants\";\nexport function SetItem(key, value) {\n  return function _callee(dispatch) {\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem(key, value).then(dispatch({\n              type: SET_ITEM_SUCCESS,\n              payload: true\n            })));\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n}\nexport function GetItem(key) {\n  return function _callee2(dispatch) {\n    return _regeneratorRuntime.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(key).then(function (res) {\n              if (res !== null) {\n                dispatch({\n                  type: GET_ITEM_SUCCESS,\n                  payload: res,\n                  time: new Date()\n                });\n              } else {\n                dispatch({\n                  type: GET_ITEM_FAIL,\n                  payload: false\n                });\n              }\n            }));\n\n          case 2:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n}","map":{"version":3,"sources":["C:/Users/DELL PC/Downloads/GroovePacker/src/actions/updateAsyncAction.js"],"names":["axios","SET_ITEM_SUCCESS","GET_ITEM_SUCCESS","GET_ITEM_FAIL","SetItem","key","value","dispatch","AsyncStorage","setItem","then","type","payload","GetItem","getItem","res","time","Date"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,SAASC,gBAAT,EAA4BC,gBAA5B,EAA+CC,aAA/C;AAEA,OAAO,SAASC,OAAT,CAAiBC,GAAjB,EAAuBC,KAAvB,EAA8B;AACnC,SAAO,iBAAMC,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACCC,YAAY,CAACC,OAAb,CAAqBJ,GAArB,EAA2BC,KAA3B,EACLI,IADK,CAEFH,QAAQ,CAAC;AACDI,cAAAA,IAAI,EAAEV,gBADL;AAEDW,cAAAA,OAAO,EAAE;AAFR,aAAD,CAFN,CADD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAP;AASD;AAED,OAAO,SAASC,OAAT,CAAiBR,GAAjB,EAAsB;AAC3B,SAAO,kBAAME,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACCC,YAAY,CAACM,OAAb,CAAqBT,GAArB,EACLK,IADK,CACA,UAACK,GAAD,EAAS;AACb,kBAAGA,GAAG,KAAK,IAAX,EAAgB;AACdR,gBAAAA,QAAQ,CAAC;AACCI,kBAAAA,IAAI,EAAET,gBADP;AAECU,kBAAAA,OAAO,EAAEG,GAFV;AAGCC,kBAAAA,IAAI,EAAE,IAAIC,IAAJ;AAHP,iBAAD,CAAR;AAKD,eAND,MAMK;AACHV,gBAAAA,QAAQ,CAAC;AACCI,kBAAAA,IAAI,EAAER,aADP;AAECS,kBAAAA,OAAO,EAAE;AAFV,iBAAD,CAAR;AAID;AACF,aAdK,CADD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAP;AAiBD","sourcesContent":["import axios from 'axios';\nimport { AsyncStorage } from 'react-native';\nimport { SET_ITEM_SUCCESS , GET_ITEM_SUCCESS , GET_ITEM_FAIL } from '../constants';\n\nexport function SetItem(key , value) {\n  return async(dispatch) => {\n    await AsyncStorage.setItem(key , value)\n    .then(\n        dispatch({\n                type: SET_ITEM_SUCCESS,\n                payload: true\n              })\n      )\n  }\n}\n\nexport function GetItem(key) {\n  return async(dispatch) => {\n    await AsyncStorage.getItem(key)\n    .then((res) => {\n      if(res !== null){\n        dispatch({\n                  type: GET_ITEM_SUCCESS,\n                  payload: res,\n                  time: new Date()\n                })\n      }else{\n        dispatch({\n                  type: GET_ITEM_FAIL,\n                  payload: false\n                })\n      }\n    })\n  }\n}\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\DELL PC\\\\Downloads\\\\GroovePacker\\\\src\\\\components\\\\products\\\\product_detail.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { connect } from 'react-redux';\nimport { GetProductDetail, UpdateProductInfo, updateProductList, updateProductAlias } from \"../../actions/productAction\";\nimport { SearchScanpackOrder } from \"../../actions/scanpackAction\";\nimport { SetItem } from \"../../actions/updateAsyncAction\";\nimport ProductInfo from \"./product_info\";\nimport ScanpackOptions from \"./scanpack_options\";\nimport InventoryKitOptions from \"./inventory_kit_options\";\nimport ProductActivityLog from \"./product_activity_log\";\nimport PopUpModel from \"../scanpack/pop_up_model\";\nimport globalStyles from \"../../style/global\";\nimport styles from \"../../style/scanpack\";\nimport cross from \"../../../assets/close_black.png\";\nimport shared_barcode from \"../../../assets/shared_barcode.png\";\nimport ProductAlias from \"../Alias/productAlias\";\nvar updateProductInfoSuccess = false;\nvar searchOrderSuccess = false;\nvar orderID = 0;\nvar buttonClick = false;\nvar aliasValid = false;\nvar saveClose = false;\nvar updateProductAliasFlag = false;\nvar updateProductSkuValue = false;\n\nvar ProductDetail = function (_Component) {\n  _inherits(ProductDetail, _Component);\n\n  var _super = _createSuper(ProductDetail);\n\n  function ProductDetail(props) {\n    var _this;\n\n    _classCallCheck(this, ProductDetail);\n\n    _this = _super.call(this, props);\n\n    _this.alertBox = function (message, skip, messageTypeSuccess) {\n      if (messageTypeSuccess === true) {\n        _this.setState({\n          popUpModelShow: true,\n          message: message,\n          messageTypeSuccess: true\n        });\n      } else {\n        _this.setState({\n          popUpModelShow: true,\n          message: message\n        });\n      }\n\n      setTimeout(function () {\n        this.setState({\n          popUpModelShow: false,\n          message: \"\",\n          messageTypeSuccess: false\n        });\n      }.bind(_assertThisInitialized(_this)), 4000);\n    };\n\n    _this.closeAlert = function () {\n      _this.setState({\n        popUpModelShow: false,\n        message: \"\"\n      });\n    };\n\n    _this.apiCall = function (title) {\n      _this.setState({\n        loading: true,\n        loaderTitle: title\n      });\n\n      var id = _this.props.route && _this.props.route.params && _this.props.route.params.productInfo;\n      orderID = _this.props.route && _this.props.route.params && _this.props.route.params.orderID;\n\n      if (id) {\n        _this.props.GetProductDetail(id);\n      }\n    };\n\n    _this.changeState = function (state) {\n      if (state === \"productInfoActive\") {\n        _this.setState({\n          productInfoActive: true,\n          scanPackOptionsActive: false,\n          inventoryKitOptionsActive: false,\n          productActivityLogActive: false\n        });\n      }\n\n      if (state === \"scanPackOptionsActive\") {\n        _this.setState({\n          productInfoActive: false,\n          scanPackOptionsActive: true,\n          inventoryKitOptionsActive: false,\n          productActivityLogActive: false\n        });\n      }\n\n      if (state === \"inventoryKitOptionsActive\") {\n        _this.setState({\n          productInfoActive: false,\n          scanPackOptionsActive: false,\n          inventoryKitOptionsActive: true,\n          productActivityLogActive: false\n        });\n      }\n\n      if (state === \"productActivityLogActive\") {\n        _this.setState({\n          productInfoActive: false,\n          scanPackOptionsActive: false,\n          inventoryKitOptionsActive: false,\n          productActivityLogActive: true\n        });\n      }\n    };\n\n    _this.multiBarcode = function (value, name, index) {\n      var basicinfo = _this.state.Product.basicinfo;\n      var Product = _this.state.Product;\n\n      if (name === \"is_skippable\") {\n        basicinfo[name] = value;\n      }\n\n      if (name === \"barcode\" || name === \"packing_count\") {\n        if (name === \"barcode\") {\n          Product.barcodes[index].barcode = value;\n        }\n\n        if (name === \"packing_count\") {\n          Product.barcodes[index].packing_count = value;\n        }\n      }\n\n      _this.setState({\n        Product: Product\n      });\n    };\n\n    _this.productInfoHandleChange = function (value, name) {\n      var Product = _this.state.Product;\n      var basicinfo = Product && Product.basicinfo;\n\n      if (basicinfo) {\n        basicinfo[name] = value;\n      }\n\n      _this.setState({\n        Product: Product\n      });\n    };\n\n    _this.addMultiBarcode = function () {\n      var Product = _this.props.product.barcodes;\n      var newHash = {\n        id: \"TEMP\",\n        barcode: \"\",\n        packing_count: \"1\",\n        product_id: _this.props.product.basicinfo.id\n      };\n      Product.push(newHash);\n\n      _this.setState({\n        Product: Product\n      });\n    };\n\n    _this.updateProductSBC = function (details, type, remove) {\n      var data = _this.state.Product;\n\n      if (type === \"barcode\") {\n        data.barcodes = details;\n\n        _this.updateProduct(\"barcode\");\n      }\n\n      if (type === \"sku\") {\n        data.skus = details;\n\n        _this.updateProduct(\"sku\");\n      }\n\n      if (type === \"cats\") {\n        data.cats = details;\n\n        _this.updateProduct(\"cats\");\n      }\n\n      _this.setState({\n        data: data\n      });\n    };\n\n    _this.inventoryWarehousesHandleChange = function (value, name) {\n      var Product = _this.state.Product.inventory_warehouses[0].info;\n      Product[name] = value;\n\n      _this.setState({\n        Product: Product\n      });\n    };\n\n    _this.updateProduct = function (from) {\n      _this.setState({\n        loading: true,\n        loaderTitle: \"Saving Changes...\"\n      }, function () {\n        console.log(\"loading\", _this.state.loading);\n      });\n\n      var Product = _this.state.Product;\n\n      if (Product) {\n        var id = Product.basicinfo && Product.basicinfo.id;\n\n        if (id) {\n          Product[\"app\"] = \"app\";\n          var data = Product;\n\n          if (from === \"save&close\") {\n            Product.barcodes.length > 0 && Product.barcodes.map(function (bar) {\n              if (bar.id === \"TEMP\") {\n                bar[\"skip_check\"] = true;\n              }\n            });\n            Product.skus.length > 0 && Product.skus.map(function (sku) {\n              if (sku.id === \"TEMP\") {\n                sku[\"skip_check\"] = true;\n              }\n            });\n            Product.cats.length > 0 && Product.cats.map(function (cat) {\n              if (cat.id === \"TEMP\") {\n                cat[\"skip_check\"] = true;\n              }\n            });\n          }\n\n          _this.props.UpdateProductInfo(id, Product);\n\n          if (from === \"barcode\") {\n            setTimeout(function () {\n              return _this.setState({\n                loading: false,\n                from: \"barcode\",\n                updateProductApiCall: new Date()\n              });\n            }, 300);\n            updateProductInfoSuccess = false;\n            aliasValid = true;\n          } else {\n            updateProductInfoSuccess = true;\n          }\n\n          if (from === 'save&close') {\n            saveClose = true;\n\n            _this.setState({\n              updateProductApiCall: new Date()\n            });\n          } else {\n            saveClose = false;\n          }\n\n          buttonClick = true;\n        }\n\n        _this.setState({\n          updateProductApiCall: new Date()\n        });\n      }\n    };\n\n    _this.proceedAliasing = function () {\n      var alias_product_data_id = _this.props.updateProduct.data.alias_product_data.id;\n      var current_product_data_id = [];\n      current_product_data_id.push(_this.props.updateProduct.data.current_product_data.id);\n      var details = {\n        product_alias_ids: current_product_data_id\n      };\n\n      _this.props.updateProductAlias(alias_product_data_id, details);\n\n      updateProductInfoSuccess = true;\n      updateProductAliasFlag = true;\n    };\n\n    _this.assignUniquebarcode = function () {\n      var data = _this.state.data;\n      var lastItem = data.length;\n      var removefromLocal = \"\";\n      data && data.barcodes.length > 0 && data.barcodes.map(function (barcode) {\n        if (barcode.id === \"TEMP\") {\n          data.barcodes.pop();\n          removefromLocal = barcode.barcode;\n        }\n      });\n\n      _this.setState({\n        data: data,\n        shareBarcodeShow: false,\n        alias: false,\n        updateBarcodeLocal: true,\n        removefromLocal: removefromLocal\n      });\n    };\n\n    _this.sameBarcode = function () {\n      var data = _this.state.Product;\n      var lastItem = data.barcodes.length > 0 && data.barcodes.length - 1;\n      var id = data.basicinfo.id;\n      data && data.barcodes.length > 0 && data.barcodes.map(function (barcode, index) {\n        if (index === lastItem) {\n          barcode[\"permit_same_barcode\"] = true;\n        }\n      });\n\n      _this.props.UpdateProductInfo(id, data);\n\n      _this.setState({\n        data: data,\n        shareBarcodeShow: false,\n        alias: false\n      });\n    };\n\n    _this.state = {\n      productInfoActive: true,\n      scanPackOptionsActive: false,\n      inventoryKitOptionsActive: false,\n      productActivityLogActive: false,\n      Product: [],\n      loading: false,\n      alias: false,\n      shareBarcodeShow: false,\n      updateBarcodeLocal: false,\n      removefromLocal: \"\",\n      loadingText: \"Loading\",\n      from: \"\",\n      pickerSelectedOptions: [{\n        label: \"On\",\n        value: \"on\"\n      }, {\n        label: \"Off\",\n        value: \"off\"\n      }, {\n        label: \"On with confirmation\",\n        value: \"on_with_confirmation\"\n      }],\n      localBarcodes: [],\n      popUpModelShow: false\n    };\n    return _this;\n  }\n\n  _createClass(ProductDetail, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.SearchScanpackOrder(\"\", false);\n      this.apiCall(\"Loading...\");\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      var _this2 = this;\n\n      if (this.props && this.props.product && this.state.Product !== this.props.product && this.state.Product.show_alias_popup !== true) {\n        this.setState({\n          Product: this.props.product,\n          loading: false,\n          localBarcodes: this.props.product.barcodes\n        });\n      }\n\n      if (aliasValid && this.props && this.props.updateProduct && this.props.updateProduct.data && this.props.updateProduct.data.show_alias_popup && this.props.updateProduct.time > this.state.updateProductApiCall) {\n        setTimeout(function () {\n          return _this2.setState({\n            alias: true,\n            Product: _this2.props.updateProduct,\n            loading: false\n          });\n        }, 500);\n        aliasValid = false;\n      }\n\n      if (this.props && this.props.updateProduct && this.props.updateProduct.data && this.props.updateProduct.data.scan_pack_product && this.props.updateProduct.time > this.state.updateProductApiCall) {\n        if (saveClose === true) {\n          this.props.navigation.navigate(\"ScanPackItem\", {\n            data: {\n              from: \"productDetailPage\",\n              time: new Date(),\n              increment_id: this.props.route.params.increment_id\n            }\n          });\n        } else {\n          if (this.props.updateProduct.data.show_alias_popup !== true) {\n            if (this.props.updateProduct.data.status === false) {\n              this.setState({\n                Product: this.props.updateProduct.data.scan_pack_product,\n                popUpModelShow: true,\n                updateProductApiCall: this.props.updateProduct.time,\n                loading: false\n              });\n              this.alertBox(this.props.updateProduct.data.message, true, false);\n            } else {\n              this.setState({\n                Product: this.props.updateProduct.data.scan_pack_product,\n                updateProductApiCall: this.props.updateProduct.time,\n                loading: false\n              });\n            }\n\n            this.apiCall(\"Title\");\n            updateProductInfoSuccess = false;\n          }\n        }\n      }\n\n      if (updateProductAliasFlag && this.props && this.props.updateProductAliasSuccess) {\n        if (this.props.updateProductAliasSuccess.status) {\n          this.setState({\n            loading: false,\n            alias: false,\n            Product: this.props.product\n          });\n          this.props.navigation.navigate(\"ScanPackItem\", {\n            data: {\n              from: \"productDetailPage\",\n              time: new Date(),\n              increment_id: this.props.route.params.increment_id\n            }\n          });\n          updateProductAliasFlag = false;\n        }\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.setState({\n        data: {},\n        Product: {}\n      });\n      this.props.GetProductDetail(0);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var Product = this.state && this.props.product;\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: globalStyles.flex1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 12\n        }\n      }, this.state.loading && React.createElement(View, {\n        style: styles.activityContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 19\n        }\n      }, React.createElement(ActivityIndicator, {\n        size: \"large\",\n        color: \"#fff\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 21\n        }\n      }), React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: {\n          textAlign: \"center\",\n          color: \"#fff\",\n          fontSize: 16\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 23\n        }\n      }, this.state.loaderTitle))), this.state.popUpModelShow && React.createElement(PopUpModel, {\n        closeAlert: this.closeAlert.bind(this),\n        message: this.state.message,\n        messageTypeSuccess: this.state.messageTypeSuccess ? true : false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 19\n        }\n      }), React.createElement(ProductAlias, {\n        alias: this.state.alias,\n        Product: this.state.Product,\n        updateProduct: this.props.updateProduct && this.props.updateProduct.data,\n        assignUniquebarcode: function assignUniquebarcode() {\n          return _this3.assignUniquebarcode();\n        },\n        shareBarcodeMethod: function shareBarcodeMethod() {\n          _this3.setState({\n            shareBarcodeShow: true,\n            alias: false\n          });\n        },\n        proceedAliasing: function proceedAliasing() {\n          return _this3.proceedAliasing();\n        },\n        shareBarcodeShow: this.state.shareBarcodeShow,\n        sameBarcode: function sameBarcode() {\n          return _this3.sameBarcode();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 15\n        }\n      }), this.props && Product && this.state.Product !== [] && React.createElement(View, {\n        style: globalStyles.flex1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 19\n        }\n      }, React.createElement(View, {\n        style: {\n          flexDirection: \"row\",\n          margin: 10,\n          borderWidth: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 21\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: this.changeState.bind(this, \"productInfoActive\"),\n        style: [globalStyles.flex2, {\n          backgroundColor: this.state.productInfoActive ? \"white\" : \"rgb(51, 101, 153)\",\n          justifyContent: \"center\"\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 23\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: this.state.productInfoActive ? \"black\" : \"white\",\n          padding: 10,\n          textAlign: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 25\n        }\n      }, \"Product Info\")), React.createElement(TouchableOpacity, {\n        onPress: this.changeState.bind(this, \"scanPackOptionsActive\"),\n        style: {\n          flex: 2,\n          backgroundColor: this.state.scanPackOptionsActive ? \"white\" : \"rgb(51, 101, 153)\",\n          justifyContent: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 23\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: this.state.scanPackOptionsActive ? \"black\" : \"white\",\n          padding: 10,\n          textAlign: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 25\n        }\n      }, \"Scan & Pack Options\")), React.createElement(TouchableOpacity, {\n        onPress: this.changeState.bind(this, \"inventoryKitOptionsActive\"),\n        style: {\n          flex: 2,\n          backgroundColor: this.state.inventoryKitOptionsActive ? \"white\" : \"rgb(51, 101, 153)\",\n          justifyContent: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 23\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: this.state.inventoryKitOptionsActive ? \"black\" : \"white\",\n          padding: 10,\n          textAlign: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 25\n        }\n      }, \"Inventory/Kit Options\")), React.createElement(TouchableOpacity, {\n        onPress: this.changeState.bind(this, \"productActivityLogActive\"),\n        style: {\n          flex: 2,\n          backgroundColor: this.state.productActivityLogActive ? \"white\" : \"rgb(51, 101, 153)\",\n          justifyContent: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 23\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: this.state.productActivityLogActive ? \"black\" : \"white\",\n          padding: 10,\n          textAlign: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 25\n        }\n      }, \"Product Activity Log\"))), React.createElement(View, {\n        style: {\n          flexDirection: \"row\",\n          alignSelf: \"flex-end\",\n          marginRight: 10,\n          marginLeft: 10,\n          padding: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 21\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return _this3.updateProduct(\"save&close\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 23\n        }\n      }, React.createElement(Text, {\n        style: {\n          padding: 10,\n          backgroundColor: \"rgb(51, 101, 153)\",\n          color: \"#fff\",\n          fontWeight: \"bold\",\n          borderRadius: 20,\n          marginRight: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 90\n        }\n      }, \"Save & Close\")), React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return _this3.props.navigation.goBack();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 23\n        }\n      }, React.createElement(Text, {\n        style: {\n          padding: 10,\n          backgroundColor: \"rgb(73, 72, 72)\",\n          color: \"#fff\",\n          fontWeight: \"bold\",\n          borderRadius: 20\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 88\n        }\n      }, \"Close \"))), this.state.productInfoActive && React.createElement(ProductInfo, _extends({\n        basicinfo: Product.basicinfo,\n        images: Product.images,\n        navigation: this.props.navigation,\n        productInfoHandleChange: function productInfoHandleChange(value, name) {\n          return _this3.productInfoHandleChange(value, name);\n        },\n        updateProductSBC: function updateProductSBC(details, type, remove) {\n          return _this3.updateProductSBC(details, type, remove);\n        },\n        updateProduct: function updateProduct() {\n          return _this3.updateProduct();\n        },\n        updateBarcodeLocal: this.state.updateBarcodeLocal,\n        removefromLocal: this.state.removefromLocal,\n        updateLocalBarcode: function updateLocalBarcode() {\n          return _this3.setState({\n            removefromLocal: \"\"\n          });\n        },\n        updatedProduct: this.state.Product\n      }, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 25\n        }\n      })), this.state.scanPackOptionsActive && React.createElement(ScanpackOptions, {\n        barcodes: Product.barcodes,\n        basicinfo: Product.basicinfo,\n        productInfoHandleChange: function productInfoHandleChange(value, name) {\n          return _this3.productInfoHandleChange(value, name);\n        },\n        multiBarcode: function multiBarcode(value, name, index) {\n          return _this3.multiBarcode(value, name, index);\n        },\n        navigation: this.props.navigation,\n        updateProductSBC: function updateProductSBC(details, type, remove) {\n          return _this3.updateProductSBC(details, type, remove);\n        },\n        addMultiBarcode: function addMultiBarcode() {\n          return _this3.addMultiBarcode();\n        },\n        pickerSelectedOptions: this.state.pickerSelectedOptions,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 25\n        }\n      }), this.state.inventoryKitOptionsActive && React.createElement(InventoryKitOptions, {\n        inventoryWarehouses: Product.inventory_warehouses,\n        navigation: this.props.navigation,\n        inventoryWarehousesHandleChange: function inventoryWarehousesHandleChange(value, name) {\n          return _this3.inventoryWarehousesHandleChange(value, name);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 415,\n          columnNumber: 25\n        }\n      }), this.state.productActivityLogActive && React.createElement(ProductActivityLog, {\n        activities: Product.activities,\n        navigation: this.props.navigation,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 25\n        }\n      }), React.createElement(View, {\n        style: {\n          flexDirection: \"row\",\n          alignSelf: \"flex-end\",\n          marginRight: 10,\n          marginLeft: 10,\n          padding: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 426,\n          columnNumber: 21\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return _this3.updateProduct(\"save&close\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 23\n        }\n      }, React.createElement(Text, {\n        style: {\n          padding: 10,\n          backgroundColor: \"rgb(51, 101, 153)\",\n          color: \"#fff\",\n          fontWeight: \"bold\",\n          borderRadius: 20,\n          marginRight: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 90\n        }\n      }, \"Save & Close\")), React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return _this3.props.navigation.goBack();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 23\n        }\n      }, React.createElement(Text, {\n        style: {\n          padding: 10,\n          backgroundColor: \"rgb(73, 72, 72)\",\n          color: \"#fff\",\n          fontWeight: \"bold\",\n          borderRadius: 20\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 88\n        }\n      }, \"Close \"))))));\n    }\n  }]);\n\n  return ProductDetail;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    product: state.product.product,\n    updateProduct: state.product.updateProduct,\n    searchOrder: state.scanpack,\n    updateProductAliasSuccess: state.product.updateProductAlias,\n    updateProductListData: state.product.updateProductList\n  };\n};\n\nvar mapDispatchToProps = {\n  GetProductDetail: GetProductDetail,\n  UpdateProductInfo: UpdateProductInfo,\n  SetItem: SetItem,\n  SearchScanpackOrder: SearchScanpackOrder,\n  updateProductAlias: updateProductAlias,\n  updateProductList: updateProductList\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductDetail);","map":{"version":3,"sources":["C:/Users/DELL PC/Downloads/GroovePacker/src/components/products/product_detail.js"],"names":["React","Component","AsyncStorage","connect","GetProductDetail","UpdateProductInfo","updateProductList","updateProductAlias","SearchScanpackOrder","SetItem","ProductInfo","ScanpackOptions","InventoryKitOptions","ProductActivityLog","PopUpModel","globalStyles","styles","cross","shared_barcode","ProductAlias","updateProductInfoSuccess","searchOrderSuccess","orderID","buttonClick","aliasValid","saveClose","updateProductAliasFlag","updateProductSkuValue","ProductDetail","props","alertBox","message","skip","messageTypeSuccess","setState","popUpModelShow","setTimeout","bind","closeAlert","apiCall","title","loading","loaderTitle","id","route","params","productInfo","changeState","state","productInfoActive","scanPackOptionsActive","inventoryKitOptionsActive","productActivityLogActive","multiBarcode","value","name","index","basicinfo","Product","barcodes","barcode","packing_count","productInfoHandleChange","addMultiBarcode","product","newHash","product_id","push","updateProductSBC","details","type","remove","data","updateProduct","skus","cats","inventoryWarehousesHandleChange","inventory_warehouses","info","from","console","log","length","map","bar","sku","cat","updateProductApiCall","Date","proceedAliasing","alias_product_data_id","alias_product_data","current_product_data_id","current_product_data","product_alias_ids","assignUniquebarcode","lastItem","removefromLocal","pop","shareBarcodeShow","alias","updateBarcodeLocal","sameBarcode","loadingText","pickerSelectedOptions","label","localBarcodes","show_alias_popup","time","scan_pack_product","navigation","navigate","increment_id","status","updateProductAliasSuccess","flex1","activityContainer","textAlign","color","fontSize","flexDirection","margin","borderWidth","flex2","backgroundColor","justifyContent","padding","flex","alignSelf","marginRight","marginLeft","fontWeight","borderRadius","goBack","images","activities","mapStateToProps","searchOrder","scanpack","updateProductListData","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { View, Text, TextInput , ActivityIndicator , TouchableOpacity ,Image  } from 'react-native';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { connect } from 'react-redux';\nimport { GetProductDetail , UpdateProductInfo , updateProductList , updateProductAlias } from \"../../actions/productAction\";\nimport {SearchScanpackOrder} from \"../../actions/scanpackAction\";\nimport { SetItem } from \"../../actions/updateAsyncAction\";\nimport ProductInfo from \"./product_info\";\nimport ScanpackOptions from \"./scanpack_options\";\nimport InventoryKitOptions from \"./inventory_kit_options\";\nimport ProductActivityLog from \"./product_activity_log\";\nimport PopUpModel from \"../scanpack/pop_up_model\";\nimport globalStyles from '../../style/global';\nimport styles from '../../style/scanpack';\nimport cross from \"../../../assets/close_black.png\";\nimport shared_barcode from \"../../../assets/shared_barcode.png\";\nimport ProductAlias from \"../Alias/productAlias\";\nlet updateProductInfoSuccess = false\nlet searchOrderSuccess = false\nlet orderID = 0\nlet buttonClick = false\nlet aliasValid = false\nlet saveClose = false\nlet updateProductAliasFlag = false\nlet updateProductSkuValue = false\n\nclass ProductDetail extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      productInfoActive : true ,\n      scanPackOptionsActive:  false,\n      inventoryKitOptionsActive: false,\n      productActivityLogActive: false,\n      Product: [],\n      loading: false,\n      alias: false,\n      shareBarcodeShow: false,\n      updateBarcodeLocal: false,\n      removefromLocal: \"\",\n      loadingText: \"Loading\",\n      from: \"\",\n      pickerSelectedOptions:[\n        {\n          label: \"On\",\n          value: \"on\"\n        },\n        {\n          label: \"Off\",\n          value: \"off\"\n        },\n        {\n          label: \"On with confirmation\",\n          value: \"on_with_confirmation\"\n        }\n      ],\n      localBarcodes: [],\n      popUpModelShow: false\n    };\n  }\n\n  componentDidMount(){\n    this.props.SearchScanpackOrder(\"\" , false)\n    this.apiCall(\"Loading...\")\n  }\n\n\n  componentDidUpdate(){    \n    if(this.props && this.props.product && this.state.Product !== this.props.product && this.state.Product.show_alias_popup !== true){\n      this.setState({Product: this.props.product , loading: false , localBarcodes: this.props.product.barcodes })\n    \n    }\n\n    if(aliasValid \n        && this.props \n          && this.props.updateProduct && this.props.updateProduct.data \n            && this.props.updateProduct.data.show_alias_popup \n              && this.props.updateProduct.time > this.state.updateProductApiCall){\n        setTimeout( () => this.setState({alias: true , Product: this.props.updateProduct ,loading: false}) , 500);\n        aliasValid = false \n    }\n\n    if(this.props && \n        this.props.updateProduct && \n          this.props.updateProduct.data && \n            this.props.updateProduct.data.scan_pack_product && \n              this.props.updateProduct.time >  this.state.updateProductApiCall){\n      if(saveClose === true){   \n        this.props.navigation.navigate(\"ScanPackItem\" , {data: {from: \"productDetailPage\" , time: new Date() , increment_id: this.props.route.params.increment_id} } )\n      }else{\n        if(this.props.updateProduct.data.show_alias_popup !== true){\n          if(this.props.updateProduct.data.status === false){\n            this.setState({Product: this.props.updateProduct.data.scan_pack_product, popUpModelShow: true ,updateProductApiCall: this.props.updateProduct.time ,loading: false})\n            this.alertBox(this.props.updateProduct.data.message, true , false)\n          }else{\n            this.setState({Product: this.props.updateProduct.data.scan_pack_product, updateProductApiCall: this.props.updateProduct.time ,loading: false})\n          }\n          this.apiCall(\"Title\")\n          updateProductInfoSuccess = false\n        }\n      }\n    }\n    if(updateProductAliasFlag && this.props && this.props.updateProductAliasSuccess){\n      if(this.props.updateProductAliasSuccess.status){\n        this.setState({loading: false , alias: false, Product: this.props.product})\n        this.props.navigation.navigate(\"ScanPackItem\" , {data: {from: \"productDetailPage\" , time: new Date() , increment_id: this.props.route.params.increment_id} } )\n        updateProductAliasFlag = false\n      }\n    }\n\n  \n  }\n\n  alertBox = (message , skip , messageTypeSuccess) => {\n    if(messageTypeSuccess === true){\n      this.setState({popUpModelShow: true , message: message, messageTypeSuccess: true})\n    }else{\n      this.setState({popUpModelShow: true , message: message})\n    }\n    setTimeout(function(){\n      this.setState({popUpModelShow: false , message: \"\" , messageTypeSuccess: false});\n    }.bind(this),4000);\n\n  }\n\n  closeAlert = () => {\n    this.setState({ popUpModelShow: false,\n                    message: \"\"\n                  })\n  }\n\n\n  apiCall = (title) =>{\n    this.setState({loading: true , loaderTitle: title})\n    let id = this.props.route && this.props.route.params && this.props.route.params.productInfo\n    orderID = this.props.route && this.props.route.params && this.props.route.params.orderID\n    if(id){\n      this.props.GetProductDetail(id)\n    }\n  }\n\n  changeState = (state) => {\n    if(state === \"productInfoActive\"){\n      this.setState({ productInfoActive: true, scanPackOptionsActive: false, inventoryKitOptionsActive: false,\n                      productActivityLogActive: false\n                    })\n    }\n    if(state === \"scanPackOptionsActive\"){\n      this.setState({ productInfoActive: false, scanPackOptionsActive: true, inventoryKitOptionsActive: false,\n                      productActivityLogActive: false\n                    })\n    }\n    if(state === \"inventoryKitOptionsActive\"){\n      this.setState({ productInfoActive: false, scanPackOptionsActive: false, inventoryKitOptionsActive: true,\n                      productActivityLogActive: false\n                    })\n    }\n    if(state === \"productActivityLogActive\"){\n      this.setState({ productInfoActive: false, scanPackOptionsActive: false, inventoryKitOptionsActive: false,\n                      productActivityLogActive: true\n                    })\n    }\n  }\n\n  multiBarcode = (value , name , index) => {\n    let basicinfo = this.state.Product.basicinfo\n    let Product = this.state.Product\n    if(name === \"is_skippable\"){\n      basicinfo[name] = value\n    }\n    if(name === \"barcode\" || name === \"packing_count\"){\n      if(name === \"barcode\"){\n        Product.barcodes[index].barcode = value\n      }\n      if(name === \"packing_count\"){\n        Product.barcodes[index].packing_count = value \n      }\n    }\n    this.setState({Product})\n    // setTimeout(this.updateProductSBC(Product.barcodes,\"barcode\",false), 6000);\n  }\n\n  productInfoHandleChange = (value , name ) => {\n    let Product = this.state.Product\n    let basicinfo = Product && Product.basicinfo\n    if(basicinfo){\n      basicinfo[name] = value\n    }\n    this.setState({Product})\n  }\n\n  addMultiBarcode = () => {\n    let Product = this.props.product.barcodes\n    let newHash = {\n          id: \"TEMP\",\n          barcode: \"\",\n          packing_count: \"1\",\n          product_id: this.props.product.basicinfo.id,\n        }\n    Product.push(newHash)\n    this.setState({Product})\n  }\n\n  updateProductSBC = (details , type , remove) => {\n    let data = this.state.Product\n    if(type === \"barcode\"){\n      data.barcodes = details\n      // if(remove !== true){\n        // if(data.barcodes && data.barcodes.length > 0){\n          this.updateProduct(\"barcode\")\n        // }\n      // } \n    }\n    if(type === \"sku\"){\n      data.skus = details\n      // if(remove !== true){\n        // if(data.skus && data.skus.length > 0){\n          // this.updateProductSku(\"sku\")\n          this.updateProduct(\"sku\")\n        // }\n      // }\n    }\n    if(type === \"cats\"){\n      data.cats = details\n      this.updateProduct(\"cats\")\n    }\n    this.setState({data})\n  }\n\n  inventoryWarehousesHandleChange = (value , name ) => {\n    let Product = this.state.Product.inventory_warehouses[0].info\n    Product[name] = value\n    this.setState({Product})\n  }\n\n  updateProduct = (from) => {\n    this.setState({loading: true , loaderTitle: \"Saving Changes...\"} , () => {\n      console.log(\"loading\" , this.state.loading )\n    })\n    let Product = this.state.Product\n    if(Product){\n      let id = Product.basicinfo && Product.basicinfo.id\n      if(id){\n        Product[\"app\"] = \"app\"\n        let data = Product\n        if(from === \"save&close\"){\n          Product.barcodes.length > 0 && Product.barcodes.map((bar) => { \n            if(bar.id === \"TEMP\"){\n              bar[\"skip_check\"] = true\n            } \n          })\n          Product.skus.length > 0 && Product.skus.map((sku) => { \n            if(sku.id === \"TEMP\"){\n              sku[\"skip_check\"] = true\n            } \n          })\n          Product.cats.length > 0 && Product.cats.map((cat) => { \n            if(cat.id === \"TEMP\"){\n              cat[\"skip_check\"] = true\n            } \n          })\n        }\n        this.props.UpdateProductInfo(id , Product)\n        if(from === \"barcode\"){\n          setTimeout( () => this.setState({loading: false, from: \"barcode\" , updateProductApiCall: new Date()}) , 300);\n          updateProductInfoSuccess = false\n          aliasValid = true\n        }else{\n          updateProductInfoSuccess = true\n        }\n        if(from === 'save&close'){\n          saveClose = true\n          this.setState({updateProductApiCall: new Date()})\n        }else{\n          saveClose = false\n        }\n        buttonClick = true\n      }\n      this.setState({ updateProductApiCall: new Date()})\n    }\n  }\n\n\n  componentWillUnmount(){\n    this.setState({data: {} , Product: {}})\n    this.props.GetProductDetail(0)\n  }\n\n  proceedAliasing = () => {\n    let alias_product_data_id = this.props.updateProduct.data.alias_product_data.id\n    let current_product_data_id = []\n    current_product_data_id.push(this.props.updateProduct.data.current_product_data.id)\n    let details = {\n      product_alias_ids: current_product_data_id\n    }\n    this.props.updateProductAlias(alias_product_data_id , details)\n    updateProductInfoSuccess = true\n    updateProductAliasFlag = true \n  }\n\n  assignUniquebarcode = () => {\n    let data = this.state.data\n    let lastItem = data.length\n    let removefromLocal = \"\"\n    data && data.barcodes.length > 0 && data.barcodes.map((barcode) => {\n      if(barcode.id === \"TEMP\"){\n        data.barcodes.pop()\n        removefromLocal = barcode.barcode\n      }\n    })\n    this.setState({data , shareBarcodeShow: false, alias: false,  updateBarcodeLocal: true , removefromLocal})\n  }\n\n  sameBarcode = () => {\n    let data = this.state.Product\n    let lastItem = data.barcodes.length > 0 && data.barcodes.length - 1\n    let id = data.basicinfo.id\n    data && data.barcodes.length > 0 && data.barcodes.map((barcode,index) => {\n      if(index === lastItem){\n        barcode[\"permit_same_barcode\"] = true\n      }\n    })\n    this.props.UpdateProductInfo(id , data)\n    this.setState({data , shareBarcodeShow: false, alias: false})\n  }\n\n  render() {\n    let Product = this.state && this.props.product\n    return (\n      <React.Fragment>\n        {\n           <View style={globalStyles.flex1}>\n              { \n                this.state.loading &&\n                  <View style={styles.activityContainer}>  \n                    <ActivityIndicator size=\"large\"  color=\"#fff\" />\n                    <View>\n                      <Text style={{textAlign: \"center\" , color: \"#fff\" , fontSize: 16}}>{this.state.loaderTitle}</Text>\n                    </View>\n                  </View>\n              }  \n              { // Notification Pop Up for messages\n                this.state.popUpModelShow &&\n                  <PopUpModel closeAlert={this.closeAlert.bind(this)}\n                              message={this.state.message}\n                              messageTypeSuccess={this.state.messageTypeSuccess ? true : false}\n                              />\n              }\n              <ProductAlias alias={this.state.alias}\n                            Product={this.state.Product}\n                            updateProduct={this.props.updateProduct && this.props.updateProduct.data}\n                            assignUniquebarcode={() => this.assignUniquebarcode()}\n                            shareBarcodeMethod={() => {this.setState({shareBarcodeShow: true , alias: false}) }} \n                            proceedAliasing={() => this.proceedAliasing()}\n                            shareBarcodeShow={this.state.shareBarcodeShow}\n                            sameBarcode={() => this.sameBarcode()}/>\n              {\n                this.props && Product && this.state.Product !== [] &&\n                  <View style={globalStyles.flex1}>\n                    <View style={{flexDirection: \"row\" , margin: 10 , borderWidth: 1 }}>\n                      <TouchableOpacity onPress={this.changeState.bind(this , \"productInfoActive\")} style={[globalStyles.flex2 , {backgroundColor: this.state.productInfoActive ? \"white\" : \"rgb(51, 101, 153)\" , justifyContent: \"center\"}]}>\n                        <Text style={{color: this.state.productInfoActive ? \"black\" : \"white\" , padding: 10 , textAlign: \"center\"}}>\n                          Product Info\n                        </Text>\n                      </TouchableOpacity>\n                      <TouchableOpacity onPress={this.changeState.bind(this , \"scanPackOptionsActive\")} style={{flex:2 , backgroundColor: this.state.scanPackOptionsActive ? \"white\" : \"rgb(51, 101, 153)\" , justifyContent: \"center\"}}>\n                        <Text style={{ color: this.state.scanPackOptionsActive ? \"black\" : \"white\" , padding: 10 , textAlign: \"center\"}}>\n                          Scan & Pack Options\n                        </Text>\n                      </TouchableOpacity>\n                      <TouchableOpacity onPress={this.changeState.bind(this , \"inventoryKitOptionsActive\")} style={{flex:2 , backgroundColor: this.state.inventoryKitOptionsActive ? \"white\" : \"rgb(51, 101, 153)\" , justifyContent: \"center\"}}>\n                        <Text style={{color: this.state.inventoryKitOptionsActive ? \"black\" : \"white\" , padding: 10 , textAlign: \"center\"}}>\n                          Inventory/Kit Options\n                        </Text>\n                      </TouchableOpacity>\n                      <TouchableOpacity onPress={this.changeState.bind(this , \"productActivityLogActive\")} style={{flex:2 , backgroundColor: this.state.productActivityLogActive ? \"white\" : \"rgb(51, 101, 153)\" , justifyContent: \"center\"}}>\n                        <Text style={{color: this.state.productActivityLogActive ? \"black\" : \"white\" , padding: 10 , textAlign: \"center\"}}>\n                          Product Activity Log\n                        </Text>\n                      </TouchableOpacity>\n                    </View>\n                    <View style={{flexDirection: \"row\", alignSelf: \"flex-end\" , marginRight: 10 , marginLeft: 10 , padding: 10}}>\n                      <TouchableOpacity onPress={() => this.updateProduct(\"save&close\")}><Text style={{padding: 10 , backgroundColor: \"rgb(51, 101, 153)\" , color: \"#fff\" , fontWeight: \"bold\" , borderRadius: 20 , marginRight: 10 }}>Save & Close</Text></TouchableOpacity>\n                      <TouchableOpacity onPress={() => this.props.navigation.goBack()}><Text style={{padding: 10 , backgroundColor: \"rgb(73, 72, 72)\" , color: \"#fff\" , fontWeight: \"bold\" , borderRadius: 20 }}>Close </Text></TouchableOpacity>\n                    </View>\n                    {\n                      this.state.productInfoActive &&\n                        <ProductInfo basicinfo={Product.basicinfo}\n                                     images={Product.images}\n                                     navigation={this.props.navigation}\n                                     productInfoHandleChange={(value , name) => this.productInfoHandleChange(value , name)}\n                                     updateProductSBC ={(details , type , remove) => this.updateProductSBC(details, type, remove)}\n                                     updateProduct={() => this.updateProduct() }\n                                     updateBarcodeLocal={this.state.updateBarcodeLocal}\n                                     removefromLocal={this.state.removefromLocal}\n                                     updateLocalBarcode={() => this.setState({removefromLocal: \"\"})}\n                                     updatedProduct={this.state.Product}\n                                     {...this.props}\n                                     />\n                    }\n                    {\n                      this.state.scanPackOptionsActive &&\n                        <ScanpackOptions barcodes={Product.barcodes}\n                                         basicinfo={Product.basicinfo}\n                                         productInfoHandleChange={(value , name) => this.productInfoHandleChange(value , name)}\n                                         multiBarcode={(value , name , index) => this.multiBarcode(value , name , index)}\n                                         navigation={this.props.navigation}\n                                         updateProductSBC ={(details , type , remove) => this.updateProductSBC(details, type, remove)}\n                                         addMultiBarcode={() => this.addMultiBarcode()}\n                                         pickerSelectedOptions={this.state.pickerSelectedOptions}\n                                         />\n                    }\n                    {\n                      this.state.inventoryKitOptionsActive &&\n                        <InventoryKitOptions inventoryWarehouses={Product.inventory_warehouses}\n                                             navigation={this.props.navigation}\n                                             inventoryWarehousesHandleChange={(value , name) => this.inventoryWarehousesHandleChange(value , name)}\n                                             />\n                    }\n                    {\n                      this.state.productActivityLogActive &&\n                        <ProductActivityLog activities={Product.activities}\n                                            navigation={this.props.navigation}\n                                            />\n                    }\n                    <View style={{flexDirection: \"row\", alignSelf: \"flex-end\" , marginRight: 10 , marginLeft: 10 , padding: 10}}>\n                      <TouchableOpacity onPress={() => this.updateProduct(\"save&close\")}><Text style={{padding: 10 , backgroundColor: \"rgb(51, 101, 153)\" , color: \"#fff\" , fontWeight: \"bold\" , borderRadius: 20 , marginRight: 10 }}>Save & Close</Text></TouchableOpacity>\n                      <TouchableOpacity onPress={() => this.props.navigation.goBack()}><Text style={{padding: 10 , backgroundColor: \"rgb(73, 72, 72)\" , color: \"#fff\" , fontWeight: \"bold\" , borderRadius: 20 }}>Close </Text></TouchableOpacity>\n                    </View>\n                  </View>\n              }\n            </View>\n        }\n      </React.Fragment>      \n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    product: state.product.product,\n    updateProduct: state.product.updateProduct,\n    searchOrder: state.scanpack,\n    updateProductAliasSuccess: state.product.updateProductAlias,\n    updateProductListData: state.product.updateProductList\n  }\n};\n\nconst mapDispatchToProps = {\n  GetProductDetail,\n  UpdateProductInfo,\n  SetItem,\n  SearchScanpackOrder,\n  updateProductAlias,\n  updateProductList\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductDetail)\n\n"]},"metadata":{},"sourceType":"module"}